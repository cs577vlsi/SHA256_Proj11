

================================================================
== Vivado HLS Report for 'sha256_final'
================================================================
* Date:           Wed Mar 31 11:05:44 2021

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        sha
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.34|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 3  |   56|   56|         1|          -|          -|    56|    no    |
        |- Loop 4  |   20|   20|         5|          -|          -|     4|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!tmp)
	5  / (tmp)
2 --> 
	3  / (!icmp)
	2  / (icmp)
3 --> 
	4  / true
4 --> 
	4  / (!tmp & !tmp_s)
	6  / (tmp) | (tmp_s)
5 --> 
	5  / (!exitcond)
	4  / (exitcond)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!tmp_68)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	11  / true
* FSM state operations: 

 <State 1>: 3.26ns
ST_1: p_read (15)  [1/1] 0.00ns
:0  %p_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read9)

ST_1: p_read_6 (16)  [1/1] 0.00ns
:1  %p_read_6 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read8)

ST_1: p_read_7 (17)  [1/1] 0.00ns
:2  %p_read_7 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read7)

ST_1: p_read_8 (18)  [1/1] 0.00ns
:3  %p_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read6)

ST_1: p_read_9 (19)  [1/1] 0.00ns
:4  %p_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read5)

ST_1: p_read48 (20)  [1/1] 0.00ns
:5  %p_read48 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read4)

ST_1: p_read27 (21)  [1/1] 0.00ns
:6  %p_read27 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read2)

ST_1: p_read16 (22)  [1/1] 0.00ns
:7  %p_read16 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read1)

ST_1: p_read35 (23)  [1/1] 0.00ns
:8  %p_read35 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read3)

ST_1: ctx_bitlen_0_read_1 (24)  [1/1] 0.00ns
:9  %ctx_bitlen_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_bitlen_0_read)

ST_1: ctx_datalen_read_2 (25)  [1/1] 0.00ns
:10  %ctx_datalen_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_datalen_read)

ST_1: tmp (26)  [1/1] 3.26ns  loc: ./sha256_impl.c:112
:11  %tmp = icmp ult i32 %ctx_datalen_read_2, 56

ST_1: ctx_data_addr (27)  [1/1] 0.00ns  loc: ./sha256_impl.c:113
:12  %ctx_data_addr = getelementptr [64 x i8]* %ctx_data, i32 0, i32 %ctx_datalen_read_2

ST_1: StgValue_29 (28)  [1/1] 2.32ns  loc: ./sha256_impl.c:113
:13  store i8 -128, i8* %ctx_data_addr, align 1

ST_1: StgValue_30 (29)  [1/1] 0.00ns  loc: ./sha256_impl.c:112
:14  br i1 %tmp, label %.preheader3.preheader, label %.preheader.preheader

ST_1: StgValue_31 (31)  [1/1] 1.59ns  loc: ./sha256_impl.c:118
.preheader.preheader:0  br label %.preheader

ST_1: StgValue_32 (67)  [1/1] 1.59ns  loc: ./sha256_impl.c:113
.preheader3.preheader:0  br label %.preheader3


 <State 2>: 6.15ns
ST_2: i_1_in (33)  [1/1] 0.00ns
.preheader:0  %i_1_in = phi i32 [ %i_1, %2 ], [ %ctx_datalen_read_2, %.preheader.preheader ]

ST_2: i_1 (34)  [1/1] 2.90ns  loc: ./sha256_impl.c:118
.preheader:1  %i_1 = add i32 %i_1_in, 1

ST_2: tmp_66 (35)  [1/1] 0.00ns  loc: ./sha256_impl.c:119
.preheader:2  %tmp_66 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %i_1, i32 6, i32 31)

ST_2: icmp (36)  [1/1] 3.25ns  loc: ./sha256_impl.c:119
.preheader:3  %icmp = icmp eq i26 %tmp_66, 0

ST_2: StgValue_37 (37)  [1/1] 0.00ns  loc: ./sha256_impl.c:119
.preheader:4  br i1 %icmp, label %2, label %3

ST_2: ctx_data_addr_2 (39)  [1/1] 0.00ns  loc: ./sha256_impl.c:120
:0  %ctx_data_addr_2 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 %i_1

ST_2: StgValue_39 (40)  [1/1] 2.32ns  loc: ./sha256_impl.c:120
:1  store i8 0, i8* %ctx_data_addr_2, align 1

ST_2: StgValue_40 (41)  [1/1] 0.00ns  loc: ./sha256_impl.c:120
:2  br label %.preheader

ST_2: call_ret1 (43)  [2/2] 1.59ns  loc: ./sha256_impl.c:121
:0  %call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read16, i32 %p_read27, i32 %p_read48, i32 %p_read_9, i32 %p_read_8, i32 %p_read_7, i32 %p_read_6, i32 %p_read, [64 x i8]* %ctx_data)


 <State 3>: 2.90ns
ST_3: call_ret1 (43)  [1/2] 2.90ns  loc: ./sha256_impl.c:121
:0  %call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read16, i32 %p_read27, i32 %p_read48, i32 %p_read_9, i32 %p_read_8, i32 %p_read_7, i32 %p_read_6, i32 %p_read, [64 x i8]* %ctx_data)

ST_3: ctx_state_0_ret4 (44)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:1  %ctx_state_0_ret4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0

ST_3: ctx_state_1_ret5 (45)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:2  %ctx_state_1_ret5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1

ST_3: ctx_state_2_ret6 (46)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:3  %ctx_state_2_ret6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2

ST_3: ctx_state_3_ret7 (47)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:4  %ctx_state_3_ret7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3

ST_3: ctx_state_4_ret8 (48)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:5  %ctx_state_4_ret8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4

ST_3: ctx_state_5_ret9 (49)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:6  %ctx_state_5_ret9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5

ST_3: ctx_state_6_ret1 (50)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:7  %ctx_state_6_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6

ST_3: ctx_state_7_ret1 (51)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
:8  %ctx_state_7_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7

ST_3: StgValue_51 (52)  [1/1] 1.59ns  loc: ./sha256_impl.c:122
:9  br label %4


 <State 4>: 5.33ns
ST_4: i_2 (54)  [1/1] 0.00ns
:0  %i_2 = phi i6 [ 0, %3 ], [ %i_5, %5 ]

ST_4: i_2_cast5 (55)  [1/1] 0.00ns  loc: ./sha256_impl.c:122
:1  %i_2_cast5 = zext i6 %i_2 to i32

ST_4: tmp_s (56)  [1/1] 3.88ns  loc: ./sha256_impl.c:122
:2  %tmp_s = icmp eq i6 %i_2, -8

ST_4: StgValue_55 (57)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 56, i64 56, i64 56)

ST_4: i_5 (58)  [1/1] 2.31ns  loc: ./sha256_impl.c:122
:4  %i_5 = add i6 %i_2, 1

ST_4: StgValue_57 (59)  [1/1] 0.00ns  loc: ./sha256_impl.c:122
:5  br i1 %tmp_s, label %.loopexit.loopexit, label %5

ST_4: ctx_data_addr_6 (61)  [1/1] 0.00ns  loc: ./sha256_impl.c:124
:0  %ctx_data_addr_6 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 %i_2_cast5

ST_4: StgValue_59 (62)  [1/1] 2.32ns  loc: ./sha256_impl.c:124
:1  store i8 0, i8* %ctx_data_addr_6, align 1

ST_4: StgValue_60 (63)  [1/1] 0.00ns  loc: ./sha256_impl.c:122
:2  br label %4

ST_4: StgValue_61 (65)  [1/1] 1.59ns
.loopexit.loopexit:0  br label %.loopexit

ST_4: tmp_74 (88)  [1/1] 0.00ns
.loopexit:8  %tmp_74 = trunc i32 %ctx_datalen_read_2 to i6

ST_4: tmp_56 (89)  [1/1] 0.00ns  loc: ./sha256_impl.c:130
.loopexit:9  %tmp_56 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %tmp_74, i3 0)

ST_4: tmp_74_cast (90)  [1/1] 0.00ns  loc: ./sha256_impl.c:130
.loopexit:10  %tmp_74_cast = zext i9 %tmp_56 to i32

ST_4: tmp_57 (91)  [1/1] 0.00ns  loc: ./sha256_impl.c:130 (grouped into LUT with out node tmp_58)
.loopexit:11  %tmp_57 = xor i32 %tmp_74_cast, -1

ST_4: tmp_58 (92)  [1/1] 3.26ns  loc: ./sha256_impl.c:130 (out node of the LUT)
.loopexit:12  %tmp_58 = icmp ugt i32 %ctx_bitlen_0_read_1, %tmp_57

ST_4: tmp_59 (93)  [1/1] 2.90ns  loc: ./sha256_impl.c:130
.loopexit:13  %tmp_59 = add i32 1, %p_read35

ST_4: tmp_86_read3 (94)  [1/1] 2.07ns  loc: ./sha256_impl.c:130
.loopexit:14  %tmp_86_read3 = select i1 %tmp_58, i32 %tmp_59, i32 %p_read35

ST_4: tmp_76 (95)  [1/1] 0.00ns
.loopexit:15  %tmp_76 = trunc i32 %ctx_datalen_read_2 to i5

ST_4: tmp_12 (96)  [1/1] 0.00ns
.loopexit:16  %tmp_12 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_76, i3 0)

ST_4: tmp_78 (97)  [1/1] 0.00ns
.loopexit:17  %tmp_78 = trunc i32 %ctx_bitlen_0_read_1 to i8

ST_4: tmp_14 (98)  [1/1] 0.00ns  loc: ./sha256_impl.c:130
.loopexit:18  %tmp_14 = zext i9 %tmp_56 to i16

ST_4: tmp_80 (99)  [1/1] 0.00ns
.loopexit:19  %tmp_80 = trunc i32 %ctx_bitlen_0_read_1 to i16

ST_4: tmp_16 (100)  [1/1] 0.00ns  loc: ./sha256_impl.c:130
.loopexit:20  %tmp_16 = zext i9 %tmp_56 to i24

ST_4: tmp_82 (101)  [1/1] 0.00ns
.loopexit:21  %tmp_82 = trunc i32 %ctx_bitlen_0_read_1 to i24

ST_4: ctx_bitlen (102)  [1/1] 2.90ns  loc: ./sha256_impl.c:130
.loopexit:22  %ctx_bitlen = add i32 %ctx_bitlen_0_read_1, %tmp_74_cast

ST_4: ctx_bitlen_cast3 (103)  [1/1] 2.60ns  loc: ./sha256_impl.c:131
.loopexit:23  %ctx_bitlen_cast3 = add i24 %tmp_16, %tmp_82

ST_4: ctx_bitlen_cast (104)  [1/1] 2.39ns  loc: ./sha256_impl.c:131
.loopexit:24  %ctx_bitlen_cast = add i16 %tmp_14, %tmp_80

ST_4: tmp_60 (105)  [1/1] 2.32ns  loc: ./sha256_impl.c:131
.loopexit:25  %tmp_60 = add i8 %tmp_78, %tmp_12

ST_4: ctx_data_addr_3 (106)  [1/1] 0.00ns  loc: ./sha256_impl.c:131
.loopexit:26  %ctx_data_addr_3 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 63

ST_4: StgValue_81 (107)  [1/1] 2.32ns  loc: ./sha256_impl.c:131
.loopexit:27  store i8 %tmp_60, i8* %ctx_data_addr_3, align 1

ST_4: tmp_61 (108)  [1/1] 0.00ns  loc: ./sha256_impl.c:132
.loopexit:28  %tmp_61 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %ctx_bitlen_cast, i32 8, i32 15)

ST_4: ctx_data_addr_4 (109)  [1/1] 0.00ns  loc: ./sha256_impl.c:132
.loopexit:29  %ctx_data_addr_4 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 62

ST_4: StgValue_84 (110)  [1/1] 2.32ns  loc: ./sha256_impl.c:132
.loopexit:30  store i8 %tmp_61, i8* %ctx_data_addr_4, align 1

ST_4: tmp_62 (111)  [1/1] 0.00ns  loc: ./sha256_impl.c:133
.loopexit:31  %tmp_62 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %ctx_bitlen_cast3, i32 16, i32 23)

ST_4: tmp_63 (114)  [1/1] 0.00ns  loc: ./sha256_impl.c:134
.loopexit:34  %tmp_63 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %ctx_bitlen, i32 24, i32 31)

ST_4: tmp_84 (117)  [1/1] 0.00ns  loc: ./sha256_impl.c:135
.loopexit:37  %tmp_84 = trunc i32 %tmp_86_read3 to i8

ST_4: tmp_64 (120)  [1/1] 0.00ns  loc: ./sha256_impl.c:136
.loopexit:40  %tmp_64 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_86_read3, i32 8, i32 15)

ST_4: tmp_65 (123)  [1/1] 0.00ns  loc: ./sha256_impl.c:137
.loopexit:43  %tmp_65 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_86_read3, i32 16, i32 23)

ST_4: tmp_67 (126)  [1/1] 0.00ns  loc: ./sha256_impl.c:138
.loopexit:46  %tmp_67 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_86_read3, i32 24, i32 31)


 <State 5>: 5.22ns
ST_5: i_0_in (69)  [1/1] 0.00ns
.preheader3:0  %i_0_in = phi i32 [ %i, %1 ], [ %ctx_datalen_read_2, %.preheader3.preheader ]

ST_5: i (70)  [1/1] 2.90ns  loc: ./sha256_impl.c:113
.preheader3:1  %i = add i32 %i_0_in, 1

ST_5: exitcond (71)  [1/1] 3.26ns  loc: ./sha256_impl.c:114
.preheader3:2  %exitcond = icmp eq i32 %i_0_in, 55

ST_5: StgValue_94 (72)  [1/1] 0.00ns  loc: ./sha256_impl.c:114
.preheader3:3  br i1 %exitcond, label %.loopexit.loopexit15, label %1

ST_5: ctx_data_addr_1 (74)  [1/1] 0.00ns  loc: ./sha256_impl.c:115
:0  %ctx_data_addr_1 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 %i

ST_5: StgValue_96 (75)  [1/1] 2.32ns  loc: ./sha256_impl.c:115
:1  store i8 0, i8* %ctx_data_addr_1, align 1

ST_5: StgValue_97 (76)  [1/1] 0.00ns  loc: ./sha256_impl.c:115
:2  br label %.preheader3

ST_5: StgValue_98 (78)  [1/1] 1.59ns
.loopexit.loopexit15:0  br label %.loopexit


 <State 6>: 2.32ns
ST_6: ctx_state (80)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:0  %ctx_state = phi i32 [ %ctx_state_0_ret4, %.loopexit.loopexit ], [ %p_read16, %.loopexit.loopexit15 ]

ST_6: ctx_state_1 (81)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:1  %ctx_state_1 = phi i32 [ %ctx_state_1_ret5, %.loopexit.loopexit ], [ %p_read27, %.loopexit.loopexit15 ]

ST_6: ctx_state_2 (82)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:2  %ctx_state_2 = phi i32 [ %ctx_state_2_ret6, %.loopexit.loopexit ], [ %p_read48, %.loopexit.loopexit15 ]

ST_6: ctx_state_3 (83)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:3  %ctx_state_3 = phi i32 [ %ctx_state_3_ret7, %.loopexit.loopexit ], [ %p_read_9, %.loopexit.loopexit15 ]

ST_6: ctx_state_4 (84)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:4  %ctx_state_4 = phi i32 [ %ctx_state_4_ret8, %.loopexit.loopexit ], [ %p_read_8, %.loopexit.loopexit15 ]

ST_6: ctx_state_5 (85)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:5  %ctx_state_5 = phi i32 [ %ctx_state_5_ret9, %.loopexit.loopexit ], [ %p_read_7, %.loopexit.loopexit15 ]

ST_6: ctx_state_6 (86)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:6  %ctx_state_6 = phi i32 [ %ctx_state_6_ret1, %.loopexit.loopexit ], [ %p_read_6, %.loopexit.loopexit15 ]

ST_6: ctx_state_7 (87)  [1/1] 0.00ns  loc: ./sha256_impl.c:121
.loopexit:7  %ctx_state_7 = phi i32 [ %ctx_state_7_ret1, %.loopexit.loopexit ], [ %p_read, %.loopexit.loopexit15 ]

ST_6: ctx_data_addr_5 (112)  [1/1] 0.00ns  loc: ./sha256_impl.c:133
.loopexit:32  %ctx_data_addr_5 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 61

ST_6: StgValue_108 (113)  [1/1] 2.32ns  loc: ./sha256_impl.c:133
.loopexit:33  store i8 %tmp_62, i8* %ctx_data_addr_5, align 1

ST_6: ctx_data_addr_7 (115)  [1/1] 0.00ns  loc: ./sha256_impl.c:134
.loopexit:35  %ctx_data_addr_7 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 60

ST_6: StgValue_110 (116)  [1/1] 2.32ns  loc: ./sha256_impl.c:134
.loopexit:36  store i8 %tmp_63, i8* %ctx_data_addr_7, align 1


 <State 7>: 2.32ns
ST_7: ctx_data_addr_8 (118)  [1/1] 0.00ns  loc: ./sha256_impl.c:135
.loopexit:38  %ctx_data_addr_8 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 59

ST_7: StgValue_112 (119)  [1/1] 2.32ns  loc: ./sha256_impl.c:135
.loopexit:39  store i8 %tmp_84, i8* %ctx_data_addr_8, align 1

ST_7: ctx_data_addr_9 (121)  [1/1] 0.00ns  loc: ./sha256_impl.c:136
.loopexit:41  %ctx_data_addr_9 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 58

ST_7: StgValue_114 (122)  [1/1] 2.32ns  loc: ./sha256_impl.c:136
.loopexit:42  store i8 %tmp_64, i8* %ctx_data_addr_9, align 1


 <State 8>: 2.32ns
ST_8: ctx_data_addr_10 (124)  [1/1] 0.00ns  loc: ./sha256_impl.c:137
.loopexit:44  %ctx_data_addr_10 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 57

ST_8: StgValue_116 (125)  [1/1] 2.32ns  loc: ./sha256_impl.c:137
.loopexit:45  store i8 %tmp_65, i8* %ctx_data_addr_10, align 1

ST_8: ctx_data_addr_11 (127)  [1/1] 0.00ns  loc: ./sha256_impl.c:138
.loopexit:47  %ctx_data_addr_11 = getelementptr [64 x i8]* %ctx_data, i32 0, i32 56

ST_8: StgValue_118 (128)  [1/1] 2.32ns  loc: ./sha256_impl.c:138
.loopexit:48  store i8 %tmp_67, i8* %ctx_data_addr_11, align 1


 <State 9>: 1.59ns
ST_9: call_ret (129)  [2/2] 1.59ns  loc: ./sha256_impl.c:139
.loopexit:49  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state, i32 %ctx_state_1, i32 %ctx_state_2, i32 %ctx_state_3, i32 %ctx_state_4, i32 %ctx_state_5, i32 %ctx_state_6, i32 %ctx_state_7, [64 x i8]* %ctx_data)


 <State 10>: 2.90ns
ST_10: call_ret (129)  [1/2] 2.90ns  loc: ./sha256_impl.c:139
.loopexit:49  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state, i32 %ctx_state_1, i32 %ctx_state_2, i32 %ctx_state_3, i32 %ctx_state_4, i32 %ctx_state_5, i32 %ctx_state_6, i32 %ctx_state_7, [64 x i8]* %ctx_data)

ST_10: ctx_state_0_ret (130)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:50  %ctx_state_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0

ST_10: ctx_state_1_ret (131)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:51  %ctx_state_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1

ST_10: ctx_state_2_ret (132)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:52  %ctx_state_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2

ST_10: ctx_state_3_ret (133)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:53  %ctx_state_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3

ST_10: ctx_state_4_ret (134)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:54  %ctx_state_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4

ST_10: ctx_state_5_ret (135)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:55  %ctx_state_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5

ST_10: ctx_state_6_ret (136)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:56  %ctx_state_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6

ST_10: ctx_state_7_ret (137)  [1/1] 0.00ns  loc: ./sha256_impl.c:139
.loopexit:57  %ctx_state_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7

ST_10: StgValue_129 (138)  [1/1] 1.59ns  loc: ./sha256_impl.c:143
.loopexit:58  br label %6


 <State 11>: 6.75ns
ST_11: i_3 (140)  [1/1] 0.00ns
:0  %i_3 = phi i3 [ 0, %.loopexit ], [ %i_6, %7 ]

ST_11: i_3_cast2 (141)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:1  %i_3_cast2 = zext i3 %i_3 to i32

ST_11: i_3_cast1 (142)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:2  %i_3_cast1 = zext i3 %i_3 to i5

ST_11: tmp_68 (143)  [1/1] 2.07ns  loc: ./sha256_impl.c:143
:3  %tmp_68 = icmp eq i3 %i_3, -4

ST_11: StgValue_134 (144)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_11: i_6 (145)  [1/1] 2.26ns  loc: ./sha256_impl.c:143
:5  %i_6 = add i3 %i_3, 1

ST_11: StgValue_136 (146)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:6  br i1 %tmp_68, label %8, label %7

ST_11: tmp_86 (148)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:0  %tmp_86 = trunc i3 %i_3 to i2

ST_11: tmp_69 (149)  [1/1] 0.00ns  loc: ./sha256_impl.c:145
:1  %tmp_69 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_86, i3 0)

ST_11: tmp_70 (150)  [1/1] 2.33ns  loc: ./sha256_impl.c:145
:2  %tmp_70 = sub i5 -8, %tmp_69

ST_11: tmp_94_cast (151)  [1/1] 0.00ns  loc: ./sha256_impl.c:145
:3  %tmp_94_cast = zext i5 %tmp_70 to i32

ST_11: tmp_71 (152)  [1/1] 4.42ns  loc: ./sha256_impl.c:145
:4  %tmp_71 = lshr i32 %ctx_state_0_ret, %tmp_94_cast

ST_11: tmp_88 (153)  [1/1] 0.00ns  loc: ./sha256_impl.c:145
:5  %tmp_88 = trunc i32 %tmp_71 to i8

ST_11: tmp_72 (156)  [1/1] 4.42ns  loc: ./sha256_impl.c:146
:8  %tmp_72 = lshr i32 %ctx_state_1_ret, %tmp_94_cast

ST_11: tmp_89 (157)  [1/1] 0.00ns  loc: ./sha256_impl.c:146
:9  %tmp_89 = trunc i32 %tmp_72 to i8

ST_11: tmp_73 (162)  [1/1] 4.42ns  loc: ./sha256_impl.c:147
:14  %tmp_73 = lshr i32 %ctx_state_2_ret, %tmp_94_cast

ST_11: tmp_90 (163)  [1/1] 0.00ns  loc: ./sha256_impl.c:147
:15  %tmp_90 = trunc i32 %tmp_73 to i8

ST_11: tmp_75 (168)  [1/1] 4.42ns  loc: ./sha256_impl.c:148
:20  %tmp_75 = lshr i32 %ctx_state_3_ret, %tmp_94_cast

ST_11: tmp_91 (169)  [1/1] 0.00ns  loc: ./sha256_impl.c:148
:21  %tmp_91 = trunc i32 %tmp_75 to i8

ST_11: tmp_77 (174)  [1/1] 4.42ns  loc: ./sha256_impl.c:149
:26  %tmp_77 = lshr i32 %ctx_state_4_ret, %tmp_94_cast

ST_11: tmp_92 (175)  [1/1] 0.00ns  loc: ./sha256_impl.c:149
:27  %tmp_92 = trunc i32 %tmp_77 to i8

ST_11: tmp_79 (180)  [1/1] 4.42ns  loc: ./sha256_impl.c:150
:32  %tmp_79 = lshr i32 %ctx_state_5_ret, %tmp_94_cast

ST_11: tmp_93 (181)  [1/1] 0.00ns  loc: ./sha256_impl.c:150
:33  %tmp_93 = trunc i32 %tmp_79 to i8

ST_11: tmp_81 (186)  [1/1] 4.42ns  loc: ./sha256_impl.c:151
:38  %tmp_81 = lshr i32 %ctx_state_6_ret, %tmp_94_cast

ST_11: tmp_94 (187)  [1/1] 0.00ns  loc: ./sha256_impl.c:151
:39  %tmp_94 = trunc i32 %tmp_81 to i8

ST_11: tmp_83 (192)  [1/1] 4.42ns  loc: ./sha256_impl.c:152
:44  %tmp_83 = lshr i32 %ctx_state_7_ret, %tmp_94_cast

ST_11: tmp_95 (193)  [1/1] 0.00ns  loc: ./sha256_impl.c:152
:45  %tmp_95 = trunc i32 %tmp_83 to i8

ST_11: StgValue_157 (200)  [1/1] 0.00ns
:0  ret void


 <State 12>: 4.39ns
ST_12: sum2 (158)  [1/1] 2.07ns  loc: ./sha256_impl.c:143
:10  %sum2 = xor i3 %i_3, -4

ST_12: sum2_cast (159)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:11  %sum2_cast = zext i3 %sum2 to i32

ST_12: hash_addr_1 (160)  [1/1] 0.00ns  loc: ./sha256_impl.c:146
:12  %hash_addr_1 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum2_cast

ST_12: StgValue_161 (161)  [1/1] 2.32ns  loc: ./sha256_impl.c:146
:13  store i8 %tmp_89, i8* %hash_addr_1, align 1

ST_12: sum1 (164)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:16  %sum1 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %i_3)

ST_12: sum4_cast (165)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:17  %sum4_cast = zext i4 %sum1 to i32

ST_12: hash_addr_2 (166)  [1/1] 0.00ns  loc: ./sha256_impl.c:147
:18  %hash_addr_2 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum4_cast

ST_12: StgValue_165 (167)  [1/1] 2.32ns  loc: ./sha256_impl.c:147
:19  store i8 %tmp_90, i8* %hash_addr_2, align 1


 <State 13>: 2.32ns
ST_13: hash_addr (154)  [1/1] 0.00ns  loc: ./sha256_impl.c:145
:6  %hash_addr = getelementptr [64 x i8]* %hash, i32 0, i32 %i_3_cast2

ST_13: StgValue_167 (155)  [1/1] 2.32ns  loc: ./sha256_impl.c:145
:7  store i8 %tmp_88, i8* %hash_addr, align 1

ST_13: sum6_cast8 (170)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:22  %sum6_cast8 = sext i3 %sum2 to i4

ST_13: sum6_cast (171)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:23  %sum6_cast = zext i4 %sum6_cast8 to i32

ST_13: hash_addr_3 (172)  [1/1] 0.00ns  loc: ./sha256_impl.c:148
:24  %hash_addr_3 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum6_cast

ST_13: StgValue_171 (173)  [1/1] 2.32ns  loc: ./sha256_impl.c:148
:25  store i8 %tmp_91, i8* %hash_addr_3, align 1


 <State 14>: 4.65ns
ST_14: sum4 (176)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:28  %sum4 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 -2, i3 %i_3)

ST_14: sum8_cast (177)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:29  %sum8_cast = zext i5 %sum4 to i32

ST_14: hash_addr_4 (178)  [1/1] 0.00ns  loc: ./sha256_impl.c:149
:30  %hash_addr_4 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum8_cast

ST_14: StgValue_175 (179)  [1/1] 2.32ns  loc: ./sha256_impl.c:149
:31  store i8 %tmp_92, i8* %hash_addr_4, align 1

ST_14: sum (182)  [1/1] 2.33ns  loc: ./sha256_impl.c:143
:34  %sum = add i5 -12, %i_3_cast1

ST_14: sum_cast (183)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:35  %sum_cast = zext i5 %sum to i32

ST_14: hash_addr_5 (184)  [1/1] 0.00ns  loc: ./sha256_impl.c:150
:36  %hash_addr_5 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum_cast

ST_14: StgValue_179 (185)  [1/1] 2.32ns  loc: ./sha256_impl.c:150
:37  store i8 %tmp_93, i8* %hash_addr_5, align 1


 <State 15>: 2.32ns
ST_15: sum1_cast7 (188)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:40  %sum1_cast7 = sext i4 %sum1 to i5

ST_15: sum1_cast (189)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:41  %sum1_cast = zext i5 %sum1_cast7 to i32

ST_15: hash_addr_6 (190)  [1/1] 0.00ns  loc: ./sha256_impl.c:151
:42  %hash_addr_6 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum1_cast

ST_15: StgValue_183 (191)  [1/1] 2.32ns  loc: ./sha256_impl.c:151
:43  store i8 %tmp_94, i8* %hash_addr_6, align 1

ST_15: sum3_cast6 (194)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:46  %sum3_cast6 = sext i3 %sum2 to i5

ST_15: sum3_cast (195)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:47  %sum3_cast = zext i5 %sum3_cast6 to i32

ST_15: hash_addr_7 (196)  [1/1] 0.00ns  loc: ./sha256_impl.c:152
:48  %hash_addr_7 = getelementptr [64 x i8]* %hash, i32 0, i32 %sum3_cast

ST_15: StgValue_187 (197)  [1/1] 2.32ns  loc: ./sha256_impl.c:152
:49  store i8 %tmp_95, i8* %hash_addr_7, align 1

ST_15: StgValue_188 (198)  [1/1] 0.00ns  loc: ./sha256_impl.c:143
:50  br label %6



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.26ns
The critical path consists of the following:
	wire read on port 'ctx_datalen_read' [25]  (0 ns)
	'icmp' operation ('tmp', ./sha256_impl.c:112) [26]  (3.26 ns)

 <State 2>: 6.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen') ('i', ./sha256_impl.c:118) [33]  (0 ns)
	'add' operation ('i', ./sha256_impl.c:118) [34]  (2.9 ns)
	'icmp' operation ('icmp', ./sha256_impl.c:119) [36]  (3.25 ns)

 <State 3>: 2.9ns
The critical path consists of the following:
	'call' operation ('call_ret1', ./sha256_impl.c:121) to 'sha256_transform' [43]  (2.9 ns)

 <State 4>: 5.33ns
The critical path consists of the following:
	'xor' operation ('tmp_57', ./sha256_impl.c:130) [91]  (0 ns)
	'icmp' operation ('tmp_58', ./sha256_impl.c:130) [92]  (3.26 ns)
	'select' operation ('tmp_86_read3', ./sha256_impl.c:130) [94]  (2.07 ns)

 <State 5>: 5.22ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen') ('i', ./sha256_impl.c:113) [69]  (0 ns)
	'add' operation ('i', ./sha256_impl.c:113) [70]  (2.9 ns)
	'getelementptr' operation ('ctx_data_addr_1', ./sha256_impl.c:115) [74]  (0 ns)
	'store' operation (./sha256_impl.c:115) of constant 0 on array 'ctx_data' [75]  (2.32 ns)

 <State 6>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_5', ./sha256_impl.c:133) [112]  (0 ns)
	'store' operation (./sha256_impl.c:133) of variable 'tmp_62', ./sha256_impl.c:133 on array 'ctx_data' [113]  (2.32 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_8', ./sha256_impl.c:135) [118]  (0 ns)
	'store' operation (./sha256_impl.c:135) of variable 'tmp_84', ./sha256_impl.c:135 on array 'ctx_data' [119]  (2.32 ns)

 <State 8>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_10', ./sha256_impl.c:137) [124]  (0 ns)
	'store' operation (./sha256_impl.c:137) of variable 'tmp_65', ./sha256_impl.c:137 on array 'ctx_data' [125]  (2.32 ns)

 <State 9>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret', ./sha256_impl.c:139) to 'sha256_transform' [129]  (1.59 ns)

 <State 10>: 2.9ns
The critical path consists of the following:
	'call' operation ('call_ret', ./sha256_impl.c:139) to 'sha256_transform' [129]  (2.9 ns)

 <State 11>: 6.75ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./sha256_impl.c:143) [140]  (0 ns)
	'sub' operation ('tmp_70', ./sha256_impl.c:145) [150]  (2.33 ns)
	'lshr' operation ('tmp_77', ./sha256_impl.c:149) [174]  (4.42 ns)

 <State 12>: 4.39ns
The critical path consists of the following:
	'xor' operation ('sum2', ./sha256_impl.c:143) [158]  (2.07 ns)
	'getelementptr' operation ('hash_addr_1', ./sha256_impl.c:146) [160]  (0 ns)
	'store' operation (./sha256_impl.c:146) of variable 'tmp_89', ./sha256_impl.c:146 on array 'hash' [161]  (2.32 ns)

 <State 13>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr', ./sha256_impl.c:145) [154]  (0 ns)
	'store' operation (./sha256_impl.c:145) of variable 'tmp_88', ./sha256_impl.c:145 on array 'hash' [155]  (2.32 ns)

 <State 14>: 4.65ns
The critical path consists of the following:
	'add' operation ('sum', ./sha256_impl.c:143) [182]  (2.33 ns)
	'getelementptr' operation ('hash_addr_5', ./sha256_impl.c:150) [184]  (0 ns)
	'store' operation (./sha256_impl.c:150) of variable 'tmp_93', ./sha256_impl.c:150 on array 'hash' [185]  (2.32 ns)

 <State 15>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr_6', ./sha256_impl.c:151) [190]  (0 ns)
	'store' operation (./sha256_impl.c:151) of variable 'tmp_94', ./sha256_impl.c:151 on array 'hash' [191]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
