// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> sha256_final::ap_ST_fsm_state1 = "1";
const sc_lv<15> sha256_final::ap_ST_fsm_state2 = "10";
const sc_lv<15> sha256_final::ap_ST_fsm_state3 = "100";
const sc_lv<15> sha256_final::ap_ST_fsm_state4 = "1000";
const sc_lv<15> sha256_final::ap_ST_fsm_state5 = "10000";
const sc_lv<15> sha256_final::ap_ST_fsm_state6 = "100000";
const sc_lv<15> sha256_final::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> sha256_final::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_2 = "10";
const sc_lv<32> sha256_final::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_final::ap_const_lv32_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_final::ap_const_lv1_0 = "0";
const sc_lv<1> sha256_final::ap_const_lv1_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_final::ap_const_lv32_A = "1010";
const sc_lv<32> sha256_final::ap_const_lv32_B = "1011";
const sc_lv<6> sha256_final::ap_const_lv6_0 = "000000";
const sc_lv<3> sha256_final::ap_const_lv3_0 = "000";
const sc_lv<32> sha256_final::ap_const_lv32_E = "1110";
const sc_lv<32> sha256_final::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_final::ap_const_lv32_3F = "111111";
const sc_lv<32> sha256_final::ap_const_lv32_3E = "111110";
const sc_lv<32> sha256_final::ap_const_lv32_3D = "111101";
const sc_lv<32> sha256_final::ap_const_lv32_5 = "101";
const sc_lv<32> sha256_final::ap_const_lv32_3C = "111100";
const sc_lv<32> sha256_final::ap_const_lv32_3B = "111011";
const sc_lv<32> sha256_final::ap_const_lv32_6 = "110";
const sc_lv<32> sha256_final::ap_const_lv32_3A = "111010";
const sc_lv<32> sha256_final::ap_const_lv32_39 = "111001";
const sc_lv<32> sha256_final::ap_const_lv32_7 = "111";
const sc_lv<32> sha256_final::ap_const_lv32_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_C = "1100";
const sc_lv<32> sha256_final::ap_const_lv32_D = "1101";
const sc_lv<8> sha256_final::ap_const_lv8_80 = "10000000";
const sc_lv<8> sha256_final::ap_const_lv8_0 = "00000000";
const sc_lv<32> sha256_final::ap_const_lv32_1F = "11111";
const sc_lv<26> sha256_final::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> sha256_final::ap_const_lv6_38 = "111000";
const sc_lv<6> sha256_final::ap_const_lv6_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_final::ap_const_lv32_F = "1111";
const sc_lv<32> sha256_final::ap_const_lv32_10 = "10000";
const sc_lv<32> sha256_final::ap_const_lv32_17 = "10111";
const sc_lv<32> sha256_final::ap_const_lv32_18 = "11000";
const sc_lv<32> sha256_final::ap_const_lv32_37 = "110111";
const sc_lv<3> sha256_final::ap_const_lv3_4 = "100";
const sc_lv<3> sha256_final::ap_const_lv3_1 = "1";
const sc_lv<5> sha256_final::ap_const_lv5_18 = "11000";
const sc_lv<2> sha256_final::ap_const_lv2_2 = "10";
const sc_lv<5> sha256_final::ap_const_lv5_14 = "10100";
const bool sha256_final::ap_const_boolean_1 = true;

sha256_final::sha256_final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sha256_transform_fu_491 = new sha256_transform("grp_sha256_transform_fu_491");
    grp_sha256_transform_fu_491->ap_clk(ap_clk);
    grp_sha256_transform_fu_491->ap_rst(ap_rst);
    grp_sha256_transform_fu_491->ap_start(grp_sha256_transform_fu_491_ap_start);
    grp_sha256_transform_fu_491->ap_done(grp_sha256_transform_fu_491_ap_done);
    grp_sha256_transform_fu_491->ap_idle(grp_sha256_transform_fu_491_ap_idle);
    grp_sha256_transform_fu_491->ap_ready(grp_sha256_transform_fu_491_ap_ready);
    grp_sha256_transform_fu_491->ctx_state_0_read(grp_sha256_transform_fu_491_ctx_state_0_read);
    grp_sha256_transform_fu_491->ctx_state_1_read(grp_sha256_transform_fu_491_ctx_state_1_read);
    grp_sha256_transform_fu_491->ctx_state_2_read(grp_sha256_transform_fu_491_ctx_state_2_read);
    grp_sha256_transform_fu_491->ctx_state_3_read(grp_sha256_transform_fu_491_ctx_state_3_read);
    grp_sha256_transform_fu_491->ctx_state_4_read(grp_sha256_transform_fu_491_ctx_state_4_read);
    grp_sha256_transform_fu_491->ctx_state_5_read(grp_sha256_transform_fu_491_ctx_state_5_read);
    grp_sha256_transform_fu_491->ctx_state_6_read(grp_sha256_transform_fu_491_ctx_state_6_read);
    grp_sha256_transform_fu_491->ctx_state_7_read(grp_sha256_transform_fu_491_ctx_state_7_read);
    grp_sha256_transform_fu_491->data_address0(grp_sha256_transform_fu_491_data_address0);
    grp_sha256_transform_fu_491->data_ce0(grp_sha256_transform_fu_491_data_ce0);
    grp_sha256_transform_fu_491->data_q0(ctx_data_q0);
    grp_sha256_transform_fu_491->data_address1(grp_sha256_transform_fu_491_data_address1);
    grp_sha256_transform_fu_491->data_ce1(grp_sha256_transform_fu_491_data_ce1);
    grp_sha256_transform_fu_491->data_q1(ctx_data_q1);
    grp_sha256_transform_fu_491->ap_return_0(grp_sha256_transform_fu_491_ap_return_0);
    grp_sha256_transform_fu_491->ap_return_1(grp_sha256_transform_fu_491_ap_return_1);
    grp_sha256_transform_fu_491->ap_return_2(grp_sha256_transform_fu_491_ap_return_2);
    grp_sha256_transform_fu_491->ap_return_3(grp_sha256_transform_fu_491_ap_return_3);
    grp_sha256_transform_fu_491->ap_return_4(grp_sha256_transform_fu_491_ap_return_4);
    grp_sha256_transform_fu_491->ap_return_5(grp_sha256_transform_fu_491_ap_return_5);
    grp_sha256_transform_fu_491->ap_return_6(grp_sha256_transform_fu_491_ap_return_6);
    grp_sha256_transform_fu_491->ap_return_7(grp_sha256_transform_fu_491_ap_return_7);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_68_fu_809_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_68_fu_809_p2 );

    SC_METHOD(thread_ctx_bitlen_cast3_fu_704_p2);
    sensitive << ( tmp_16_fu_692_p1 );
    sensitive << ( tmp_82_fu_696_p1 );

    SC_METHOD(thread_ctx_bitlen_cast_fu_710_p2);
    sensitive << ( tmp_14_fu_685_p1 );
    sensitive << ( tmp_80_fu_689_p1 );

    SC_METHOD(thread_ctx_bitlen_fu_699_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( tmp_74_cast_fu_644_p1 );

    SC_METHOD(thread_ctx_data_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen_read );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( i_1_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( grp_sha256_transform_fu_491_data_address0 );
    sensitive << ( icmp_fu_610_p2 );
    sensitive << ( i_2_cast5_fu_616_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_fu_788_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_491_data_address1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( grp_sha256_transform_fu_491_data_ce0 );
    sensitive << ( icmp_fu_610_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_491_data_ce1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( tmp_63_reg_1090 );
    sensitive << ( tmp_64_reg_1100 );
    sensitive << ( tmp_67_reg_1110 );
    sensitive << ( icmp_fu_610_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_60_fu_716_p2 );

    SC_METHOD(thread_ctx_data_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_62_reg_1085 );
    sensitive << ( tmp_84_reg_1095 );
    sensitive << ( tmp_65_reg_1105 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ctx_bitlen_cast_fu_710_p2 );

    SC_METHOD(thread_ctx_data_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( icmp_fu_610_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_we1);
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_795_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond_fu_795_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_in_reg_390 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ap_start);
    sensitive << ( ap_reg_grp_sha256_transform_fu_491_ap_start );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_0_read);
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_reg_399 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_1_read);
    sensitive << ( p_read2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_1_reg_409 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_2_read);
    sensitive << ( p_read4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_2_reg_419 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_3_read);
    sensitive << ( p_read5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_3_reg_429 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_4_read);
    sensitive << ( p_read6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_4_reg_439 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_5_read);
    sensitive << ( p_read7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_5_reg_449 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_6_read);
    sensitive << ( p_read8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_6_reg_459 );

    SC_METHOD(thread_grp_sha256_transform_fu_491_ctx_state_7_read);
    sensitive << ( p_read9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_7_reg_469 );

    SC_METHOD(thread_hash_address0);
    sensitive << ( i_3_cast2_reg_1123 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum2_cast_fu_929_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( sum8_cast_fu_963_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sum1_cast_fu_981_p1 );

    SC_METHOD(thread_hash_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum4_cast_fu_942_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( sum6_cast_fu_950_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sum_cast_fu_973_p1 );
    sensitive << ( sum3_cast_fu_989_p1 );

    SC_METHOD(thread_hash_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_hash_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_hash_d0);
    sensitive << ( tmp_88_reg_1141 );
    sensitive << ( tmp_89_reg_1146 );
    sensitive << ( tmp_92_reg_1161 );
    sensitive << ( tmp_94_reg_1171 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_hash_d1);
    sensitive << ( tmp_90_reg_1151 );
    sensitive << ( tmp_91_reg_1156 );
    sensitive << ( tmp_93_reg_1166 );
    sensitive << ( tmp_95_reg_1176 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_hash_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_hash_we1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_1_fu_593_p2);
    sensitive << ( i_1_in_reg_370 );

    SC_METHOD(thread_i_2_cast5_fu_616_p1);
    sensitive << ( i_2_reg_379 );

    SC_METHOD(thread_i_3_cast1_fu_805_p1);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_i_3_cast2_fu_801_p1);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_i_5_fu_627_p2);
    sensitive << ( i_2_reg_379 );

    SC_METHOD(thread_i_6_fu_815_p2);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_i_fu_788_p2);
    sensitive << ( i_0_in_reg_390 );

    SC_METHOD(thread_icmp_fu_610_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_66_fu_600_p4 );

    SC_METHOD(thread_sum1_cast7_fu_978_p1);
    sensitive << ( sum1_reg_1187 );

    SC_METHOD(thread_sum1_cast_fu_981_p1);
    sensitive << ( sum1_cast7_fu_978_p1 );

    SC_METHOD(thread_sum1_fu_934_p3);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_sum2_cast_fu_929_p1);
    sensitive << ( sum2_fu_923_p2 );

    SC_METHOD(thread_sum2_fu_923_p2);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_sum3_cast6_fu_986_p1);
    sensitive << ( sum2_reg_1181 );

    SC_METHOD(thread_sum3_cast_fu_989_p1);
    sensitive << ( sum3_cast6_fu_986_p1 );

    SC_METHOD(thread_sum4_cast_fu_942_p1);
    sensitive << ( sum1_fu_934_p3 );

    SC_METHOD(thread_sum4_fu_955_p3);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_sum6_cast8_fu_947_p1);
    sensitive << ( sum2_reg_1181 );

    SC_METHOD(thread_sum6_cast_fu_950_p1);
    sensitive << ( sum6_cast8_fu_947_p1 );

    SC_METHOD(thread_sum8_cast_fu_963_p1);
    sensitive << ( sum4_fu_955_p3 );

    SC_METHOD(thread_sum_cast_fu_973_p1);
    sensitive << ( sum_fu_968_p2 );

    SC_METHOD(thread_sum_fu_968_p2);
    sensitive << ( i_3_cast1_reg_1128 );

    SC_METHOD(thread_tmp_12_fu_674_p3);
    sensitive << ( tmp_76_fu_671_p1 );

    SC_METHOD(thread_tmp_14_fu_685_p1);
    sensitive << ( tmp_56_fu_636_p3 );

    SC_METHOD(thread_tmp_16_fu_692_p1);
    sensitive << ( tmp_56_fu_636_p3 );

    SC_METHOD(thread_tmp_56_fu_636_p3);
    sensitive << ( tmp_74_fu_633_p1 );

    SC_METHOD(thread_tmp_57_fu_648_p2);
    sensitive << ( tmp_74_cast_fu_644_p1 );

    SC_METHOD(thread_tmp_58_fu_654_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( tmp_57_fu_648_p2 );

    SC_METHOD(thread_tmp_59_fu_659_p2);
    sensitive << ( p_read3 );

    SC_METHOD(thread_tmp_60_fu_716_p2);
    sensitive << ( tmp_78_fu_682_p1 );
    sensitive << ( tmp_12_fu_674_p3 );

    SC_METHOD(thread_tmp_66_fu_600_p4);
    sensitive << ( i_1_fu_593_p2 );

    SC_METHOD(thread_tmp_68_fu_809_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_tmp_69_fu_825_p3);
    sensitive << ( tmp_86_fu_821_p1 );

    SC_METHOD(thread_tmp_70_fu_833_p2);
    sensitive << ( tmp_69_fu_825_p3 );

    SC_METHOD(thread_tmp_71_fu_843_p2);
    sensitive << ( reg_547 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_72_fu_853_p2);
    sensitive << ( reg_552 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_73_fu_863_p2);
    sensitive << ( reg_557 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_74_cast_fu_644_p1);
    sensitive << ( tmp_56_fu_636_p3 );

    SC_METHOD(thread_tmp_74_fu_633_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_75_fu_873_p2);
    sensitive << ( reg_562 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_76_fu_671_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_77_fu_883_p2);
    sensitive << ( reg_567 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_78_fu_682_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_79_fu_893_p2);
    sensitive << ( reg_572 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_80_fu_689_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_81_fu_903_p2);
    sensitive << ( reg_577 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_82_fu_696_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_83_fu_913_p2);
    sensitive << ( reg_582 );
    sensitive << ( tmp_94_cast_fu_839_p1 );

    SC_METHOD(thread_tmp_84_fu_754_p1);
    sensitive << ( tmp_86_read3_fu_664_p3 );

    SC_METHOD(thread_tmp_86_fu_821_p1);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_tmp_86_read3_fu_664_p3);
    sensitive << ( p_read3 );
    sensitive << ( tmp_58_fu_654_p2 );
    sensitive << ( tmp_59_fu_659_p2 );

    SC_METHOD(thread_tmp_88_fu_849_p1);
    sensitive << ( tmp_71_fu_843_p2 );

    SC_METHOD(thread_tmp_89_fu_859_p1);
    sensitive << ( tmp_72_fu_853_p2 );

    SC_METHOD(thread_tmp_90_fu_869_p1);
    sensitive << ( tmp_73_fu_863_p2 );

    SC_METHOD(thread_tmp_91_fu_879_p1);
    sensitive << ( tmp_75_fu_873_p2 );

    SC_METHOD(thread_tmp_92_fu_889_p1);
    sensitive << ( tmp_77_fu_883_p2 );

    SC_METHOD(thread_tmp_93_fu_899_p1);
    sensitive << ( tmp_79_fu_893_p2 );

    SC_METHOD(thread_tmp_94_cast_fu_839_p1);
    sensitive << ( tmp_70_fu_833_p2 );

    SC_METHOD(thread_tmp_94_fu_909_p1);
    sensitive << ( tmp_81_fu_903_p2 );

    SC_METHOD(thread_tmp_95_fu_919_p1);
    sensitive << ( tmp_83_fu_913_p2 );

    SC_METHOD(thread_tmp_fu_587_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_s_fu_621_p2);
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_379 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_sha256_transform_fu_491_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_fu_587_p2 );
    sensitive << ( tmp_reg_1065 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_621_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_68_fu_809_p2 );
    sensitive << ( icmp_fu_610_p2 );
    sensitive << ( exitcond_fu_795_p2 );

    ap_CS_fsm = "000000000000001";
    ap_reg_grp_sha256_transform_fu_491_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_data_address0, "(port)ctx_data_address0");
    sc_trace(mVcdFile, ctx_data_ce0, "(port)ctx_data_ce0");
    sc_trace(mVcdFile, ctx_data_we0, "(port)ctx_data_we0");
    sc_trace(mVcdFile, ctx_data_d0, "(port)ctx_data_d0");
    sc_trace(mVcdFile, ctx_data_q0, "(port)ctx_data_q0");
    sc_trace(mVcdFile, ctx_data_address1, "(port)ctx_data_address1");
    sc_trace(mVcdFile, ctx_data_ce1, "(port)ctx_data_ce1");
    sc_trace(mVcdFile, ctx_data_we1, "(port)ctx_data_we1");
    sc_trace(mVcdFile, ctx_data_d1, "(port)ctx_data_d1");
    sc_trace(mVcdFile, ctx_data_q1, "(port)ctx_data_q1");
    sc_trace(mVcdFile, ctx_datalen_read, "(port)ctx_datalen_read");
    sc_trace(mVcdFile, ctx_bitlen_0_read, "(port)ctx_bitlen_0_read");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, hash_address0, "(port)hash_address0");
    sc_trace(mVcdFile, hash_ce0, "(port)hash_ce0");
    sc_trace(mVcdFile, hash_we0, "(port)hash_we0");
    sc_trace(mVcdFile, hash_d0, "(port)hash_d0");
    sc_trace(mVcdFile, hash_address1, "(port)hash_address1");
    sc_trace(mVcdFile, hash_ce1, "(port)hash_ce1");
    sc_trace(mVcdFile, hash_we1, "(port)hash_we1");
    sc_trace(mVcdFile, hash_d1, "(port)hash_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_547, "reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_done, "grp_sha256_transform_fu_491_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_552, "reg_552");
    sc_trace(mVcdFile, reg_557, "reg_557");
    sc_trace(mVcdFile, reg_562, "reg_562");
    sc_trace(mVcdFile, reg_567, "reg_567");
    sc_trace(mVcdFile, reg_572, "reg_572");
    sc_trace(mVcdFile, reg_577, "reg_577");
    sc_trace(mVcdFile, reg_582, "reg_582");
    sc_trace(mVcdFile, tmp_fu_587_p2, "tmp_fu_587_p2");
    sc_trace(mVcdFile, tmp_reg_1065, "tmp_reg_1065");
    sc_trace(mVcdFile, i_1_fu_593_p2, "i_1_fu_593_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_5_fu_627_p2, "i_5_fu_627_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_62_reg_1085, "tmp_62_reg_1085");
    sc_trace(mVcdFile, tmp_s_fu_621_p2, "tmp_s_fu_621_p2");
    sc_trace(mVcdFile, tmp_63_reg_1090, "tmp_63_reg_1090");
    sc_trace(mVcdFile, tmp_84_fu_754_p1, "tmp_84_fu_754_p1");
    sc_trace(mVcdFile, tmp_84_reg_1095, "tmp_84_reg_1095");
    sc_trace(mVcdFile, tmp_64_reg_1100, "tmp_64_reg_1100");
    sc_trace(mVcdFile, tmp_65_reg_1105, "tmp_65_reg_1105");
    sc_trace(mVcdFile, tmp_67_reg_1110, "tmp_67_reg_1110");
    sc_trace(mVcdFile, i_fu_788_p2, "i_fu_788_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_3_cast2_fu_801_p1, "i_3_cast2_fu_801_p1");
    sc_trace(mVcdFile, i_3_cast2_reg_1123, "i_3_cast2_reg_1123");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_3_cast1_fu_805_p1, "i_3_cast1_fu_805_p1");
    sc_trace(mVcdFile, i_3_cast1_reg_1128, "i_3_cast1_reg_1128");
    sc_trace(mVcdFile, i_6_fu_815_p2, "i_6_fu_815_p2");
    sc_trace(mVcdFile, i_6_reg_1136, "i_6_reg_1136");
    sc_trace(mVcdFile, tmp_88_fu_849_p1, "tmp_88_fu_849_p1");
    sc_trace(mVcdFile, tmp_88_reg_1141, "tmp_88_reg_1141");
    sc_trace(mVcdFile, tmp_68_fu_809_p2, "tmp_68_fu_809_p2");
    sc_trace(mVcdFile, tmp_89_fu_859_p1, "tmp_89_fu_859_p1");
    sc_trace(mVcdFile, tmp_89_reg_1146, "tmp_89_reg_1146");
    sc_trace(mVcdFile, tmp_90_fu_869_p1, "tmp_90_fu_869_p1");
    sc_trace(mVcdFile, tmp_90_reg_1151, "tmp_90_reg_1151");
    sc_trace(mVcdFile, tmp_91_fu_879_p1, "tmp_91_fu_879_p1");
    sc_trace(mVcdFile, tmp_91_reg_1156, "tmp_91_reg_1156");
    sc_trace(mVcdFile, tmp_92_fu_889_p1, "tmp_92_fu_889_p1");
    sc_trace(mVcdFile, tmp_92_reg_1161, "tmp_92_reg_1161");
    sc_trace(mVcdFile, tmp_93_fu_899_p1, "tmp_93_fu_899_p1");
    sc_trace(mVcdFile, tmp_93_reg_1166, "tmp_93_reg_1166");
    sc_trace(mVcdFile, tmp_94_fu_909_p1, "tmp_94_fu_909_p1");
    sc_trace(mVcdFile, tmp_94_reg_1171, "tmp_94_reg_1171");
    sc_trace(mVcdFile, tmp_95_fu_919_p1, "tmp_95_fu_919_p1");
    sc_trace(mVcdFile, tmp_95_reg_1176, "tmp_95_reg_1176");
    sc_trace(mVcdFile, sum2_fu_923_p2, "sum2_fu_923_p2");
    sc_trace(mVcdFile, sum2_reg_1181, "sum2_reg_1181");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sum1_fu_934_p3, "sum1_fu_934_p3");
    sc_trace(mVcdFile, sum1_reg_1187, "sum1_reg_1187");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_start, "grp_sha256_transform_fu_491_ap_start");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_idle, "grp_sha256_transform_fu_491_ap_idle");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_ready, "grp_sha256_transform_fu_491_ap_ready");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_0_read, "grp_sha256_transform_fu_491_ctx_state_0_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_1_read, "grp_sha256_transform_fu_491_ctx_state_1_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_2_read, "grp_sha256_transform_fu_491_ctx_state_2_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_3_read, "grp_sha256_transform_fu_491_ctx_state_3_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_4_read, "grp_sha256_transform_fu_491_ctx_state_4_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_5_read, "grp_sha256_transform_fu_491_ctx_state_5_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_6_read, "grp_sha256_transform_fu_491_ctx_state_6_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ctx_state_7_read, "grp_sha256_transform_fu_491_ctx_state_7_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_data_address0, "grp_sha256_transform_fu_491_data_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_data_ce0, "grp_sha256_transform_fu_491_data_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_data_address1, "grp_sha256_transform_fu_491_data_address1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_data_ce1, "grp_sha256_transform_fu_491_data_ce1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_0, "grp_sha256_transform_fu_491_ap_return_0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_1, "grp_sha256_transform_fu_491_ap_return_1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_2, "grp_sha256_transform_fu_491_ap_return_2");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_3, "grp_sha256_transform_fu_491_ap_return_3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_4, "grp_sha256_transform_fu_491_ap_return_4");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_5, "grp_sha256_transform_fu_491_ap_return_5");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_6, "grp_sha256_transform_fu_491_ap_return_6");
    sc_trace(mVcdFile, grp_sha256_transform_fu_491_ap_return_7, "grp_sha256_transform_fu_491_ap_return_7");
    sc_trace(mVcdFile, i_1_in_reg_370, "i_1_in_reg_370");
    sc_trace(mVcdFile, icmp_fu_610_p2, "icmp_fu_610_p2");
    sc_trace(mVcdFile, i_2_reg_379, "i_2_reg_379");
    sc_trace(mVcdFile, i_0_in_reg_390, "i_0_in_reg_390");
    sc_trace(mVcdFile, exitcond_fu_795_p2, "exitcond_fu_795_p2");
    sc_trace(mVcdFile, ctx_state_reg_399, "ctx_state_reg_399");
    sc_trace(mVcdFile, ctx_state_1_reg_409, "ctx_state_1_reg_409");
    sc_trace(mVcdFile, ctx_state_2_reg_419, "ctx_state_2_reg_419");
    sc_trace(mVcdFile, ctx_state_3_reg_429, "ctx_state_3_reg_429");
    sc_trace(mVcdFile, ctx_state_4_reg_439, "ctx_state_4_reg_439");
    sc_trace(mVcdFile, ctx_state_5_reg_449, "ctx_state_5_reg_449");
    sc_trace(mVcdFile, ctx_state_6_reg_459, "ctx_state_6_reg_459");
    sc_trace(mVcdFile, ctx_state_7_reg_469, "ctx_state_7_reg_469");
    sc_trace(mVcdFile, i_3_reg_479, "i_3_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_reg_grp_sha256_transform_fu_491_ap_start, "ap_reg_grp_sha256_transform_fu_491_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_2_cast5_fu_616_p1, "i_2_cast5_fu_616_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sum2_cast_fu_929_p1, "sum2_cast_fu_929_p1");
    sc_trace(mVcdFile, sum4_cast_fu_942_p1, "sum4_cast_fu_942_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sum6_cast_fu_950_p1, "sum6_cast_fu_950_p1");
    sc_trace(mVcdFile, sum8_cast_fu_963_p1, "sum8_cast_fu_963_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, sum_cast_fu_973_p1, "sum_cast_fu_973_p1");
    sc_trace(mVcdFile, sum1_cast_fu_981_p1, "sum1_cast_fu_981_p1");
    sc_trace(mVcdFile, sum3_cast_fu_989_p1, "sum3_cast_fu_989_p1");
    sc_trace(mVcdFile, tmp_60_fu_716_p2, "tmp_60_fu_716_p2");
    sc_trace(mVcdFile, tmp_66_fu_600_p4, "tmp_66_fu_600_p4");
    sc_trace(mVcdFile, tmp_74_fu_633_p1, "tmp_74_fu_633_p1");
    sc_trace(mVcdFile, tmp_56_fu_636_p3, "tmp_56_fu_636_p3");
    sc_trace(mVcdFile, tmp_74_cast_fu_644_p1, "tmp_74_cast_fu_644_p1");
    sc_trace(mVcdFile, tmp_57_fu_648_p2, "tmp_57_fu_648_p2");
    sc_trace(mVcdFile, tmp_58_fu_654_p2, "tmp_58_fu_654_p2");
    sc_trace(mVcdFile, tmp_59_fu_659_p2, "tmp_59_fu_659_p2");
    sc_trace(mVcdFile, tmp_76_fu_671_p1, "tmp_76_fu_671_p1");
    sc_trace(mVcdFile, tmp_16_fu_692_p1, "tmp_16_fu_692_p1");
    sc_trace(mVcdFile, tmp_82_fu_696_p1, "tmp_82_fu_696_p1");
    sc_trace(mVcdFile, tmp_14_fu_685_p1, "tmp_14_fu_685_p1");
    sc_trace(mVcdFile, tmp_80_fu_689_p1, "tmp_80_fu_689_p1");
    sc_trace(mVcdFile, tmp_78_fu_682_p1, "tmp_78_fu_682_p1");
    sc_trace(mVcdFile, tmp_12_fu_674_p3, "tmp_12_fu_674_p3");
    sc_trace(mVcdFile, ctx_bitlen_cast_fu_710_p2, "ctx_bitlen_cast_fu_710_p2");
    sc_trace(mVcdFile, ctx_bitlen_cast3_fu_704_p2, "ctx_bitlen_cast3_fu_704_p2");
    sc_trace(mVcdFile, ctx_bitlen_fu_699_p2, "ctx_bitlen_fu_699_p2");
    sc_trace(mVcdFile, tmp_86_read3_fu_664_p3, "tmp_86_read3_fu_664_p3");
    sc_trace(mVcdFile, tmp_86_fu_821_p1, "tmp_86_fu_821_p1");
    sc_trace(mVcdFile, tmp_69_fu_825_p3, "tmp_69_fu_825_p3");
    sc_trace(mVcdFile, tmp_70_fu_833_p2, "tmp_70_fu_833_p2");
    sc_trace(mVcdFile, tmp_94_cast_fu_839_p1, "tmp_94_cast_fu_839_p1");
    sc_trace(mVcdFile, tmp_71_fu_843_p2, "tmp_71_fu_843_p2");
    sc_trace(mVcdFile, tmp_72_fu_853_p2, "tmp_72_fu_853_p2");
    sc_trace(mVcdFile, tmp_73_fu_863_p2, "tmp_73_fu_863_p2");
    sc_trace(mVcdFile, tmp_75_fu_873_p2, "tmp_75_fu_873_p2");
    sc_trace(mVcdFile, tmp_77_fu_883_p2, "tmp_77_fu_883_p2");
    sc_trace(mVcdFile, tmp_79_fu_893_p2, "tmp_79_fu_893_p2");
    sc_trace(mVcdFile, tmp_81_fu_903_p2, "tmp_81_fu_903_p2");
    sc_trace(mVcdFile, tmp_83_fu_913_p2, "tmp_83_fu_913_p2");
    sc_trace(mVcdFile, sum6_cast8_fu_947_p1, "sum6_cast8_fu_947_p1");
    sc_trace(mVcdFile, sum4_fu_955_p3, "sum4_fu_955_p3");
    sc_trace(mVcdFile, sum_fu_968_p2, "sum_fu_968_p2");
    sc_trace(mVcdFile, sum1_cast7_fu_978_p1, "sum1_cast7_fu_978_p1");
    sc_trace(mVcdFile, sum3_cast6_fu_986_p1, "sum3_cast6_fu_986_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_final::~sha256_final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sha256_transform_fu_491;
}

void sha256_final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sha256_transform_fu_491_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_610_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            ap_reg_grp_sha256_transform_fu_491_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_491_ap_ready.read())) {
            ap_reg_grp_sha256_transform_fu_491_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_1_reg_409 = p_read2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_1_reg_409 = reg_552.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_2_reg_419 = p_read4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_2_reg_419 = reg_557.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_3_reg_429 = p_read5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_3_reg_429 = reg_562.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_4_reg_439 = p_read6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_4_reg_439 = reg_567.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_5_reg_449 = p_read7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_5_reg_449 = reg_572.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_6_reg_459 = p_read8.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_6_reg_459 = reg_577.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_7_reg_469 = p_read9.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_7_reg_469 = reg_582.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
        ctx_state_reg_399 = p_read1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) {
        ctx_state_reg_399 = reg_547.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_fu_587_p2.read(), ap_const_lv1_1))) {
        i_0_in_reg_390 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_795_p2.read()))) {
        i_0_in_reg_390 = i_fu_788_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_fu_587_p2.read(), ap_const_lv1_0))) {
        i_1_in_reg_370 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read()))) {
        i_1_in_reg_370 = i_1_fu_593_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_621_p2.read()))) {
        i_2_reg_379 = i_5_fu_627_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1))) {
        i_2_reg_379 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_3_reg_479 = i_6_reg_1136.read();
    } else if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        i_3_reg_479 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_cast1_reg_1128 = i_3_cast1_fu_805_p1.read();
        i_3_cast2_reg_1123 = i_3_cast2_fu_801_p1.read();
        i_6_reg_1136 = i_6_fu_815_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        reg_547 = grp_sha256_transform_fu_491_ap_return_0.read();
        reg_552 = grp_sha256_transform_fu_491_ap_return_1.read();
        reg_557 = grp_sha256_transform_fu_491_ap_return_2.read();
        reg_562 = grp_sha256_transform_fu_491_ap_return_3.read();
        reg_567 = grp_sha256_transform_fu_491_ap_return_4.read();
        reg_572 = grp_sha256_transform_fu_491_ap_return_5.read();
        reg_577 = grp_sha256_transform_fu_491_ap_return_6.read();
        reg_582 = grp_sha256_transform_fu_491_ap_return_7.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sum1_reg_1187 = sum1_fu_934_p3.read();
        sum2_reg_1181 = sum2_fu_923_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read())))) {
        tmp_62_reg_1085 = ctx_bitlen_cast3_fu_704_p2.read().range(23, 16);
        tmp_63_reg_1090 = ctx_bitlen_fu_699_p2.read().range(31, 24);
        tmp_64_reg_1100 = tmp_86_read3_fu_664_p3.read().range(15, 8);
        tmp_65_reg_1105 = tmp_86_read3_fu_664_p3.read().range(23, 16);
        tmp_67_reg_1110 = tmp_86_read3_fu_664_p3.read().range(31, 24);
        tmp_84_reg_1095 = tmp_84_fu_754_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_68_fu_809_p2.read()))) {
        tmp_88_reg_1141 = tmp_88_fu_849_p1.read();
        tmp_89_reg_1146 = tmp_89_fu_859_p1.read();
        tmp_90_reg_1151 = tmp_90_fu_869_p1.read();
        tmp_91_reg_1156 = tmp_91_fu_879_p1.read();
        tmp_92_reg_1161 = tmp_92_fu_889_p1.read();
        tmp_93_reg_1166 = tmp_93_fu_899_p1.read();
        tmp_94_reg_1171 = tmp_94_fu_909_p1.read();
        tmp_95_reg_1176 = tmp_95_fu_919_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_reg_1065 = tmp_fu_587_p2.read();
    }
}

void sha256_final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_final::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sha256_final::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sha256_final::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sha256_final::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sha256_final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_68_fu_809_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_68_fu_809_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_bitlen_cast3_fu_704_p2() {
    ctx_bitlen_cast3_fu_704_p2 = (!tmp_16_fu_692_p1.read().is_01() || !tmp_82_fu_696_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(tmp_16_fu_692_p1.read()) + sc_biguint<24>(tmp_82_fu_696_p1.read()));
}

void sha256_final::thread_ctx_bitlen_cast_fu_710_p2() {
    ctx_bitlen_cast_fu_710_p2 = (!tmp_14_fu_685_p1.read().is_01() || !tmp_80_fu_689_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_14_fu_685_p1.read()) + sc_biguint<16>(tmp_80_fu_689_p1.read()));
}

void sha256_final::thread_ctx_bitlen_fu_699_p2() {
    ctx_bitlen_fu_699_p2 = (!ctx_bitlen_0_read.read().is_01() || !tmp_74_cast_fu_644_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) + sc_biguint<32>(tmp_74_cast_fu_644_p1.read()));
}

void sha256_final::thread_ctx_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv32_38);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv32_3A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv32_3C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read())))) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv32_3F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_621_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (i_2_cast5_fu_616_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (i_1_fu_593_p2.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ctx_datalen_read.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address0 = grp_sha256_transform_fu_491_data_address0.read();
    } else {
        ctx_data_address0 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv32_39);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv32_3B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv32_3D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_address1 =  (sc_lv<6>) (i_fu_788_p2.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv32_3E);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address1 = grp_sha256_transform_fu_491_data_address1.read();
    } else {
        ctx_data_address1 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_621_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce0 = grp_sha256_transform_fu_491_data_ce0.read();
    } else {
        ctx_data_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce1 = grp_sha256_transform_fu_491_data_ce1.read();
    } else {
        ctx_data_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d0 = tmp_67_reg_1110.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d0 = tmp_64_reg_1100.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d0 = tmp_63_reg_1090.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read())))) {
        ctx_data_d0 = tmp_60_fu_716_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_621_p2.read())))) {
        ctx_data_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_d0 = ap_const_lv8_80;
    } else {
        ctx_data_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d1 = tmp_65_reg_1105.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d1 = tmp_84_reg_1095.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d1 = tmp_62_reg_1085.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_d1 = ctx_bitlen_cast_fu_710_p2.read().range(15, 8);
    } else {
        ctx_data_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_621_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we0 = ap_const_logic_1;
    } else {
        ctx_data_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_795_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we1 = ap_const_logic_1;
    } else {
        ctx_data_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_exitcond_fu_795_p2() {
    exitcond_fu_795_p2 = (!i_0_in_reg_390.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): sc_lv<1>(i_0_in_reg_390.read() == ap_const_lv32_37);
}

void sha256_final::thread_grp_sha256_transform_fu_491_ap_start() {
    grp_sha256_transform_fu_491_ap_start = ap_reg_grp_sha256_transform_fu_491_ap_start.read();
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_0_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_0_read = ctx_state_reg_399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_0_read = p_read1.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_0_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_1_read = ctx_state_1_reg_409.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_1_read = p_read2.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_2_read = ctx_state_2_reg_419.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_2_read = p_read4.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_3_read = ctx_state_3_reg_429.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_3_read = p_read5.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_4_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_4_read = ctx_state_4_reg_439.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_4_read = p_read6.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_4_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_5_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_5_read = ctx_state_5_reg_449.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_5_read = p_read7.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_5_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_6_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_6_read = ctx_state_6_reg_459.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_6_read = p_read8.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_6_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_491_ctx_state_7_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_491_ctx_state_7_read = ctx_state_7_reg_469.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_491_ctx_state_7_read = p_read9.read();
    } else {
        grp_sha256_transform_fu_491_ctx_state_7_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_hash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        hash_address0 =  (sc_lv<6>) (sum1_cast_fu_981_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address0 =  (sc_lv<6>) (sum8_cast_fu_963_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address0 =  (sc_lv<6>) (i_3_cast2_reg_1123.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address0 =  (sc_lv<6>) (sum2_cast_fu_929_p1.read());
    } else {
        hash_address0 = "XXXXXX";
    }
}

void sha256_final::thread_hash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        hash_address1 =  (sc_lv<6>) (sum3_cast_fu_989_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address1 =  (sc_lv<6>) (sum_cast_fu_973_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address1 =  (sc_lv<6>) (sum6_cast_fu_950_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address1 =  (sc_lv<6>) (sum4_cast_fu_942_p1.read());
    } else {
        hash_address1 = "XXXXXX";
    }
}

void sha256_final::thread_hash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        hash_ce0 = ap_const_logic_1;
    } else {
        hash_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        hash_ce1 = ap_const_logic_1;
    } else {
        hash_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        hash_d0 = tmp_94_reg_1171.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d0 = tmp_92_reg_1161.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d0 = tmp_88_reg_1141.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d0 = tmp_89_reg_1146.read();
    } else {
        hash_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        hash_d1 = tmp_95_reg_1176.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d1 = tmp_93_reg_1166.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d1 = tmp_91_reg_1156.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d1 = tmp_90_reg_1151.read();
    } else {
        hash_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        hash_we0 = ap_const_logic_1;
    } else {
        hash_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        hash_we1 = ap_const_logic_1;
    } else {
        hash_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_i_1_fu_593_p2() {
    i_1_fu_593_p2 = (!i_1_in_reg_370.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_in_reg_370.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_2_cast5_fu_616_p1() {
    i_2_cast5_fu_616_p1 = esl_zext<32,6>(i_2_reg_379.read());
}

void sha256_final::thread_i_3_cast1_fu_805_p1() {
    i_3_cast1_fu_805_p1 = esl_zext<5,3>(i_3_reg_479.read());
}

void sha256_final::thread_i_3_cast2_fu_801_p1() {
    i_3_cast2_fu_801_p1 = esl_zext<32,3>(i_3_reg_479.read());
}

void sha256_final::thread_i_5_fu_627_p2() {
    i_5_fu_627_p2 = (!i_2_reg_379.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_379.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sha256_final::thread_i_6_fu_815_p2() {
    i_6_fu_815_p2 = (!i_3_reg_479.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_reg_479.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void sha256_final::thread_i_fu_788_p2() {
    i_fu_788_p2 = (!i_0_in_reg_390.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_in_reg_390.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_icmp_fu_610_p2() {
    icmp_fu_610_p2 = (!tmp_66_fu_600_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_66_fu_600_p4.read() == ap_const_lv26_0);
}

void sha256_final::thread_sum1_cast7_fu_978_p1() {
    sum1_cast7_fu_978_p1 = esl_sext<5,4>(sum1_reg_1187.read());
}

void sha256_final::thread_sum1_cast_fu_981_p1() {
    sum1_cast_fu_981_p1 = esl_zext<32,5>(sum1_cast7_fu_978_p1.read());
}

void sha256_final::thread_sum1_fu_934_p3() {
    sum1_fu_934_p3 = esl_concat<1,3>(ap_const_lv1_1, i_3_reg_479.read());
}

void sha256_final::thread_sum2_cast_fu_929_p1() {
    sum2_cast_fu_929_p1 = esl_zext<32,3>(sum2_fu_923_p2.read());
}

void sha256_final::thread_sum2_fu_923_p2() {
    sum2_fu_923_p2 = (i_3_reg_479.read() ^ ap_const_lv3_4);
}

void sha256_final::thread_sum3_cast6_fu_986_p1() {
    sum3_cast6_fu_986_p1 = esl_sext<5,3>(sum2_reg_1181.read());
}

void sha256_final::thread_sum3_cast_fu_989_p1() {
    sum3_cast_fu_989_p1 = esl_zext<32,5>(sum3_cast6_fu_986_p1.read());
}

void sha256_final::thread_sum4_cast_fu_942_p1() {
    sum4_cast_fu_942_p1 = esl_zext<32,4>(sum1_fu_934_p3.read());
}

void sha256_final::thread_sum4_fu_955_p3() {
    sum4_fu_955_p3 = esl_concat<2,3>(ap_const_lv2_2, i_3_reg_479.read());
}

void sha256_final::thread_sum6_cast8_fu_947_p1() {
    sum6_cast8_fu_947_p1 = esl_sext<4,3>(sum2_reg_1181.read());
}

void sha256_final::thread_sum6_cast_fu_950_p1() {
    sum6_cast_fu_950_p1 = esl_zext<32,4>(sum6_cast8_fu_947_p1.read());
}

void sha256_final::thread_sum8_cast_fu_963_p1() {
    sum8_cast_fu_963_p1 = esl_zext<32,5>(sum4_fu_955_p3.read());
}

void sha256_final::thread_sum_cast_fu_973_p1() {
    sum_cast_fu_973_p1 = esl_zext<32,5>(sum_fu_968_p2.read());
}

void sha256_final::thread_sum_fu_968_p2() {
    sum_fu_968_p2 = (!ap_const_lv5_14.is_01() || !i_3_cast1_reg_1128.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(i_3_cast1_reg_1128.read()));
}

void sha256_final::thread_tmp_12_fu_674_p3() {
    tmp_12_fu_674_p3 = esl_concat<5,3>(tmp_76_fu_671_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_14_fu_685_p1() {
    tmp_14_fu_685_p1 = esl_zext<16,9>(tmp_56_fu_636_p3.read());
}

void sha256_final::thread_tmp_16_fu_692_p1() {
    tmp_16_fu_692_p1 = esl_zext<24,9>(tmp_56_fu_636_p3.read());
}

void sha256_final::thread_tmp_56_fu_636_p3() {
    tmp_56_fu_636_p3 = esl_concat<6,3>(tmp_74_fu_633_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_57_fu_648_p2() {
    tmp_57_fu_648_p2 = (tmp_74_cast_fu_644_p1.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_final::thread_tmp_58_fu_654_p2() {
    tmp_58_fu_654_p2 = (!ctx_bitlen_0_read.read().is_01() || !tmp_57_fu_648_p2.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) > sc_biguint<32>(tmp_57_fu_648_p2.read()));
}

void sha256_final::thread_tmp_59_fu_659_p2() {
    tmp_59_fu_659_p2 = (!ap_const_lv32_1.is_01() || !p_read3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_read3.read()));
}

void sha256_final::thread_tmp_60_fu_716_p2() {
    tmp_60_fu_716_p2 = (!tmp_78_fu_682_p1.read().is_01() || !tmp_12_fu_674_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_78_fu_682_p1.read()) + sc_biguint<8>(tmp_12_fu_674_p3.read()));
}

void sha256_final::thread_tmp_66_fu_600_p4() {
    tmp_66_fu_600_p4 = i_1_fu_593_p2.read().range(31, 6);
}

void sha256_final::thread_tmp_68_fu_809_p2() {
    tmp_68_fu_809_p2 = (!i_3_reg_479.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_479.read() == ap_const_lv3_4);
}

void sha256_final::thread_tmp_69_fu_825_p3() {
    tmp_69_fu_825_p3 = esl_concat<2,3>(tmp_86_fu_821_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_70_fu_833_p2() {
    tmp_70_fu_833_p2 = (!ap_const_lv5_18.is_01() || !tmp_69_fu_825_p3.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(tmp_69_fu_825_p3.read()));
}

void sha256_final::thread_tmp_71_fu_843_p2() {
    tmp_71_fu_843_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_547.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_72_fu_853_p2() {
    tmp_72_fu_853_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_552.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_73_fu_863_p2() {
    tmp_73_fu_863_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_557.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_74_cast_fu_644_p1() {
    tmp_74_cast_fu_644_p1 = esl_zext<32,9>(tmp_56_fu_636_p3.read());
}

void sha256_final::thread_tmp_74_fu_633_p1() {
    tmp_74_fu_633_p1 = ctx_datalen_read.read().range(6-1, 0);
}

void sha256_final::thread_tmp_75_fu_873_p2() {
    tmp_75_fu_873_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_562.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_76_fu_671_p1() {
    tmp_76_fu_671_p1 = ctx_datalen_read.read().range(5-1, 0);
}

void sha256_final::thread_tmp_77_fu_883_p2() {
    tmp_77_fu_883_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_567.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_78_fu_682_p1() {
    tmp_78_fu_682_p1 = ctx_bitlen_0_read.read().range(8-1, 0);
}

void sha256_final::thread_tmp_79_fu_893_p2() {
    tmp_79_fu_893_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_572.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_80_fu_689_p1() {
    tmp_80_fu_689_p1 = ctx_bitlen_0_read.read().range(16-1, 0);
}

void sha256_final::thread_tmp_81_fu_903_p2() {
    tmp_81_fu_903_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_577.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_82_fu_696_p1() {
    tmp_82_fu_696_p1 = ctx_bitlen_0_read.read().range(24-1, 0);
}

void sha256_final::thread_tmp_83_fu_913_p2() {
    tmp_83_fu_913_p2 = (!tmp_94_cast_fu_839_p1.read().is_01())? sc_lv<32>(): reg_582.read() >> (unsigned short)tmp_94_cast_fu_839_p1.read().to_uint();
}

void sha256_final::thread_tmp_84_fu_754_p1() {
    tmp_84_fu_754_p1 = tmp_86_read3_fu_664_p3.read().range(8-1, 0);
}

void sha256_final::thread_tmp_86_fu_821_p1() {
    tmp_86_fu_821_p1 = i_3_reg_479.read().range(2-1, 0);
}

void sha256_final::thread_tmp_86_read3_fu_664_p3() {
    tmp_86_read3_fu_664_p3 = (!tmp_58_fu_654_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_58_fu_654_p2.read()[0].to_bool())? tmp_59_fu_659_p2.read(): p_read3.read());
}

void sha256_final::thread_tmp_88_fu_849_p1() {
    tmp_88_fu_849_p1 = tmp_71_fu_843_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_89_fu_859_p1() {
    tmp_89_fu_859_p1 = tmp_72_fu_853_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_90_fu_869_p1() {
    tmp_90_fu_869_p1 = tmp_73_fu_863_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_91_fu_879_p1() {
    tmp_91_fu_879_p1 = tmp_75_fu_873_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_92_fu_889_p1() {
    tmp_92_fu_889_p1 = tmp_77_fu_883_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_93_fu_899_p1() {
    tmp_93_fu_899_p1 = tmp_79_fu_893_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_94_cast_fu_839_p1() {
    tmp_94_cast_fu_839_p1 = esl_zext<32,5>(tmp_70_fu_833_p2.read());
}

void sha256_final::thread_tmp_94_fu_909_p1() {
    tmp_94_fu_909_p1 = tmp_81_fu_903_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_95_fu_919_p1() {
    tmp_95_fu_919_p1 = tmp_83_fu_913_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_fu_587_p2() {
    tmp_fu_587_p2 = (!ctx_datalen_read.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_datalen_read.read()) < sc_biguint<32>(ap_const_lv32_38));
}

void sha256_final::thread_tmp_s_fu_621_p2() {
    tmp_s_fu_621_p2 = (!i_2_reg_379.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_379.read() == ap_const_lv6_38);
}

void sha256_final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_587_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_587_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_610_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(tmp_reg_1065.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_621_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_795_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_491_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_68_fu_809_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

