// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_final (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_data_address0,
        ctx_data_ce0,
        ctx_data_we0,
        ctx_data_d0,
        ctx_data_q0,
        ctx_data_address1,
        ctx_data_ce1,
        ctx_data_we1,
        ctx_data_d1,
        ctx_data_q1,
        ctx_datalen_read,
        ctx_bitlen_0_read,
        p_read3,
        p_read1,
        p_read2,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] ctx_data_address0;
output   ctx_data_ce0;
output   ctx_data_we0;
output  [7:0] ctx_data_d0;
input  [7:0] ctx_data_q0;
output  [5:0] ctx_data_address1;
output   ctx_data_ce1;
output   ctx_data_we1;
output  [7:0] ctx_data_d1;
input  [7:0] ctx_data_q1;
input  [31:0] ctx_datalen_read;
input  [31:0] ctx_bitlen_0_read;
input  [31:0] p_read3;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
output  [5:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [7:0] hash_d0;
output  [5:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [7:0] hash_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ctx_data_address0;
reg ctx_data_ce0;
reg ctx_data_we0;
reg[7:0] ctx_data_d0;
reg[5:0] ctx_data_address1;
reg ctx_data_ce1;
reg ctx_data_we1;
reg[7:0] ctx_data_d1;
reg[5:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[7:0] hash_d0;
reg[5:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[7:0] hash_d1;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_547;
wire    ap_CS_fsm_state3;
wire    grp_sha256_transform_fu_491_ap_done;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_552;
reg   [31:0] reg_557;
reg   [31:0] reg_562;
reg   [31:0] reg_567;
reg   [31:0] reg_572;
reg   [31:0] reg_577;
reg   [31:0] reg_582;
wire   [0:0] tmp_fu_587_p2;
reg   [0:0] tmp_reg_1065;
wire   [31:0] i_1_fu_593_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] i_5_fu_627_p2;
wire    ap_CS_fsm_state4;
reg   [7:0] tmp_62_reg_1085;
wire   [0:0] tmp_s_fu_621_p2;
reg   [7:0] tmp_63_reg_1090;
wire   [7:0] tmp_84_fu_754_p1;
reg   [7:0] tmp_84_reg_1095;
reg   [7:0] tmp_64_reg_1100;
reg   [7:0] tmp_65_reg_1105;
reg   [7:0] tmp_67_reg_1110;
wire   [31:0] i_fu_788_p2;
wire    ap_CS_fsm_state5;
wire   [31:0] i_3_cast2_fu_801_p1;
reg   [31:0] i_3_cast2_reg_1123;
wire    ap_CS_fsm_state11;
wire   [4:0] i_3_cast1_fu_805_p1;
reg   [4:0] i_3_cast1_reg_1128;
wire   [2:0] i_6_fu_815_p2;
reg   [2:0] i_6_reg_1136;
wire   [7:0] tmp_88_fu_849_p1;
reg   [7:0] tmp_88_reg_1141;
wire   [0:0] tmp_68_fu_809_p2;
wire   [7:0] tmp_89_fu_859_p1;
reg   [7:0] tmp_89_reg_1146;
wire   [7:0] tmp_90_fu_869_p1;
reg   [7:0] tmp_90_reg_1151;
wire   [7:0] tmp_91_fu_879_p1;
reg   [7:0] tmp_91_reg_1156;
wire   [7:0] tmp_92_fu_889_p1;
reg   [7:0] tmp_92_reg_1161;
wire   [7:0] tmp_93_fu_899_p1;
reg   [7:0] tmp_93_reg_1166;
wire   [7:0] tmp_94_fu_909_p1;
reg   [7:0] tmp_94_reg_1171;
wire   [7:0] tmp_95_fu_919_p1;
reg   [7:0] tmp_95_reg_1176;
wire   [2:0] sum2_fu_923_p2;
reg   [2:0] sum2_reg_1181;
wire    ap_CS_fsm_state12;
wire   [3:0] sum1_fu_934_p3;
reg   [3:0] sum1_reg_1187;
wire    grp_sha256_transform_fu_491_ap_start;
wire    grp_sha256_transform_fu_491_ap_idle;
wire    grp_sha256_transform_fu_491_ap_ready;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_0_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_1_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_2_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_3_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_4_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_5_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_6_read;
reg   [31:0] grp_sha256_transform_fu_491_ctx_state_7_read;
wire   [5:0] grp_sha256_transform_fu_491_data_address0;
wire    grp_sha256_transform_fu_491_data_ce0;
wire   [5:0] grp_sha256_transform_fu_491_data_address1;
wire    grp_sha256_transform_fu_491_data_ce1;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_0;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_1;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_2;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_3;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_4;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_5;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_6;
wire   [31:0] grp_sha256_transform_fu_491_ap_return_7;
reg   [31:0] i_1_in_reg_370;
wire   [0:0] icmp_fu_610_p2;
reg   [5:0] i_2_reg_379;
reg   [31:0] i_0_in_reg_390;
wire   [0:0] exitcond_fu_795_p2;
reg   [31:0] ctx_state_reg_399;
reg   [31:0] ctx_state_1_reg_409;
reg   [31:0] ctx_state_2_reg_419;
reg   [31:0] ctx_state_3_reg_429;
reg   [31:0] ctx_state_4_reg_439;
reg   [31:0] ctx_state_5_reg_449;
reg   [31:0] ctx_state_6_reg_459;
reg   [31:0] ctx_state_7_reg_469;
reg   [2:0] i_3_reg_479;
wire    ap_CS_fsm_state15;
reg    ap_reg_grp_sha256_transform_fu_491_ap_start;
wire    ap_CS_fsm_state9;
wire   [31:0] i_2_cast5_fu_616_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [31:0] sum2_cast_fu_929_p1;
wire   [31:0] sum4_cast_fu_942_p1;
wire    ap_CS_fsm_state13;
wire   [31:0] sum6_cast_fu_950_p1;
wire   [31:0] sum8_cast_fu_963_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] sum_cast_fu_973_p1;
wire   [31:0] sum1_cast_fu_981_p1;
wire   [31:0] sum3_cast_fu_989_p1;
wire   [7:0] tmp_60_fu_716_p2;
wire   [25:0] tmp_66_fu_600_p4;
wire   [5:0] tmp_74_fu_633_p1;
wire   [8:0] tmp_56_fu_636_p3;
wire   [31:0] tmp_74_cast_fu_644_p1;
wire   [31:0] tmp_57_fu_648_p2;
wire   [0:0] tmp_58_fu_654_p2;
wire   [31:0] tmp_59_fu_659_p2;
wire   [4:0] tmp_76_fu_671_p1;
wire   [23:0] tmp_16_fu_692_p1;
wire   [23:0] tmp_82_fu_696_p1;
wire   [15:0] tmp_14_fu_685_p1;
wire   [15:0] tmp_80_fu_689_p1;
wire   [7:0] tmp_78_fu_682_p1;
wire   [7:0] tmp_12_fu_674_p3;
wire   [15:0] ctx_bitlen_cast_fu_710_p2;
wire   [23:0] ctx_bitlen_cast3_fu_704_p2;
wire   [31:0] ctx_bitlen_fu_699_p2;
wire   [31:0] tmp_86_read3_fu_664_p3;
wire   [1:0] tmp_86_fu_821_p1;
wire   [4:0] tmp_69_fu_825_p3;
wire   [4:0] tmp_70_fu_833_p2;
wire   [31:0] tmp_94_cast_fu_839_p1;
wire   [31:0] tmp_71_fu_843_p2;
wire   [31:0] tmp_72_fu_853_p2;
wire   [31:0] tmp_73_fu_863_p2;
wire   [31:0] tmp_75_fu_873_p2;
wire   [31:0] tmp_77_fu_883_p2;
wire   [31:0] tmp_79_fu_893_p2;
wire   [31:0] tmp_81_fu_903_p2;
wire   [31:0] tmp_83_fu_913_p2;
wire  signed [3:0] sum6_cast8_fu_947_p1;
wire   [4:0] sum4_fu_955_p3;
wire   [4:0] sum_fu_968_p2;
wire  signed [4:0] sum1_cast7_fu_978_p1;
wire  signed [4:0] sum3_cast6_fu_986_p1;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_reg_grp_sha256_transform_fu_491_ap_start = 1'b0;
end

sha256_transform grp_sha256_transform_fu_491(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha256_transform_fu_491_ap_start),
    .ap_done(grp_sha256_transform_fu_491_ap_done),
    .ap_idle(grp_sha256_transform_fu_491_ap_idle),
    .ap_ready(grp_sha256_transform_fu_491_ap_ready),
    .ctx_state_0_read(grp_sha256_transform_fu_491_ctx_state_0_read),
    .ctx_state_1_read(grp_sha256_transform_fu_491_ctx_state_1_read),
    .ctx_state_2_read(grp_sha256_transform_fu_491_ctx_state_2_read),
    .ctx_state_3_read(grp_sha256_transform_fu_491_ctx_state_3_read),
    .ctx_state_4_read(grp_sha256_transform_fu_491_ctx_state_4_read),
    .ctx_state_5_read(grp_sha256_transform_fu_491_ctx_state_5_read),
    .ctx_state_6_read(grp_sha256_transform_fu_491_ctx_state_6_read),
    .ctx_state_7_read(grp_sha256_transform_fu_491_ctx_state_7_read),
    .data_address0(grp_sha256_transform_fu_491_data_address0),
    .data_ce0(grp_sha256_transform_fu_491_data_ce0),
    .data_q0(ctx_data_q0),
    .data_address1(grp_sha256_transform_fu_491_data_address1),
    .data_ce1(grp_sha256_transform_fu_491_data_ce1),
    .data_q1(ctx_data_q1),
    .ap_return_0(grp_sha256_transform_fu_491_ap_return_0),
    .ap_return_1(grp_sha256_transform_fu_491_ap_return_1),
    .ap_return_2(grp_sha256_transform_fu_491_ap_return_2),
    .ap_return_3(grp_sha256_transform_fu_491_ap_return_3),
    .ap_return_4(grp_sha256_transform_fu_491_ap_return_4),
    .ap_return_5(grp_sha256_transform_fu_491_ap_return_5),
    .ap_return_6(grp_sha256_transform_fu_491_ap_return_6),
    .ap_return_7(grp_sha256_transform_fu_491_ap_return_7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sha256_transform_fu_491_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state2) & (1'd0 == icmp_fu_610_p2)) | (1'b1 == ap_CS_fsm_state9))) begin
            ap_reg_grp_sha256_transform_fu_491_ap_start <= 1'b1;
        end else if ((1'b1 == grp_sha256_transform_fu_491_ap_ready)) begin
            ap_reg_grp_sha256_transform_fu_491_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_1_reg_409 <= p_read2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_1_reg_409 <= reg_552;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_2_reg_419 <= p_read4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_2_reg_419 <= reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_3_reg_429 <= p_read5;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_3_reg_429 <= reg_562;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_4_reg_439 <= p_read6;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_4_reg_439 <= reg_567;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_5_reg_449 <= p_read7;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_5_reg_449 <= reg_572;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_6_reg_459 <= p_read8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_6_reg_459 <= reg_577;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_7_reg_469 <= p_read9;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_7_reg_469 <= reg_582;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
        ctx_state_reg_399 <= p_read1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd1 == tmp_s_fu_621_p2))) begin
        ctx_state_reg_399 <= reg_547;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_587_p2 == 1'd1))) begin
        i_0_in_reg_390 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond_fu_795_p2))) begin
        i_0_in_reg_390 <= i_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_587_p2 == 1'd0))) begin
        i_1_in_reg_370 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2))) begin
        i_1_in_reg_370 <= i_1_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd0 == tmp_s_fu_621_p2))) begin
        i_2_reg_379 <= i_5_fu_627_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_sha256_transform_fu_491_ap_done == 1'b1))) begin
        i_2_reg_379 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_3_reg_479 <= i_6_reg_1136;
    end else if (((grp_sha256_transform_fu_491_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_3_reg_479 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_3_cast1_reg_1128[2 : 0] <= i_3_cast1_fu_805_p1[2 : 0];
        i_3_cast2_reg_1123[2 : 0] <= i_3_cast2_fu_801_p1[2 : 0];
        i_6_reg_1136 <= i_6_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (grp_sha256_transform_fu_491_ap_done == 1'b1)) | ((grp_sha256_transform_fu_491_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_547 <= grp_sha256_transform_fu_491_ap_return_0;
        reg_552 <= grp_sha256_transform_fu_491_ap_return_1;
        reg_557 <= grp_sha256_transform_fu_491_ap_return_2;
        reg_562 <= grp_sha256_transform_fu_491_ap_return_3;
        reg_567 <= grp_sha256_transform_fu_491_ap_return_4;
        reg_572 <= grp_sha256_transform_fu_491_ap_return_5;
        reg_577 <= grp_sha256_transform_fu_491_ap_return_6;
        reg_582 <= grp_sha256_transform_fu_491_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sum1_reg_1187[2 : 0] <= sum1_fu_934_p3[2 : 0];
        sum2_reg_1181 <= sum2_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2)))) begin
        tmp_62_reg_1085 <= {{ctx_bitlen_cast3_fu_704_p2[23:16]}};
        tmp_63_reg_1090 <= {{ctx_bitlen_fu_699_p2[31:24]}};
        tmp_64_reg_1100 <= {{tmp_86_read3_fu_664_p3[15:8]}};
        tmp_65_reg_1105 <= {{tmp_86_read3_fu_664_p3[23:16]}};
        tmp_67_reg_1110 <= {{tmp_86_read3_fu_664_p3[31:24]}};
        tmp_84_reg_1095 <= tmp_84_fu_754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd0 == tmp_68_fu_809_p2))) begin
        tmp_88_reg_1141 <= tmp_88_fu_849_p1;
        tmp_89_reg_1146 <= tmp_89_fu_859_p1;
        tmp_90_reg_1151 <= tmp_90_fu_869_p1;
        tmp_91_reg_1156 <= tmp_91_fu_879_p1;
        tmp_92_reg_1161 <= tmp_92_fu_889_p1;
        tmp_93_reg_1166 <= tmp_93_fu_899_p1;
        tmp_94_reg_1171 <= tmp_94_fu_909_p1;
        tmp_95_reg_1176 <= tmp_95_fu_919_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_1065 <= tmp_fu_587_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state11) & (1'd1 == tmp_68_fu_809_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == tmp_68_fu_809_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address0 = 32'd56;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address0 = 32'd58;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address0 = 32'd60;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2)))) begin
        ctx_data_address0 = 32'd63;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd0 == tmp_s_fu_621_p2))) begin
        ctx_data_address0 = i_2_cast5_fu_616_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2))) begin
        ctx_data_address0 = i_1_fu_593_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_address0 = ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        ctx_data_address0 = grp_sha256_transform_fu_491_data_address0;
    end else begin
        ctx_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address1 = 32'd57;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address1 = 32'd59;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address1 = 32'd61;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_address1 = i_fu_788_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_address1 = 32'd62;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        ctx_data_address1 = grp_sha256_transform_fu_491_data_address1;
    end else begin
        ctx_data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2))) | ((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd0 == tmp_s_fu_621_p2)) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8))) begin
        ctx_data_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        ctx_data_ce0 = grp_sha256_transform_fu_491_data_ce0;
    end else begin
        ctx_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8))) begin
        ctx_data_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        ctx_data_ce1 = grp_sha256_transform_fu_491_data_ce1;
    end else begin
        ctx_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d0 = tmp_67_reg_1110;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d0 = tmp_64_reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d0 = tmp_63_reg_1090;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2)))) begin
        ctx_data_d0 = tmp_60_fu_716_p2;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd0 == tmp_s_fu_621_p2)))) begin
        ctx_data_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_d0 = 8'd128;
    end else begin
        ctx_data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d1 = tmp_65_reg_1105;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d1 = tmp_84_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d1 = tmp_62_reg_1085;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_d1 = {{ctx_bitlen_cast_fu_710_p2[15:8]}};
    end else begin
        ctx_data_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2))) | ((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_1065 == 1'd0) & (1'd0 == tmp_s_fu_621_p2)) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8))) begin
        ctx_data_we0 = 1'b1;
    end else begin
        ctx_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2))) | ((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond_fu_795_p2)) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8))) begin
        ctx_data_we1 = 1'b1;
    end else begin
        ctx_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_0_read = ctx_state_reg_399;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_0_read = p_read1;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_1_read = ctx_state_1_reg_409;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_1_read = p_read2;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_2_read = ctx_state_2_reg_419;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_2_read = p_read4;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_3_read = ctx_state_3_reg_429;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_3_read = p_read5;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_4_read = ctx_state_4_reg_439;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_4_read = p_read6;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_5_read = ctx_state_5_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_5_read = p_read7;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_5_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_6_read = ctx_state_6_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_6_read = p_read8;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_6_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_491_ctx_state_7_read = ctx_state_7_reg_469;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_491_ctx_state_7_read = p_read9;
    end else begin
        grp_sha256_transform_fu_491_ctx_state_7_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hash_address0 = sum1_cast_fu_981_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address0 = sum8_cast_fu_963_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address0 = i_3_cast2_reg_1123;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address0 = sum2_cast_fu_929_p1;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hash_address1 = sum3_cast_fu_989_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address1 = sum_cast_fu_973_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address1 = sum6_cast_fu_950_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address1 = sum4_cast_fu_942_p1;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hash_d0 = tmp_94_reg_1171;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d0 = tmp_92_reg_1161;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d0 = tmp_88_reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d0 = tmp_89_reg_1146;
    end else begin
        hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hash_d1 = tmp_95_reg_1176;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d1 = tmp_93_reg_1166;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d1 = tmp_91_reg_1156;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d1 = tmp_90_reg_1151;
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_587_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_587_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == icmp_fu_610_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_sha256_transform_fu_491_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((tmp_reg_1065 == 1'd1) | (1'd1 == tmp_s_fu_621_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_795_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_sha256_transform_fu_491_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == tmp_68_fu_809_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ctx_bitlen_cast3_fu_704_p2 = (tmp_16_fu_692_p1 + tmp_82_fu_696_p1);

assign ctx_bitlen_cast_fu_710_p2 = (tmp_14_fu_685_p1 + tmp_80_fu_689_p1);

assign ctx_bitlen_fu_699_p2 = (ctx_bitlen_0_read + tmp_74_cast_fu_644_p1);

assign exitcond_fu_795_p2 = ((i_0_in_reg_390 == 32'd55) ? 1'b1 : 1'b0);

assign grp_sha256_transform_fu_491_ap_start = ap_reg_grp_sha256_transform_fu_491_ap_start;

assign i_1_fu_593_p2 = (i_1_in_reg_370 + 32'd1);

assign i_2_cast5_fu_616_p1 = i_2_reg_379;

assign i_3_cast1_fu_805_p1 = i_3_reg_479;

assign i_3_cast2_fu_801_p1 = i_3_reg_479;

assign i_5_fu_627_p2 = (i_2_reg_379 + 6'd1);

assign i_6_fu_815_p2 = (i_3_reg_479 + 3'd1);

assign i_fu_788_p2 = (i_0_in_reg_390 + 32'd1);

assign icmp_fu_610_p2 = ((tmp_66_fu_600_p4 == 26'd0) ? 1'b1 : 1'b0);

assign sum1_cast7_fu_978_p1 = $signed(sum1_reg_1187);

assign sum1_cast_fu_981_p1 = $unsigned(sum1_cast7_fu_978_p1);

assign sum1_fu_934_p3 = {{1'd1}, {i_3_reg_479}};

assign sum2_cast_fu_929_p1 = sum2_fu_923_p2;

assign sum2_fu_923_p2 = (i_3_reg_479 ^ 3'd4);

assign sum3_cast6_fu_986_p1 = $signed(sum2_reg_1181);

assign sum3_cast_fu_989_p1 = $unsigned(sum3_cast6_fu_986_p1);

assign sum4_cast_fu_942_p1 = sum1_fu_934_p3;

assign sum4_fu_955_p3 = {{2'd2}, {i_3_reg_479}};

assign sum6_cast8_fu_947_p1 = $signed(sum2_reg_1181);

assign sum6_cast_fu_950_p1 = $unsigned(sum6_cast8_fu_947_p1);

assign sum8_cast_fu_963_p1 = sum4_fu_955_p3;

assign sum_cast_fu_973_p1 = sum_fu_968_p2;

assign sum_fu_968_p2 = ($signed(5'd20) + $signed(i_3_cast1_reg_1128));

assign tmp_12_fu_674_p3 = {{tmp_76_fu_671_p1}, {3'd0}};

assign tmp_14_fu_685_p1 = tmp_56_fu_636_p3;

assign tmp_16_fu_692_p1 = tmp_56_fu_636_p3;

assign tmp_56_fu_636_p3 = {{tmp_74_fu_633_p1}, {3'd0}};

assign tmp_57_fu_648_p2 = (tmp_74_cast_fu_644_p1 ^ 32'd4294967295);

assign tmp_58_fu_654_p2 = ((ctx_bitlen_0_read > tmp_57_fu_648_p2) ? 1'b1 : 1'b0);

assign tmp_59_fu_659_p2 = (32'd1 + p_read3);

assign tmp_60_fu_716_p2 = (tmp_78_fu_682_p1 + tmp_12_fu_674_p3);

assign tmp_66_fu_600_p4 = {{i_1_fu_593_p2[31:6]}};

assign tmp_68_fu_809_p2 = ((i_3_reg_479 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_69_fu_825_p3 = {{tmp_86_fu_821_p1}, {3'd0}};

assign tmp_70_fu_833_p2 = ($signed(5'd24) - $signed(tmp_69_fu_825_p3));

assign tmp_71_fu_843_p2 = reg_547 >> tmp_94_cast_fu_839_p1;

assign tmp_72_fu_853_p2 = reg_552 >> tmp_94_cast_fu_839_p1;

assign tmp_73_fu_863_p2 = reg_557 >> tmp_94_cast_fu_839_p1;

assign tmp_74_cast_fu_644_p1 = tmp_56_fu_636_p3;

assign tmp_74_fu_633_p1 = ctx_datalen_read[5:0];

assign tmp_75_fu_873_p2 = reg_562 >> tmp_94_cast_fu_839_p1;

assign tmp_76_fu_671_p1 = ctx_datalen_read[4:0];

assign tmp_77_fu_883_p2 = reg_567 >> tmp_94_cast_fu_839_p1;

assign tmp_78_fu_682_p1 = ctx_bitlen_0_read[7:0];

assign tmp_79_fu_893_p2 = reg_572 >> tmp_94_cast_fu_839_p1;

assign tmp_80_fu_689_p1 = ctx_bitlen_0_read[15:0];

assign tmp_81_fu_903_p2 = reg_577 >> tmp_94_cast_fu_839_p1;

assign tmp_82_fu_696_p1 = ctx_bitlen_0_read[23:0];

assign tmp_83_fu_913_p2 = reg_582 >> tmp_94_cast_fu_839_p1;

assign tmp_84_fu_754_p1 = tmp_86_read3_fu_664_p3[7:0];

assign tmp_86_fu_821_p1 = i_3_reg_479[1:0];

assign tmp_86_read3_fu_664_p3 = ((tmp_58_fu_654_p2[0:0] === 1'b1) ? tmp_59_fu_659_p2 : p_read3);

assign tmp_88_fu_849_p1 = tmp_71_fu_843_p2[7:0];

assign tmp_89_fu_859_p1 = tmp_72_fu_853_p2[7:0];

assign tmp_90_fu_869_p1 = tmp_73_fu_863_p2[7:0];

assign tmp_91_fu_879_p1 = tmp_75_fu_873_p2[7:0];

assign tmp_92_fu_889_p1 = tmp_77_fu_883_p2[7:0];

assign tmp_93_fu_899_p1 = tmp_79_fu_893_p2[7:0];

assign tmp_94_cast_fu_839_p1 = tmp_70_fu_833_p2;

assign tmp_94_fu_909_p1 = tmp_81_fu_903_p2[7:0];

assign tmp_95_fu_919_p1 = tmp_83_fu_913_p2[7:0];

assign tmp_fu_587_p2 = ((ctx_datalen_read < 32'd56) ? 1'b1 : 1'b0);

assign tmp_s_fu_621_p2 = ((i_2_reg_379 == 6'd56) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_3_cast2_reg_1123[31:3] <= 29'b00000000000000000000000000000;
    i_3_cast1_reg_1128[4:3] <= 2'b00;
    sum1_reg_1187[3] <= 1'b1;
end

endmodule //sha256_final
