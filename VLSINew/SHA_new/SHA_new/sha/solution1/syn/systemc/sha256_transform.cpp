// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_transform.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_transform::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_transform::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> sha256_transform::ap_ST_fsm_state1 = "1";
const sc_lv<11> sha256_transform::ap_ST_fsm_state2 = "10";
const sc_lv<11> sha256_transform::ap_ST_fsm_state3 = "100";
const sc_lv<11> sha256_transform::ap_ST_fsm_state4 = "1000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state5 = "10000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state6 = "100000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> sha256_transform::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_1 = "1";
const sc_lv<1> sha256_transform::ap_const_lv1_0 = "0";
const sc_lv<32> sha256_transform::ap_const_lv32_2 = "10";
const sc_lv<32> sha256_transform::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_transform::ap_const_lv32_5 = "101";
const sc_lv<32> sha256_transform::ap_const_lv32_6 = "110";
const sc_lv<32> sha256_transform::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_transform::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_transform::ap_const_lv32_A = "1010";
const sc_lv<5> sha256_transform::ap_const_lv5_0 = "00000";
const sc_lv<32> sha256_transform::ap_const_lv32_3 = "11";
const sc_lv<7> sha256_transform::ap_const_lv7_0 = "0000000";
const sc_lv<32> sha256_transform::ap_const_lv32_7 = "111";
const sc_lv<7> sha256_transform::ap_const_lv7_10 = "10000";
const sc_lv<1> sha256_transform::ap_const_lv1_1 = "1";
const sc_lv<5> sha256_transform::ap_const_lv5_10 = "10000";
const sc_lv<5> sha256_transform::ap_const_lv5_1 = "1";
const sc_lv<6> sha256_transform::ap_const_lv6_1 = "1";
const sc_lv<7> sha256_transform::ap_const_lv7_4 = "100";
const sc_lv<6> sha256_transform::ap_const_lv6_2 = "10";
const sc_lv<6> sha256_transform::ap_const_lv6_3 = "11";
const sc_lv<7> sha256_transform::ap_const_lv7_40 = "1000000";
const sc_lv<7> sha256_transform::ap_const_lv7_7E = "1111110";
const sc_lv<7> sha256_transform::ap_const_lv7_79 = "1111001";
const sc_lv<7> sha256_transform::ap_const_lv7_71 = "1110001";
const sc_lv<7> sha256_transform::ap_const_lv7_70 = "1110000";
const sc_lv<7> sha256_transform::ap_const_lv7_1 = "1";
const sc_lv<32> sha256_transform::ap_const_lv32_11 = "10001";
const sc_lv<32> sha256_transform::ap_const_lv32_1F = "11111";
const sc_lv<32> sha256_transform::ap_const_lv32_13 = "10011";
const sc_lv<32> sha256_transform::ap_const_lv32_12 = "10010";
const sc_lv<32> sha256_transform::ap_const_lv32_B = "1011";
const sc_lv<32> sha256_transform::ap_const_lv32_19 = "11001";
const sc_lv<32> sha256_transform::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_transform::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_transform::ap_const_lv32_16 = "10110";
const bool sha256_transform::ap_const_boolean_1 = true;

sha256_transform::sha256_transform(sc_module_name name) : sc_module(name), mVcdFile(0) {
    k_U = new sha256_transform_k("k_U");
    k_U->clk(ap_clk);
    k_U->reset(ap_rst);
    k_U->address0(k_address0);
    k_U->ce0(k_ce0);
    k_U->q0(k_q0);
    m_U = new sha256_transform_m("m_U");
    m_U->clk(ap_clk);
    m_U->reset(ap_rst);
    m_U->address0(m_address0);
    m_U->ce0(m_ce0);
    m_U->we0(m_we0);
    m_U->d0(m_d0);
    m_U->q0(m_q0);
    m_U->address1(m_address1);
    m_U->ce1(m_ce1);
    m_U->we1(m_we1);
    m_U->d1(tmp_26_reg_1211);
    m_U->q1(m_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_fu_1056_p2);
    sensitive << ( tmp13_fu_1052_p2 );
    sensitive << ( tmp_51_fu_1041_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_fu_870_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_1_fu_875_p2 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_2_fu_880_p2 );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_3_fu_885_p2 );
    sensitive << ( ap_return_3_preg );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_4_fu_890_p2 );
    sensitive << ( ap_return_4_preg );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_5_fu_895_p2 );
    sensitive << ( ap_return_5_preg );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_6_fu_900_p2 );
    sensitive << ( ap_return_6_preg );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );
    sensitive << ( ctx_state_7_fu_905_p2 );
    sensitive << ( ap_return_7_preg );

    SC_METHOD(thread_ctx_state_1_fu_875_p2);
    sensitive << ( ctx_state_1_read );
    sensitive << ( c_reg_396 );

    SC_METHOD(thread_ctx_state_2_fu_880_p2);
    sensitive << ( ctx_state_2_read );
    sensitive << ( d_reg_385 );

    SC_METHOD(thread_ctx_state_3_fu_885_p2);
    sensitive << ( ctx_state_3_read );
    sensitive << ( d1_reg_375 );

    SC_METHOD(thread_ctx_state_4_fu_890_p2);
    sensitive << ( ctx_state_4_read );
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_ctx_state_5_fu_895_p2);
    sensitive << ( ctx_state_5_read );
    sensitive << ( g_reg_353 );

    SC_METHOD(thread_ctx_state_6_fu_900_p2);
    sensitive << ( ctx_state_6_read );
    sensitive << ( h_reg_342 );

    SC_METHOD(thread_ctx_state_7_fu_905_p2);
    sensitive << ( ctx_state_7_read );
    sensitive << ( h1_reg_333 );

    SC_METHOD(thread_ctx_state_fu_870_p2);
    sensitive << ( ctx_state_0_read );
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_cast4_fu_445_p1 );
    sensitive << ( tmp_1_cast_fu_476_p1 );

    SC_METHOD(thread_data_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_8_cast_fu_460_p1 );
    sensitive << ( tmp_4_cast_fu_486_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_data_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_e_fu_1047_p2);
    sensitive << ( t1_reg_1244 );
    sensitive << ( d1_reg_375 );

    SC_METHOD(thread_exitcond_fu_506_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_i_1_cast_fu_502_p1);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_i_2_cast_fu_714_p1);
    sensitive << ( i_2_reg_418 );

    SC_METHOD(thread_i_3_fu_556_p2);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_i_4_fu_726_p2);
    sensitive << ( i_2_reg_418 );

    SC_METHOD(thread_i_cast_fu_429_p1);
    sensitive << ( i_reg_299 );

    SC_METHOD(thread_j_1_fu_465_p2);
    sensitive << ( j_reg_310 );

    SC_METHOD(thread_j_cast4_fu_445_p1);
    sensitive << ( j_reg_310 );

    SC_METHOD(thread_k_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_cast_fu_714_p1 );

    SC_METHOD(thread_k_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_address0);
    sensitive << ( i_cast_reg_1110 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_14_cast_fu_518_p1 );
    sensitive << ( tmp_35_cast_fu_551_p1 );
    sensitive << ( i_2_cast_fu_714_p1 );

    SC_METHOD(thread_m_address1);
    sensitive << ( i_1_cast_reg_1164 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_24_cast_fu_529_p1 );
    sensitive << ( tmp_25_cast_fu_540_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_m_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_m_d0);
    sensitive << ( data_q0 );
    sensitive << ( data_q1 );
    sensitive << ( data_load_reg_1144 );
    sensitive << ( data_load_1_reg_1149 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_m_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_m_we1);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_t1_fu_964_p2);
    sensitive << ( tmp10_reg_1234 );
    sensitive << ( tmp9_fu_958_p2 );

    SC_METHOD(thread_tmp10_fu_840_p2);
    sensitive << ( h1_reg_333 );
    sensitive << ( tmp11_fu_834_p2 );

    SC_METHOD(thread_tmp11_fu_834_p2);
    sensitive << ( tmp_37_fu_804_p2 );
    sensitive << ( tmp_41_fu_828_p2 );

    SC_METHOD(thread_tmp12_fu_1035_p2);
    sensitive << ( tmp_43_fu_983_p3 );
    sensitive << ( tmp_46_fu_1005_p3 );

    SC_METHOD(thread_tmp13_fu_1052_p2);
    sensitive << ( tmp_55_reg_1239 );
    sensitive << ( t1_reg_1244 );

    SC_METHOD(thread_tmp2_fu_615_p2);
    sensitive << ( tmp_12_fu_611_p1 );
    sensitive << ( tmp_6_fu_594_p3 );

    SC_METHOD(thread_tmp3_fu_685_p2);
    sensitive << ( tmp_23_fu_681_p1 );
    sensitive << ( tmp_20_fu_663_p3 );

    SC_METHOD(thread_tmp4_fu_697_p2);
    sensitive << ( m_q0 );
    sensitive << ( m_load_1_reg_1191 );

    SC_METHOD(thread_tmp5_fu_702_p2);
    sensitive << ( tmp_13_fu_621_p2 );
    sensitive << ( tmp_24_fu_691_p2 );

    SC_METHOD(thread_tmp6_fu_798_p2);
    sensitive << ( tmp_29_fu_746_p3 );
    sensitive << ( tmp_32_fu_768_p3 );

    SC_METHOD(thread_tmp9_fu_958_p2);
    sensitive << ( k_q0 );
    sensitive << ( m_q0 );

    SC_METHOD(thread_tmp_10_fu_450_p1);
    sensitive << ( j_reg_310 );

    SC_METHOD(thread_tmp_11_fu_602_p4);
    sensitive << ( m_load_reg_1182 );

    SC_METHOD(thread_tmp_12_fu_611_p1);
    sensitive << ( tmp_11_fu_602_p4 );

    SC_METHOD(thread_tmp_13_fu_621_p2);
    sensitive << ( tmp2_fu_615_p2 );
    sensitive << ( tmp_7_fu_574_p3 );

    SC_METHOD(thread_tmp_14_cast_fu_518_p1);
    sensitive << ( tmp_s_fu_512_p2 );

    SC_METHOD(thread_tmp_14_fu_523_p2);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_tmp_15_fu_534_p2);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_tmp_16_fu_627_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_tmp_17_fu_641_p3);
    sensitive << ( tmp_30_fu_637_p1 );
    sensitive << ( tmp_16_fu_627_p4 );

    SC_METHOD(thread_tmp_18_fu_571_p1);
    sensitive << ( m_load_reg_1182 );

    SC_METHOD(thread_tmp_19_fu_649_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_tmp_1_cast_fu_476_p1);
    sensitive << ( tmp_1_fu_471_p2 );

    SC_METHOD(thread_tmp_1_fu_471_p2);
    sensitive << ( tmp_10_reg_1128 );

    SC_METHOD(thread_tmp_20_fu_663_p3);
    sensitive << ( tmp_33_fu_659_p1 );
    sensitive << ( tmp_19_fu_649_p4 );

    SC_METHOD(thread_tmp_21_fu_591_p1);
    sensitive << ( m_load_reg_1182 );

    SC_METHOD(thread_tmp_22_fu_671_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_tmp_23_fu_681_p1);
    sensitive << ( tmp_22_fu_671_p4 );

    SC_METHOD(thread_tmp_24_cast_fu_529_p1);
    sensitive << ( tmp_14_fu_523_p2 );

    SC_METHOD(thread_tmp_24_fu_691_p2);
    sensitive << ( tmp3_fu_685_p2 );
    sensitive << ( tmp_17_fu_641_p3 );

    SC_METHOD(thread_tmp_25_cast_fu_540_p1);
    sensitive << ( tmp_15_fu_534_p2 );

    SC_METHOD(thread_tmp_25_fu_545_p2);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_tmp_26_fu_708_p2);
    sensitive << ( tmp5_fu_702_p2 );
    sensitive << ( tmp4_fu_697_p2 );

    SC_METHOD(thread_tmp_27_fu_720_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_reg_418 );

    SC_METHOD(thread_tmp_28_fu_732_p4);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_29_fu_746_p3);
    sensitive << ( tmp_36_fu_742_p1 );
    sensitive << ( tmp_28_fu_732_p4 );

    SC_METHOD(thread_tmp_30_fu_637_p1);
    sensitive << ( m_q1 );

    SC_METHOD(thread_tmp_31_fu_754_p4);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_32_fu_768_p3);
    sensitive << ( tmp_44_fu_764_p1 );
    sensitive << ( tmp_31_fu_754_p4 );

    SC_METHOD(thread_tmp_33_fu_659_p1);
    sensitive << ( m_q1 );

    SC_METHOD(thread_tmp_34_fu_776_p4);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_35_cast_fu_551_p1);
    sensitive << ( tmp_25_fu_545_p2 );

    SC_METHOD(thread_tmp_35_fu_790_p3);
    sensitive << ( tmp_47_fu_786_p1 );
    sensitive << ( tmp_34_fu_776_p4 );

    SC_METHOD(thread_tmp_36_fu_742_p1);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_37_fu_804_p2);
    sensitive << ( tmp6_fu_798_p2 );
    sensitive << ( tmp_35_fu_790_p3 );

    SC_METHOD(thread_tmp_38_fu_810_p2);
    sensitive << ( g_reg_353 );
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_39_fu_816_p2);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_3_fu_562_p4);
    sensitive << ( m_load_reg_1182 );

    SC_METHOD(thread_tmp_40_fu_822_p2);
    sensitive << ( h_reg_342 );
    sensitive << ( tmp_39_fu_816_p2 );

    SC_METHOD(thread_tmp_41_fu_828_p2);
    sensitive << ( tmp_38_fu_810_p2 );
    sensitive << ( tmp_40_fu_822_p2 );

    SC_METHOD(thread_tmp_42_fu_969_p4);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_43_fu_983_p3);
    sensitive << ( tmp_50_fu_979_p1 );
    sensitive << ( tmp_42_fu_969_p4 );

    SC_METHOD(thread_tmp_44_fu_764_p1);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_45_fu_991_p4);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_46_fu_1005_p3);
    sensitive << ( tmp_57_fu_1001_p1 );
    sensitive << ( tmp_45_fu_991_p4 );

    SC_METHOD(thread_tmp_47_fu_786_p1);
    sensitive << ( f_reg_364 );

    SC_METHOD(thread_tmp_48_fu_1013_p4);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_49_fu_1027_p3);
    sensitive << ( tmp_58_fu_1023_p1 );
    sensitive << ( tmp_48_fu_1013_p4 );

    SC_METHOD(thread_tmp_4_cast_fu_486_p1);
    sensitive << ( tmp_4_fu_481_p2 );

    SC_METHOD(thread_tmp_4_fu_481_p2);
    sensitive << ( tmp_10_reg_1128 );

    SC_METHOD(thread_tmp_50_fu_979_p1);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_51_fu_1041_p2);
    sensitive << ( tmp12_fu_1035_p2 );
    sensitive << ( tmp_49_fu_1027_p3 );

    SC_METHOD(thread_tmp_52_fu_846_p2);
    sensitive << ( d_reg_385 );
    sensitive << ( c_reg_396 );

    SC_METHOD(thread_tmp_53_fu_852_p2);
    sensitive << ( b_reg_407 );
    sensitive << ( tmp_52_fu_846_p2 );

    SC_METHOD(thread_tmp_54_fu_858_p2);
    sensitive << ( d_reg_385 );
    sensitive << ( c_reg_396 );

    SC_METHOD(thread_tmp_55_fu_864_p2);
    sensitive << ( tmp_53_fu_852_p2 );
    sensitive << ( tmp_54_fu_858_p2 );

    SC_METHOD(thread_tmp_57_fu_1001_p1);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_58_fu_1023_p1);
    sensitive << ( b_reg_407 );

    SC_METHOD(thread_tmp_5_fu_439_p2);
    sensitive << ( i_reg_299 );

    SC_METHOD(thread_tmp_6_fu_594_p3);
    sensitive << ( tmp_21_fu_591_p1 );
    sensitive << ( tmp_9_fu_582_p4 );

    SC_METHOD(thread_tmp_7_fu_574_p3);
    sensitive << ( tmp_18_fu_571_p1 );
    sensitive << ( tmp_3_fu_562_p4 );

    SC_METHOD(thread_tmp_8_cast_fu_460_p1);
    sensitive << ( tmp_8_fu_454_p2 );

    SC_METHOD(thread_tmp_8_fu_454_p2);
    sensitive << ( tmp_10_fu_450_p1 );

    SC_METHOD(thread_tmp_9_fu_582_p4);
    sensitive << ( m_load_reg_1182 );

    SC_METHOD(thread_tmp_fu_433_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_299 );

    SC_METHOD(thread_tmp_s_fu_512_p2);
    sensitive << ( i_1_reg_321 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_433_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_506_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_27_fu_720_p2 );

    ap_CS_fsm = "00000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    ap_return_2_preg = "00000000000000000000000000000000";
    ap_return_3_preg = "00000000000000000000000000000000";
    ap_return_4_preg = "00000000000000000000000000000000";
    ap_return_5_preg = "00000000000000000000000000000000";
    ap_return_6_preg = "00000000000000000000000000000000";
    ap_return_7_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_transform_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_state_0_read, "(port)ctx_state_0_read");
    sc_trace(mVcdFile, ctx_state_1_read, "(port)ctx_state_1_read");
    sc_trace(mVcdFile, ctx_state_2_read, "(port)ctx_state_2_read");
    sc_trace(mVcdFile, ctx_state_3_read, "(port)ctx_state_3_read");
    sc_trace(mVcdFile, ctx_state_4_read, "(port)ctx_state_4_read");
    sc_trace(mVcdFile, ctx_state_5_read, "(port)ctx_state_5_read");
    sc_trace(mVcdFile, ctx_state_6_read, "(port)ctx_state_6_read");
    sc_trace(mVcdFile, ctx_state_7_read, "(port)ctx_state_7_read");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_q0, "(port)data_q0");
    sc_trace(mVcdFile, data_address1, "(port)data_address1");
    sc_trace(mVcdFile, data_ce1, "(port)data_ce1");
    sc_trace(mVcdFile, data_q1, "(port)data_q1");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, k_address0, "k_address0");
    sc_trace(mVcdFile, k_ce0, "k_ce0");
    sc_trace(mVcdFile, k_q0, "k_q0");
    sc_trace(mVcdFile, i_cast_fu_429_p1, "i_cast_fu_429_p1");
    sc_trace(mVcdFile, i_cast_reg_1110, "i_cast_reg_1110");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_5_fu_439_p2, "tmp_5_fu_439_p2");
    sc_trace(mVcdFile, tmp_5_reg_1118, "tmp_5_reg_1118");
    sc_trace(mVcdFile, tmp_fu_433_p2, "tmp_fu_433_p2");
    sc_trace(mVcdFile, tmp_10_fu_450_p1, "tmp_10_fu_450_p1");
    sc_trace(mVcdFile, tmp_10_reg_1128, "tmp_10_reg_1128");
    sc_trace(mVcdFile, j_1_fu_465_p2, "j_1_fu_465_p2");
    sc_trace(mVcdFile, j_1_reg_1139, "j_1_reg_1139");
    sc_trace(mVcdFile, data_load_reg_1144, "data_load_reg_1144");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, data_load_1_reg_1149, "data_load_1_reg_1149");
    sc_trace(mVcdFile, i_1_cast_fu_502_p1, "i_1_cast_fu_502_p1");
    sc_trace(mVcdFile, i_1_cast_reg_1164, "i_1_cast_reg_1164");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_506_p2, "exitcond_fu_506_p2");
    sc_trace(mVcdFile, m_q0, "m_q0");
    sc_trace(mVcdFile, m_load_reg_1182, "m_load_reg_1182");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, m_q1, "m_q1");
    sc_trace(mVcdFile, m_load_1_reg_1191, "m_load_1_reg_1191");
    sc_trace(mVcdFile, i_3_fu_556_p2, "i_3_fu_556_p2");
    sc_trace(mVcdFile, i_3_reg_1206, "i_3_reg_1206");
    sc_trace(mVcdFile, tmp_26_fu_708_p2, "tmp_26_fu_708_p2");
    sc_trace(mVcdFile, tmp_26_reg_1211, "tmp_26_reg_1211");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_4_fu_726_p2, "i_4_fu_726_p2");
    sc_trace(mVcdFile, i_4_reg_1219, "i_4_reg_1219");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_27_fu_720_p2, "tmp_27_fu_720_p2");
    sc_trace(mVcdFile, tmp10_fu_840_p2, "tmp10_fu_840_p2");
    sc_trace(mVcdFile, tmp10_reg_1234, "tmp10_reg_1234");
    sc_trace(mVcdFile, tmp_55_fu_864_p2, "tmp_55_fu_864_p2");
    sc_trace(mVcdFile, tmp_55_reg_1239, "tmp_55_reg_1239");
    sc_trace(mVcdFile, t1_fu_964_p2, "t1_fu_964_p2");
    sc_trace(mVcdFile, t1_reg_1244, "t1_reg_1244");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, e_fu_1047_p2, "e_fu_1047_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, a_fu_1056_p2, "a_fu_1056_p2");
    sc_trace(mVcdFile, m_address0, "m_address0");
    sc_trace(mVcdFile, m_ce0, "m_ce0");
    sc_trace(mVcdFile, m_we0, "m_we0");
    sc_trace(mVcdFile, m_d0, "m_d0");
    sc_trace(mVcdFile, m_address1, "m_address1");
    sc_trace(mVcdFile, m_ce1, "m_ce1");
    sc_trace(mVcdFile, m_we1, "m_we1");
    sc_trace(mVcdFile, i_reg_299, "i_reg_299");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_reg_310, "j_reg_310");
    sc_trace(mVcdFile, i_1_reg_321, "i_1_reg_321");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, h_reg_342, "h_reg_342");
    sc_trace(mVcdFile, h1_reg_333, "h1_reg_333");
    sc_trace(mVcdFile, g_reg_353, "g_reg_353");
    sc_trace(mVcdFile, f_reg_364, "f_reg_364");
    sc_trace(mVcdFile, d_reg_385, "d_reg_385");
    sc_trace(mVcdFile, d1_reg_375, "d1_reg_375");
    sc_trace(mVcdFile, c_reg_396, "c_reg_396");
    sc_trace(mVcdFile, b_reg_407, "b_reg_407");
    sc_trace(mVcdFile, i_2_reg_418, "i_2_reg_418");
    sc_trace(mVcdFile, j_cast4_fu_445_p1, "j_cast4_fu_445_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_460_p1, "tmp_8_cast_fu_460_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_476_p1, "tmp_1_cast_fu_476_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_486_p1, "tmp_4_cast_fu_486_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_518_p1, "tmp_14_cast_fu_518_p1");
    sc_trace(mVcdFile, tmp_24_cast_fu_529_p1, "tmp_24_cast_fu_529_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_540_p1, "tmp_25_cast_fu_540_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_551_p1, "tmp_35_cast_fu_551_p1");
    sc_trace(mVcdFile, i_2_cast_fu_714_p1, "i_2_cast_fu_714_p1");
    sc_trace(mVcdFile, tmp_8_fu_454_p2, "tmp_8_fu_454_p2");
    sc_trace(mVcdFile, tmp_1_fu_471_p2, "tmp_1_fu_471_p2");
    sc_trace(mVcdFile, tmp_4_fu_481_p2, "tmp_4_fu_481_p2");
    sc_trace(mVcdFile, tmp_s_fu_512_p2, "tmp_s_fu_512_p2");
    sc_trace(mVcdFile, tmp_14_fu_523_p2, "tmp_14_fu_523_p2");
    sc_trace(mVcdFile, tmp_15_fu_534_p2, "tmp_15_fu_534_p2");
    sc_trace(mVcdFile, tmp_25_fu_545_p2, "tmp_25_fu_545_p2");
    sc_trace(mVcdFile, tmp_18_fu_571_p1, "tmp_18_fu_571_p1");
    sc_trace(mVcdFile, tmp_3_fu_562_p4, "tmp_3_fu_562_p4");
    sc_trace(mVcdFile, tmp_21_fu_591_p1, "tmp_21_fu_591_p1");
    sc_trace(mVcdFile, tmp_9_fu_582_p4, "tmp_9_fu_582_p4");
    sc_trace(mVcdFile, tmp_11_fu_602_p4, "tmp_11_fu_602_p4");
    sc_trace(mVcdFile, tmp_12_fu_611_p1, "tmp_12_fu_611_p1");
    sc_trace(mVcdFile, tmp_6_fu_594_p3, "tmp_6_fu_594_p3");
    sc_trace(mVcdFile, tmp2_fu_615_p2, "tmp2_fu_615_p2");
    sc_trace(mVcdFile, tmp_7_fu_574_p3, "tmp_7_fu_574_p3");
    sc_trace(mVcdFile, tmp_30_fu_637_p1, "tmp_30_fu_637_p1");
    sc_trace(mVcdFile, tmp_16_fu_627_p4, "tmp_16_fu_627_p4");
    sc_trace(mVcdFile, tmp_33_fu_659_p1, "tmp_33_fu_659_p1");
    sc_trace(mVcdFile, tmp_19_fu_649_p4, "tmp_19_fu_649_p4");
    sc_trace(mVcdFile, tmp_22_fu_671_p4, "tmp_22_fu_671_p4");
    sc_trace(mVcdFile, tmp_23_fu_681_p1, "tmp_23_fu_681_p1");
    sc_trace(mVcdFile, tmp_20_fu_663_p3, "tmp_20_fu_663_p3");
    sc_trace(mVcdFile, tmp3_fu_685_p2, "tmp3_fu_685_p2");
    sc_trace(mVcdFile, tmp_17_fu_641_p3, "tmp_17_fu_641_p3");
    sc_trace(mVcdFile, tmp_13_fu_621_p2, "tmp_13_fu_621_p2");
    sc_trace(mVcdFile, tmp_24_fu_691_p2, "tmp_24_fu_691_p2");
    sc_trace(mVcdFile, tmp5_fu_702_p2, "tmp5_fu_702_p2");
    sc_trace(mVcdFile, tmp4_fu_697_p2, "tmp4_fu_697_p2");
    sc_trace(mVcdFile, tmp_36_fu_742_p1, "tmp_36_fu_742_p1");
    sc_trace(mVcdFile, tmp_28_fu_732_p4, "tmp_28_fu_732_p4");
    sc_trace(mVcdFile, tmp_44_fu_764_p1, "tmp_44_fu_764_p1");
    sc_trace(mVcdFile, tmp_31_fu_754_p4, "tmp_31_fu_754_p4");
    sc_trace(mVcdFile, tmp_47_fu_786_p1, "tmp_47_fu_786_p1");
    sc_trace(mVcdFile, tmp_34_fu_776_p4, "tmp_34_fu_776_p4");
    sc_trace(mVcdFile, tmp_29_fu_746_p3, "tmp_29_fu_746_p3");
    sc_trace(mVcdFile, tmp_32_fu_768_p3, "tmp_32_fu_768_p3");
    sc_trace(mVcdFile, tmp6_fu_798_p2, "tmp6_fu_798_p2");
    sc_trace(mVcdFile, tmp_35_fu_790_p3, "tmp_35_fu_790_p3");
    sc_trace(mVcdFile, tmp_39_fu_816_p2, "tmp_39_fu_816_p2");
    sc_trace(mVcdFile, tmp_38_fu_810_p2, "tmp_38_fu_810_p2");
    sc_trace(mVcdFile, tmp_40_fu_822_p2, "tmp_40_fu_822_p2");
    sc_trace(mVcdFile, tmp_37_fu_804_p2, "tmp_37_fu_804_p2");
    sc_trace(mVcdFile, tmp_41_fu_828_p2, "tmp_41_fu_828_p2");
    sc_trace(mVcdFile, tmp11_fu_834_p2, "tmp11_fu_834_p2");
    sc_trace(mVcdFile, tmp_52_fu_846_p2, "tmp_52_fu_846_p2");
    sc_trace(mVcdFile, tmp_53_fu_852_p2, "tmp_53_fu_852_p2");
    sc_trace(mVcdFile, tmp_54_fu_858_p2, "tmp_54_fu_858_p2");
    sc_trace(mVcdFile, ctx_state_fu_870_p2, "ctx_state_fu_870_p2");
    sc_trace(mVcdFile, ctx_state_1_fu_875_p2, "ctx_state_1_fu_875_p2");
    sc_trace(mVcdFile, ctx_state_2_fu_880_p2, "ctx_state_2_fu_880_p2");
    sc_trace(mVcdFile, ctx_state_3_fu_885_p2, "ctx_state_3_fu_885_p2");
    sc_trace(mVcdFile, ctx_state_4_fu_890_p2, "ctx_state_4_fu_890_p2");
    sc_trace(mVcdFile, ctx_state_5_fu_895_p2, "ctx_state_5_fu_895_p2");
    sc_trace(mVcdFile, ctx_state_6_fu_900_p2, "ctx_state_6_fu_900_p2");
    sc_trace(mVcdFile, ctx_state_7_fu_905_p2, "ctx_state_7_fu_905_p2");
    sc_trace(mVcdFile, tmp9_fu_958_p2, "tmp9_fu_958_p2");
    sc_trace(mVcdFile, tmp_50_fu_979_p1, "tmp_50_fu_979_p1");
    sc_trace(mVcdFile, tmp_42_fu_969_p4, "tmp_42_fu_969_p4");
    sc_trace(mVcdFile, tmp_57_fu_1001_p1, "tmp_57_fu_1001_p1");
    sc_trace(mVcdFile, tmp_45_fu_991_p4, "tmp_45_fu_991_p4");
    sc_trace(mVcdFile, tmp_58_fu_1023_p1, "tmp_58_fu_1023_p1");
    sc_trace(mVcdFile, tmp_48_fu_1013_p4, "tmp_48_fu_1013_p4");
    sc_trace(mVcdFile, tmp_43_fu_983_p3, "tmp_43_fu_983_p3");
    sc_trace(mVcdFile, tmp_46_fu_1005_p3, "tmp_46_fu_1005_p3");
    sc_trace(mVcdFile, tmp12_fu_1035_p2, "tmp12_fu_1035_p2");
    sc_trace(mVcdFile, tmp_49_fu_1027_p3, "tmp_49_fu_1027_p3");
    sc_trace(mVcdFile, tmp13_fu_1052_p2, "tmp13_fu_1052_p2");
    sc_trace(mVcdFile, tmp_51_fu_1041_p2, "tmp_51_fu_1041_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_transform::~sha256_transform() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete k_U;
    delete m_U;
}

void sha256_transform::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_0_preg = ctx_state_fu_870_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_1_preg = ctx_state_1_fu_875_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_2_preg = ctx_state_2_fu_880_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_3_preg = ctx_state_3_fu_885_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_4_preg = ctx_state_4_fu_890_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_5_preg = ctx_state_5_fu_895_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_6_preg = ctx_state_6_fu_900_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
            ap_return_7_preg = ctx_state_7_fu_905_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        b_reg_407 = ctx_state_0_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        b_reg_407 = a_fu_1056_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        c_reg_396 = ctx_state_1_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        c_reg_396 = b_reg_407.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        d1_reg_375 = ctx_state_3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        d1_reg_375 = d_reg_385.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        d_reg_385 = ctx_state_2_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        d_reg_385 = c_reg_396.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        f_reg_364 = ctx_state_4_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        f_reg_364 = e_fu_1047_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        g_reg_353 = ctx_state_5_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        g_reg_353 = f_reg_364.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        h1_reg_333 = ctx_state_7_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        h1_reg_333 = h_reg_342.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        h_reg_342 = ctx_state_6_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        h_reg_342 = g_reg_353.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_433_p2.read(), ap_const_lv1_1))) {
        i_1_reg_321 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_1_reg_321 = i_3_reg_1206.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
        i_2_reg_418 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_2_reg_418 = i_4_reg_1219.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_299 = tmp_5_reg_1118.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_299 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_310 = j_1_reg_1139.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_310 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_load_1_reg_1149 = data_q1.read();
        data_load_reg_1144 = data_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_cast_reg_1164 = i_1_cast_fu_502_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_3_reg_1206 = i_3_fu_556_p2.read();
        m_load_1_reg_1191 = m_q1.read();
        m_load_reg_1182 = m_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_4_reg_1219 = i_4_fu_726_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_cast_reg_1110 = i_cast_fu_429_p1.read();
        tmp_5_reg_1118 = tmp_5_fu_439_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_433_p2.read(), ap_const_lv1_0))) {
        j_1_reg_1139 = j_1_fu_465_p2.read();
        tmp_10_reg_1128 = tmp_10_fu_450_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t1_reg_1244 = t1_fu_964_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_27_fu_720_p2.read()))) {
        tmp10_reg_1234 = tmp10_fu_840_p2.read();
        tmp_55_reg_1239 = tmp_55_fu_864_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_26_reg_1211 = tmp_26_fu_708_p2.read();
    }
}

void sha256_transform::thread_a_fu_1056_p2() {
    a_fu_1056_p2 = (!tmp13_fu_1052_p2.read().is_01() || !tmp_51_fu_1041_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp13_fu_1052_p2.read()) + sc_biguint<32>(tmp_51_fu_1041_p2.read()));
}

void sha256_transform::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_transform::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_transform::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_transform::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_transform::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_transform::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_transform::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_transform::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_transform::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_transform::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_transform::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_transform::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_0 = ctx_state_fu_870_p2.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void sha256_transform::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_1 = ctx_state_1_fu_875_p2.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void sha256_transform::thread_ap_return_2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_2 = ctx_state_2_fu_880_p2.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void sha256_transform::thread_ap_return_3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_3 = ctx_state_3_fu_885_p2.read();
    } else {
        ap_return_3 = ap_return_3_preg.read();
    }
}

void sha256_transform::thread_ap_return_4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_4 = ctx_state_4_fu_890_p2.read();
    } else {
        ap_return_4 = ap_return_4_preg.read();
    }
}

void sha256_transform::thread_ap_return_5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_5 = ctx_state_5_fu_895_p2.read();
    } else {
        ap_return_5 = ap_return_5_preg.read();
    }
}

void sha256_transform::thread_ap_return_6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_6 = ctx_state_6_fu_900_p2.read();
    } else {
        ap_return_6 = ap_return_6_preg.read();
    }
}

void sha256_transform::thread_ap_return_7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
        ap_return_7 = ctx_state_7_fu_905_p2.read();
    } else {
        ap_return_7 = ap_return_7_preg.read();
    }
}

void sha256_transform::thread_ctx_state_1_fu_875_p2() {
    ctx_state_1_fu_875_p2 = (!c_reg_396.read().is_01() || !ctx_state_1_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(c_reg_396.read()) + sc_biguint<32>(ctx_state_1_read.read()));
}

void sha256_transform::thread_ctx_state_2_fu_880_p2() {
    ctx_state_2_fu_880_p2 = (!d_reg_385.read().is_01() || !ctx_state_2_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(d_reg_385.read()) + sc_biguint<32>(ctx_state_2_read.read()));
}

void sha256_transform::thread_ctx_state_3_fu_885_p2() {
    ctx_state_3_fu_885_p2 = (!d1_reg_375.read().is_01() || !ctx_state_3_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(d1_reg_375.read()) + sc_biguint<32>(ctx_state_3_read.read()));
}

void sha256_transform::thread_ctx_state_4_fu_890_p2() {
    ctx_state_4_fu_890_p2 = (!f_reg_364.read().is_01() || !ctx_state_4_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(f_reg_364.read()) + sc_biguint<32>(ctx_state_4_read.read()));
}

void sha256_transform::thread_ctx_state_5_fu_895_p2() {
    ctx_state_5_fu_895_p2 = (!g_reg_353.read().is_01() || !ctx_state_5_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(g_reg_353.read()) + sc_biguint<32>(ctx_state_5_read.read()));
}

void sha256_transform::thread_ctx_state_6_fu_900_p2() {
    ctx_state_6_fu_900_p2 = (!h_reg_342.read().is_01() || !ctx_state_6_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h_reg_342.read()) + sc_biguint<32>(ctx_state_6_read.read()));
}

void sha256_transform::thread_ctx_state_7_fu_905_p2() {
    ctx_state_7_fu_905_p2 = (!h1_reg_333.read().is_01() || !ctx_state_7_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h1_reg_333.read()) + sc_biguint<32>(ctx_state_7_read.read()));
}

void sha256_transform::thread_ctx_state_fu_870_p2() {
    ctx_state_fu_870_p2 = (!b_reg_407.read().is_01() || !ctx_state_0_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(b_reg_407.read()) + sc_biguint<32>(ctx_state_0_read.read()));
}

void sha256_transform::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_address0 =  (sc_lv<6>) (tmp_1_cast_fu_476_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_address0 =  (sc_lv<6>) (j_cast4_fu_445_p1.read());
    } else {
        data_address0 = "XXXXXX";
    }
}

void sha256_transform::thread_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_address1 =  (sc_lv<6>) (tmp_4_cast_fu_486_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_address1 =  (sc_lv<6>) (tmp_8_cast_fu_460_p1.read());
    } else {
        data_address1 = "XXXXXX";
    }
}

void sha256_transform::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        data_ce1 = ap_const_logic_1;
    } else {
        data_ce1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_e_fu_1047_p2() {
    e_fu_1047_p2 = (!t1_reg_1244.read().is_01() || !d1_reg_375.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t1_reg_1244.read()) + sc_biguint<32>(d1_reg_375.read()));
}

void sha256_transform::thread_exitcond_fu_506_p2() {
    exitcond_fu_506_p2 = (!i_1_reg_321.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_321.read() == ap_const_lv7_40);
}

void sha256_transform::thread_i_1_cast_fu_502_p1() {
    i_1_cast_fu_502_p1 = esl_zext<32,7>(i_1_reg_321.read());
}

void sha256_transform::thread_i_2_cast_fu_714_p1() {
    i_2_cast_fu_714_p1 = esl_zext<32,7>(i_2_reg_418.read());
}

void sha256_transform::thread_i_3_fu_556_p2() {
    i_3_fu_556_p2 = (!ap_const_lv7_1.is_01() || !i_1_reg_321.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(i_1_reg_321.read()));
}

void sha256_transform::thread_i_4_fu_726_p2() {
    i_4_fu_726_p2 = (!i_2_reg_418.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_2_reg_418.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sha256_transform::thread_i_cast_fu_429_p1() {
    i_cast_fu_429_p1 = esl_zext<32,5>(i_reg_299.read());
}

void sha256_transform::thread_j_1_fu_465_p2() {
    j_1_fu_465_p2 = (!ap_const_lv7_4.is_01() || !j_reg_310.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_4) + sc_biguint<7>(j_reg_310.read()));
}

void sha256_transform::thread_j_cast4_fu_445_p1() {
    j_cast4_fu_445_p1 = esl_zext<32,7>(j_reg_310.read());
}

void sha256_transform::thread_k_address0() {
    k_address0 =  (sc_lv<6>) (i_2_cast_fu_714_p1.read());
}

void sha256_transform::thread_k_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        k_ce0 = ap_const_logic_1;
    } else {
        k_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        m_address0 =  (sc_lv<6>) (i_2_cast_fu_714_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_address0 =  (sc_lv<6>) (tmp_35_cast_fu_551_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address0 =  (sc_lv<6>) (tmp_14_cast_fu_518_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_address0 =  (sc_lv<6>) (i_cast_reg_1110.read());
    } else {
        m_address0 = "XXXXXX";
    }
}

void sha256_transform::thread_m_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_address1 =  (sc_lv<6>) (i_1_cast_reg_1164.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_address1 =  (sc_lv<6>) (tmp_25_cast_fu_540_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address1 =  (sc_lv<6>) (tmp_24_cast_fu_529_p1.read());
    } else {
        m_address1 = "XXXXXX";
    }
}

void sha256_transform::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        m_ce1 = ap_const_logic_1;
    } else {
        m_ce1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_d0() {
    m_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(data_load_reg_1144.read(), data_load_1_reg_1149.read()), data_q0.read()), data_q1.read());
}

void sha256_transform::thread_m_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_we0 = ap_const_logic_1;
    } else {
        m_we0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_we1 = ap_const_logic_1;
    } else {
        m_we1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_t1_fu_964_p2() {
    t1_fu_964_p2 = (!tmp10_reg_1234.read().is_01() || !tmp9_fu_958_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp10_reg_1234.read()) + sc_biguint<32>(tmp9_fu_958_p2.read()));
}

void sha256_transform::thread_tmp10_fu_840_p2() {
    tmp10_fu_840_p2 = (!tmp11_fu_834_p2.read().is_01() || !h1_reg_333.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp11_fu_834_p2.read()) + sc_biguint<32>(h1_reg_333.read()));
}

void sha256_transform::thread_tmp11_fu_834_p2() {
    tmp11_fu_834_p2 = (!tmp_37_fu_804_p2.read().is_01() || !tmp_41_fu_828_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_37_fu_804_p2.read()) + sc_biguint<32>(tmp_41_fu_828_p2.read()));
}

void sha256_transform::thread_tmp12_fu_1035_p2() {
    tmp12_fu_1035_p2 = (tmp_43_fu_983_p3.read() ^ tmp_46_fu_1005_p3.read());
}

void sha256_transform::thread_tmp13_fu_1052_p2() {
    tmp13_fu_1052_p2 = (!tmp_55_reg_1239.read().is_01() || !t1_reg_1244.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_55_reg_1239.read()) + sc_biguint<32>(t1_reg_1244.read()));
}

void sha256_transform::thread_tmp2_fu_615_p2() {
    tmp2_fu_615_p2 = (tmp_12_fu_611_p1.read() ^ tmp_6_fu_594_p3.read());
}

void sha256_transform::thread_tmp3_fu_685_p2() {
    tmp3_fu_685_p2 = (tmp_23_fu_681_p1.read() ^ tmp_20_fu_663_p3.read());
}

void sha256_transform::thread_tmp4_fu_697_p2() {
    tmp4_fu_697_p2 = (!m_load_1_reg_1191.read().is_01() || !m_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(m_load_1_reg_1191.read()) + sc_biguint<32>(m_q0.read()));
}

void sha256_transform::thread_tmp5_fu_702_p2() {
    tmp5_fu_702_p2 = (!tmp_13_fu_621_p2.read().is_01() || !tmp_24_fu_691_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_13_fu_621_p2.read()) + sc_biguint<32>(tmp_24_fu_691_p2.read()));
}

void sha256_transform::thread_tmp6_fu_798_p2() {
    tmp6_fu_798_p2 = (tmp_29_fu_746_p3.read() ^ tmp_32_fu_768_p3.read());
}

void sha256_transform::thread_tmp9_fu_958_p2() {
    tmp9_fu_958_p2 = (!k_q0.read().is_01() || !m_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(k_q0.read()) + sc_biguint<32>(m_q0.read()));
}

void sha256_transform::thread_tmp_10_fu_450_p1() {
    tmp_10_fu_450_p1 = j_reg_310.read().range(6-1, 0);
}

void sha256_transform::thread_tmp_11_fu_602_p4() {
    tmp_11_fu_602_p4 = m_load_reg_1182.read().range(31, 10);
}

void sha256_transform::thread_tmp_12_fu_611_p1() {
    tmp_12_fu_611_p1 = esl_zext<32,22>(tmp_11_fu_602_p4.read());
}

void sha256_transform::thread_tmp_13_fu_621_p2() {
    tmp_13_fu_621_p2 = (tmp2_fu_615_p2.read() ^ tmp_7_fu_574_p3.read());
}

void sha256_transform::thread_tmp_14_cast_fu_518_p1() {
    tmp_14_cast_fu_518_p1 = esl_zext<32,7>(tmp_s_fu_512_p2.read());
}

void sha256_transform::thread_tmp_14_fu_523_p2() {
    tmp_14_fu_523_p2 = (!ap_const_lv7_79.is_01() || !i_1_reg_321.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_79) + sc_biguint<7>(i_1_reg_321.read()));
}

void sha256_transform::thread_tmp_15_fu_534_p2() {
    tmp_15_fu_534_p2 = (!ap_const_lv7_71.is_01() || !i_1_reg_321.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_71) + sc_biguint<7>(i_1_reg_321.read()));
}

void sha256_transform::thread_tmp_16_fu_627_p4() {
    tmp_16_fu_627_p4 = m_q1.read().range(31, 7);
}

void sha256_transform::thread_tmp_17_fu_641_p3() {
    tmp_17_fu_641_p3 = esl_concat<7,25>(tmp_30_fu_637_p1.read(), tmp_16_fu_627_p4.read());
}

void sha256_transform::thread_tmp_18_fu_571_p1() {
    tmp_18_fu_571_p1 = m_load_reg_1182.read().range(17-1, 0);
}

void sha256_transform::thread_tmp_19_fu_649_p4() {
    tmp_19_fu_649_p4 = m_q1.read().range(31, 18);
}

void sha256_transform::thread_tmp_1_cast_fu_476_p1() {
    tmp_1_cast_fu_476_p1 = esl_zext<32,6>(tmp_1_fu_471_p2.read());
}

void sha256_transform::thread_tmp_1_fu_471_p2() {
    tmp_1_fu_471_p2 = (tmp_10_reg_1128.read() | ap_const_lv6_2);
}

void sha256_transform::thread_tmp_20_fu_663_p3() {
    tmp_20_fu_663_p3 = esl_concat<18,14>(tmp_33_fu_659_p1.read(), tmp_19_fu_649_p4.read());
}

void sha256_transform::thread_tmp_21_fu_591_p1() {
    tmp_21_fu_591_p1 = m_load_reg_1182.read().range(19-1, 0);
}

void sha256_transform::thread_tmp_22_fu_671_p4() {
    tmp_22_fu_671_p4 = m_q1.read().range(31, 3);
}

void sha256_transform::thread_tmp_23_fu_681_p1() {
    tmp_23_fu_681_p1 = esl_zext<32,29>(tmp_22_fu_671_p4.read());
}

void sha256_transform::thread_tmp_24_cast_fu_529_p1() {
    tmp_24_cast_fu_529_p1 = esl_zext<32,7>(tmp_14_fu_523_p2.read());
}

void sha256_transform::thread_tmp_24_fu_691_p2() {
    tmp_24_fu_691_p2 = (tmp3_fu_685_p2.read() ^ tmp_17_fu_641_p3.read());
}

void sha256_transform::thread_tmp_25_cast_fu_540_p1() {
    tmp_25_cast_fu_540_p1 = esl_zext<32,7>(tmp_15_fu_534_p2.read());
}

void sha256_transform::thread_tmp_25_fu_545_p2() {
    tmp_25_fu_545_p2 = (!ap_const_lv7_70.is_01() || !i_1_reg_321.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_70) + sc_biguint<7>(i_1_reg_321.read()));
}

void sha256_transform::thread_tmp_26_fu_708_p2() {
    tmp_26_fu_708_p2 = (!tmp5_fu_702_p2.read().is_01() || !tmp4_fu_697_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp5_fu_702_p2.read()) + sc_biguint<32>(tmp4_fu_697_p2.read()));
}

void sha256_transform::thread_tmp_27_fu_720_p2() {
    tmp_27_fu_720_p2 = (!i_2_reg_418.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_418.read() == ap_const_lv7_40);
}

void sha256_transform::thread_tmp_28_fu_732_p4() {
    tmp_28_fu_732_p4 = f_reg_364.read().range(31, 6);
}

void sha256_transform::thread_tmp_29_fu_746_p3() {
    tmp_29_fu_746_p3 = esl_concat<6,26>(tmp_36_fu_742_p1.read(), tmp_28_fu_732_p4.read());
}

void sha256_transform::thread_tmp_30_fu_637_p1() {
    tmp_30_fu_637_p1 = m_q1.read().range(7-1, 0);
}

void sha256_transform::thread_tmp_31_fu_754_p4() {
    tmp_31_fu_754_p4 = f_reg_364.read().range(31, 11);
}

void sha256_transform::thread_tmp_32_fu_768_p3() {
    tmp_32_fu_768_p3 = esl_concat<11,21>(tmp_44_fu_764_p1.read(), tmp_31_fu_754_p4.read());
}

void sha256_transform::thread_tmp_33_fu_659_p1() {
    tmp_33_fu_659_p1 = m_q1.read().range(18-1, 0);
}

void sha256_transform::thread_tmp_34_fu_776_p4() {
    tmp_34_fu_776_p4 = f_reg_364.read().range(31, 25);
}

void sha256_transform::thread_tmp_35_cast_fu_551_p1() {
    tmp_35_cast_fu_551_p1 = esl_zext<32,7>(tmp_25_fu_545_p2.read());
}

void sha256_transform::thread_tmp_35_fu_790_p3() {
    tmp_35_fu_790_p3 = esl_concat<25,7>(tmp_47_fu_786_p1.read(), tmp_34_fu_776_p4.read());
}

void sha256_transform::thread_tmp_36_fu_742_p1() {
    tmp_36_fu_742_p1 = f_reg_364.read().range(6-1, 0);
}

void sha256_transform::thread_tmp_37_fu_804_p2() {
    tmp_37_fu_804_p2 = (tmp6_fu_798_p2.read() ^ tmp_35_fu_790_p3.read());
}

void sha256_transform::thread_tmp_38_fu_810_p2() {
    tmp_38_fu_810_p2 = (f_reg_364.read() & g_reg_353.read());
}

void sha256_transform::thread_tmp_39_fu_816_p2() {
    tmp_39_fu_816_p2 = (f_reg_364.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_transform::thread_tmp_3_fu_562_p4() {
    tmp_3_fu_562_p4 = m_load_reg_1182.read().range(31, 17);
}

void sha256_transform::thread_tmp_40_fu_822_p2() {
    tmp_40_fu_822_p2 = (h_reg_342.read() & tmp_39_fu_816_p2.read());
}

void sha256_transform::thread_tmp_41_fu_828_p2() {
    tmp_41_fu_828_p2 = (tmp_38_fu_810_p2.read() ^ tmp_40_fu_822_p2.read());
}

void sha256_transform::thread_tmp_42_fu_969_p4() {
    tmp_42_fu_969_p4 = b_reg_407.read().range(31, 2);
}

void sha256_transform::thread_tmp_43_fu_983_p3() {
    tmp_43_fu_983_p3 = esl_concat<2,30>(tmp_50_fu_979_p1.read(), tmp_42_fu_969_p4.read());
}

void sha256_transform::thread_tmp_44_fu_764_p1() {
    tmp_44_fu_764_p1 = f_reg_364.read().range(11-1, 0);
}

void sha256_transform::thread_tmp_45_fu_991_p4() {
    tmp_45_fu_991_p4 = b_reg_407.read().range(31, 13);
}

void sha256_transform::thread_tmp_46_fu_1005_p3() {
    tmp_46_fu_1005_p3 = esl_concat<13,19>(tmp_57_fu_1001_p1.read(), tmp_45_fu_991_p4.read());
}

void sha256_transform::thread_tmp_47_fu_786_p1() {
    tmp_47_fu_786_p1 = f_reg_364.read().range(25-1, 0);
}

void sha256_transform::thread_tmp_48_fu_1013_p4() {
    tmp_48_fu_1013_p4 = b_reg_407.read().range(31, 22);
}

void sha256_transform::thread_tmp_49_fu_1027_p3() {
    tmp_49_fu_1027_p3 = esl_concat<22,10>(tmp_58_fu_1023_p1.read(), tmp_48_fu_1013_p4.read());
}

void sha256_transform::thread_tmp_4_cast_fu_486_p1() {
    tmp_4_cast_fu_486_p1 = esl_zext<32,6>(tmp_4_fu_481_p2.read());
}

void sha256_transform::thread_tmp_4_fu_481_p2() {
    tmp_4_fu_481_p2 = (tmp_10_reg_1128.read() | ap_const_lv6_3);
}

void sha256_transform::thread_tmp_50_fu_979_p1() {
    tmp_50_fu_979_p1 = b_reg_407.read().range(2-1, 0);
}

void sha256_transform::thread_tmp_51_fu_1041_p2() {
    tmp_51_fu_1041_p2 = (tmp12_fu_1035_p2.read() ^ tmp_49_fu_1027_p3.read());
}

void sha256_transform::thread_tmp_52_fu_846_p2() {
    tmp_52_fu_846_p2 = (c_reg_396.read() ^ d_reg_385.read());
}

void sha256_transform::thread_tmp_53_fu_852_p2() {
    tmp_53_fu_852_p2 = (b_reg_407.read() & tmp_52_fu_846_p2.read());
}

void sha256_transform::thread_tmp_54_fu_858_p2() {
    tmp_54_fu_858_p2 = (c_reg_396.read() & d_reg_385.read());
}

void sha256_transform::thread_tmp_55_fu_864_p2() {
    tmp_55_fu_864_p2 = (tmp_53_fu_852_p2.read() ^ tmp_54_fu_858_p2.read());
}

void sha256_transform::thread_tmp_57_fu_1001_p1() {
    tmp_57_fu_1001_p1 = b_reg_407.read().range(13-1, 0);
}

void sha256_transform::thread_tmp_58_fu_1023_p1() {
    tmp_58_fu_1023_p1 = b_reg_407.read().range(22-1, 0);
}

void sha256_transform::thread_tmp_5_fu_439_p2() {
    tmp_5_fu_439_p2 = (!i_reg_299.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_299.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void sha256_transform::thread_tmp_6_fu_594_p3() {
    tmp_6_fu_594_p3 = esl_concat<19,13>(tmp_21_fu_591_p1.read(), tmp_9_fu_582_p4.read());
}

void sha256_transform::thread_tmp_7_fu_574_p3() {
    tmp_7_fu_574_p3 = esl_concat<17,15>(tmp_18_fu_571_p1.read(), tmp_3_fu_562_p4.read());
}

void sha256_transform::thread_tmp_8_cast_fu_460_p1() {
    tmp_8_cast_fu_460_p1 = esl_zext<32,6>(tmp_8_fu_454_p2.read());
}

void sha256_transform::thread_tmp_8_fu_454_p2() {
    tmp_8_fu_454_p2 = (tmp_10_fu_450_p1.read() | ap_const_lv6_1);
}

void sha256_transform::thread_tmp_9_fu_582_p4() {
    tmp_9_fu_582_p4 = m_load_reg_1182.read().range(31, 19);
}

void sha256_transform::thread_tmp_fu_433_p2() {
    tmp_fu_433_p2 = (!i_reg_299.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_299.read() == ap_const_lv5_10);
}

void sha256_transform::thread_tmp_s_fu_512_p2() {
    tmp_s_fu_512_p2 = (!ap_const_lv7_7E.is_01() || !i_1_reg_321.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7E) + sc_biguint<7>(i_1_reg_321.read()));
}

void sha256_transform::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_433_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_506_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(tmp_27_fu_720_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

