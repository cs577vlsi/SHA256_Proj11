// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_final (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_data_0_address0,
        ctx_data_0_ce0,
        ctx_data_0_we0,
        ctx_data_0_d0,
        ctx_data_0_q0,
        ctx_data_0_address1,
        ctx_data_0_ce1,
        ctx_data_0_we1,
        ctx_data_0_d1,
        ctx_data_0_q1,
        ctx_data_1_address0,
        ctx_data_1_ce0,
        ctx_data_1_we0,
        ctx_data_1_d0,
        ctx_data_1_q0,
        ctx_data_1_address1,
        ctx_data_1_ce1,
        ctx_data_1_we1,
        ctx_data_1_d1,
        ctx_data_1_q1,
        ctx_data_2_address0,
        ctx_data_2_ce0,
        ctx_data_2_we0,
        ctx_data_2_d0,
        ctx_data_2_q0,
        ctx_data_2_address1,
        ctx_data_2_ce1,
        ctx_data_2_we1,
        ctx_data_2_d1,
        ctx_data_2_q1,
        ctx_data_3_address0,
        ctx_data_3_ce0,
        ctx_data_3_we0,
        ctx_data_3_d0,
        ctx_data_3_q0,
        ctx_data_3_address1,
        ctx_data_3_ce1,
        ctx_data_3_we1,
        ctx_data_3_d1,
        ctx_data_3_q1,
        ctx_datalen_read,
        ctx_bitlen_0_read,
        p_read3,
        p_read2,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1
);

parameter    ap_ST_fsm_state1 = 112'd1;
parameter    ap_ST_fsm_state2 = 112'd2;
parameter    ap_ST_fsm_state3 = 112'd4;
parameter    ap_ST_fsm_state4 = 112'd8;
parameter    ap_ST_fsm_state5 = 112'd16;
parameter    ap_ST_fsm_state6 = 112'd32;
parameter    ap_ST_fsm_state7 = 112'd64;
parameter    ap_ST_fsm_state8 = 112'd128;
parameter    ap_ST_fsm_state9 = 112'd256;
parameter    ap_ST_fsm_state10 = 112'd512;
parameter    ap_ST_fsm_state11 = 112'd1024;
parameter    ap_ST_fsm_state12 = 112'd2048;
parameter    ap_ST_fsm_state13 = 112'd4096;
parameter    ap_ST_fsm_state14 = 112'd8192;
parameter    ap_ST_fsm_state15 = 112'd16384;
parameter    ap_ST_fsm_state16 = 112'd32768;
parameter    ap_ST_fsm_state17 = 112'd65536;
parameter    ap_ST_fsm_state18 = 112'd131072;
parameter    ap_ST_fsm_state19 = 112'd262144;
parameter    ap_ST_fsm_state20 = 112'd524288;
parameter    ap_ST_fsm_state21 = 112'd1048576;
parameter    ap_ST_fsm_state22 = 112'd2097152;
parameter    ap_ST_fsm_state23 = 112'd4194304;
parameter    ap_ST_fsm_state24 = 112'd8388608;
parameter    ap_ST_fsm_state25 = 112'd16777216;
parameter    ap_ST_fsm_state26 = 112'd33554432;
parameter    ap_ST_fsm_state27 = 112'd67108864;
parameter    ap_ST_fsm_state28 = 112'd134217728;
parameter    ap_ST_fsm_state29 = 112'd268435456;
parameter    ap_ST_fsm_state30 = 112'd536870912;
parameter    ap_ST_fsm_state31 = 112'd1073741824;
parameter    ap_ST_fsm_state32 = 112'd2147483648;
parameter    ap_ST_fsm_state33 = 112'd4294967296;
parameter    ap_ST_fsm_state34 = 112'd8589934592;
parameter    ap_ST_fsm_state35 = 112'd17179869184;
parameter    ap_ST_fsm_state36 = 112'd34359738368;
parameter    ap_ST_fsm_state37 = 112'd68719476736;
parameter    ap_ST_fsm_state38 = 112'd137438953472;
parameter    ap_ST_fsm_state39 = 112'd274877906944;
parameter    ap_ST_fsm_state40 = 112'd549755813888;
parameter    ap_ST_fsm_state41 = 112'd1099511627776;
parameter    ap_ST_fsm_state42 = 112'd2199023255552;
parameter    ap_ST_fsm_state43 = 112'd4398046511104;
parameter    ap_ST_fsm_state44 = 112'd8796093022208;
parameter    ap_ST_fsm_state45 = 112'd17592186044416;
parameter    ap_ST_fsm_state46 = 112'd35184372088832;
parameter    ap_ST_fsm_state47 = 112'd70368744177664;
parameter    ap_ST_fsm_state48 = 112'd140737488355328;
parameter    ap_ST_fsm_state49 = 112'd281474976710656;
parameter    ap_ST_fsm_state50 = 112'd562949953421312;
parameter    ap_ST_fsm_state51 = 112'd1125899906842624;
parameter    ap_ST_fsm_state52 = 112'd2251799813685248;
parameter    ap_ST_fsm_state53 = 112'd4503599627370496;
parameter    ap_ST_fsm_state54 = 112'd9007199254740992;
parameter    ap_ST_fsm_state55 = 112'd18014398509481984;
parameter    ap_ST_fsm_state56 = 112'd36028797018963968;
parameter    ap_ST_fsm_state57 = 112'd72057594037927936;
parameter    ap_ST_fsm_state58 = 112'd144115188075855872;
parameter    ap_ST_fsm_state59 = 112'd288230376151711744;
parameter    ap_ST_fsm_state60 = 112'd576460752303423488;
parameter    ap_ST_fsm_state61 = 112'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 112'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 112'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 112'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 112'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 112'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 112'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 112'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 112'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 112'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 112'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 112'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 112'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 112'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 112'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 112'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 112'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 112'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 112'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 112'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 112'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 112'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 112'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 112'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 112'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 112'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 112'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 112'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 112'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 112'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 112'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 112'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 112'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 112'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 112'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 112'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 112'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 112'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 112'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 112'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 112'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 112'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 112'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 112'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 112'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 112'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 112'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 112'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 112'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 112'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 112'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 112'd2596148429267413814265248164610048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] ctx_data_0_address0;
output   ctx_data_0_ce0;
output   ctx_data_0_we0;
output  [7:0] ctx_data_0_d0;
input  [7:0] ctx_data_0_q0;
output  [3:0] ctx_data_0_address1;
output   ctx_data_0_ce1;
output   ctx_data_0_we1;
output  [7:0] ctx_data_0_d1;
input  [7:0] ctx_data_0_q1;
output  [3:0] ctx_data_1_address0;
output   ctx_data_1_ce0;
output   ctx_data_1_we0;
output  [7:0] ctx_data_1_d0;
input  [7:0] ctx_data_1_q0;
output  [3:0] ctx_data_1_address1;
output   ctx_data_1_ce1;
output   ctx_data_1_we1;
output  [7:0] ctx_data_1_d1;
input  [7:0] ctx_data_1_q1;
output  [3:0] ctx_data_2_address0;
output   ctx_data_2_ce0;
output   ctx_data_2_we0;
output  [7:0] ctx_data_2_d0;
input  [7:0] ctx_data_2_q0;
output  [3:0] ctx_data_2_address1;
output   ctx_data_2_ce1;
output   ctx_data_2_we1;
output  [7:0] ctx_data_2_d1;
input  [7:0] ctx_data_2_q1;
output  [3:0] ctx_data_3_address0;
output   ctx_data_3_ce0;
output   ctx_data_3_we0;
output  [7:0] ctx_data_3_d0;
input  [7:0] ctx_data_3_q0;
output  [3:0] ctx_data_3_address1;
output   ctx_data_3_ce1;
output   ctx_data_3_we1;
output  [7:0] ctx_data_3_d1;
input  [7:0] ctx_data_3_q1;
input  [31:0] ctx_datalen_read;
input  [31:0] ctx_bitlen_0_read;
input  [31:0] p_read3;
input  [31:0] p_read2;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
output  [5:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [7:0] hash_d0;
output  [5:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [7:0] hash_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ctx_data_0_address0;
reg ctx_data_0_ce0;
reg ctx_data_0_we0;
reg[7:0] ctx_data_0_d0;
reg[3:0] ctx_data_0_address1;
reg ctx_data_0_ce1;
reg ctx_data_0_we1;
reg[7:0] ctx_data_0_d1;
reg[3:0] ctx_data_1_address0;
reg ctx_data_1_ce0;
reg ctx_data_1_we0;
reg[7:0] ctx_data_1_d0;
reg[3:0] ctx_data_1_address1;
reg ctx_data_1_ce1;
reg ctx_data_1_we1;
reg[7:0] ctx_data_1_d1;
reg[3:0] ctx_data_2_address0;
reg ctx_data_2_ce0;
reg ctx_data_2_we0;
reg[7:0] ctx_data_2_d0;
reg[3:0] ctx_data_2_address1;
reg ctx_data_2_ce1;
reg ctx_data_2_we1;
reg[7:0] ctx_data_2_d1;
reg[3:0] ctx_data_3_address0;
reg ctx_data_3_ce0;
reg ctx_data_3_we0;
reg[7:0] ctx_data_3_d0;
reg[3:0] ctx_data_3_address1;
reg ctx_data_3_ce1;
reg ctx_data_3_we1;
reg[7:0] ctx_data_3_d1;
reg[5:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[7:0] hash_d0;
reg[5:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[7:0] hash_d1;

(* fsm_encoding = "none" *) reg   [111:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln114_fu_1463_p2;
reg   [0:0] icmp_ln114_reg_2075;
wire   [31:0] i_1_fu_1493_p2;
wire    ap_CS_fsm_state2;
reg   [31:0] ctx_state_0_ret4_reg_2096;
wire    ap_CS_fsm_state48;
reg   [31:0] ctx_state_1_ret5_reg_2101;
reg   [31:0] ctx_state_2_ret6_reg_2106;
reg   [31:0] ctx_state_3_ret7_reg_2111;
reg   [31:0] ctx_state_4_ret8_reg_2116;
reg   [31:0] ctx_state_5_ret9_reg_2121;
reg   [31:0] ctx_state_6_ret1_reg_2126;
reg   [31:0] ctx_state_7_ret1_reg_2131;
wire   [7:0] add_ln139_fu_1624_p2;
reg   [7:0] add_ln139_reg_2136;
wire    ap_CS_fsm_state55;
reg   [7:0] trunc_ln5_reg_2141;
reg   [7:0] trunc_ln6_reg_2146;
reg   [7:0] trunc_ln7_reg_2151;
wire   [7:0] trunc_ln143_fu_1660_p1;
reg   [7:0] trunc_ln143_reg_2156;
reg   [7:0] trunc_ln9_reg_2161;
reg   [7:0] trunc_ln_reg_2166;
reg   [7:0] trunc_ln1_reg_2171;
wire   [31:0] i_fu_1694_p2;
wire    ap_CS_fsm_state56;
reg   [7:0] trunc_ln4_reg_2187;
wire    ap_CS_fsm_state97;
reg   [7:0] trunc_ln8_reg_2192;
reg   [7:0] trunc_ln10_reg_2197;
reg   [7:0] trunc_ln11_reg_2202;
reg   [7:0] trunc_ln12_reg_2207;
reg   [7:0] trunc_ln13_reg_2212;
reg   [7:0] trunc_ln153_1_reg_2217;
reg   [7:0] trunc_ln154_1_reg_2222;
reg   [7:0] trunc_ln155_1_reg_2227;
reg   [7:0] trunc_ln156_1_reg_2232;
reg   [7:0] trunc_ln157_1_reg_2237;
reg   [7:0] trunc_ln158_1_reg_2242;
reg   [7:0] trunc_ln159_1_reg_2247;
reg   [7:0] trunc_ln160_1_reg_2252;
reg   [7:0] trunc_ln153_2_reg_2257;
reg   [7:0] trunc_ln154_2_reg_2262;
reg   [7:0] trunc_ln155_2_reg_2267;
reg   [7:0] trunc_ln156_2_reg_2272;
reg   [7:0] trunc_ln157_2_reg_2277;
reg   [7:0] trunc_ln158_2_reg_2282;
reg   [7:0] trunc_ln159_2_reg_2287;
reg   [7:0] trunc_ln160_2_reg_2292;
wire   [7:0] trunc_ln153_fu_1970_p1;
reg   [7:0] trunc_ln153_reg_2297;
wire   [7:0] trunc_ln154_fu_1974_p1;
reg   [7:0] trunc_ln154_reg_2302;
wire   [7:0] trunc_ln155_fu_1978_p1;
reg   [7:0] trunc_ln155_reg_2307;
wire   [7:0] trunc_ln156_fu_1982_p1;
reg   [7:0] trunc_ln156_reg_2312;
wire   [7:0] trunc_ln157_fu_1986_p1;
reg   [7:0] trunc_ln157_reg_2317;
wire   [7:0] trunc_ln158_fu_1990_p1;
reg   [7:0] trunc_ln158_reg_2322;
wire   [7:0] trunc_ln159_fu_1994_p1;
reg   [7:0] trunc_ln159_reg_2327;
wire   [7:0] trunc_ln160_fu_1998_p1;
reg   [7:0] trunc_ln160_reg_2332;
wire    grp_sha256_transform_fu_1393_ap_start;
wire    grp_sha256_transform_fu_1393_ap_done;
wire    grp_sha256_transform_fu_1393_ap_idle;
wire    grp_sha256_transform_fu_1393_ap_ready;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_0_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_1_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_2_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_3_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_4_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_5_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_6_read;
reg   [31:0] grp_sha256_transform_fu_1393_ctx_state_7_read;
wire   [3:0] grp_sha256_transform_fu_1393_data_0_address0;
wire    grp_sha256_transform_fu_1393_data_0_ce0;
wire   [3:0] grp_sha256_transform_fu_1393_data_0_address1;
wire    grp_sha256_transform_fu_1393_data_0_ce1;
wire   [3:0] grp_sha256_transform_fu_1393_data_1_address0;
wire    grp_sha256_transform_fu_1393_data_1_ce0;
wire   [3:0] grp_sha256_transform_fu_1393_data_1_address1;
wire    grp_sha256_transform_fu_1393_data_1_ce1;
wire   [3:0] grp_sha256_transform_fu_1393_data_2_address0;
wire    grp_sha256_transform_fu_1393_data_2_ce0;
wire   [3:0] grp_sha256_transform_fu_1393_data_2_address1;
wire    grp_sha256_transform_fu_1393_data_2_ce1;
wire   [3:0] grp_sha256_transform_fu_1393_data_3_address0;
wire    grp_sha256_transform_fu_1393_data_3_ce0;
wire   [3:0] grp_sha256_transform_fu_1393_data_3_address1;
wire    grp_sha256_transform_fu_1393_data_3_ce1;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_0;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_1;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_2;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_3;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_4;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_5;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_6;
wire   [31:0] grp_sha256_transform_fu_1393_ap_return_7;
reg   [31:0] i_1_in_reg_1295;
wire   [0:0] icmp_ln125_fu_1509_p2;
reg   [31:0] i_0_in_reg_1304;
wire   [0:0] icmp_ln117_fu_1700_p2;
reg   [31:0] ctx_state_0_0_reg_1313;
reg   [31:0] ctx_state_1_0_reg_1323;
reg   [31:0] ctx_state_2_0_reg_1333;
reg   [31:0] ctx_state_3_0_reg_1343;
reg   [31:0] ctx_state_4_0_reg_1353;
reg   [31:0] ctx_state_5_0_reg_1363;
reg   [31:0] ctx_state_6_0_reg_1373;
reg   [31:0] ctx_state_7_0_reg_1383;
reg    grp_sha256_transform_fu_1393_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [111:0] ap_NS_fsm;
wire    ap_NS_fsm_state9;
wire    ap_CS_fsm_state57;
wire    ap_NS_fsm_state58;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire   [63:0] zext_ln124_fu_1473_p1;
wire   [63:0] zext_ln116_fu_1485_p1;
wire   [63:0] zext_ln127_fu_1529_p1;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln119_fu_1720_p1;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state112;
wire   [1:0] trunc_ln124_fu_1469_p1;
wire   [1:0] trunc_ln116_fu_1481_p1;
wire   [1:0] trunc_ln127_fu_1515_p1;
wire   [1:0] trunc_ln119_fu_1706_p1;
wire   [29:0] grp_fu_1421_p4;
wire   [25:0] tmp_48_fu_1499_p4;
wire   [29:0] lshr_ln4_fu_1519_p4;
wire   [31:0] shl_ln138_fu_1537_p2;
wire   [31:0] xor_ln138_fu_1542_p2;
wire   [0:0] icmp_ln138_fu_1548_p2;
wire   [31:0] add_ln138_fu_1553_p2;
wire   [4:0] trunc_ln138_2_fu_1568_p1;
wire   [12:0] trunc_ln138_4_fu_1582_p1;
wire   [20:0] trunc_ln138_8_fu_1596_p1;
wire   [23:0] trunc_ln138_7_fu_1599_p3;
wire   [23:0] trunc_ln138_6_fu_1593_p1;
wire   [15:0] trunc_ln138_5_fu_1585_p3;
wire   [15:0] trunc_ln138_3_fu_1579_p1;
wire   [7:0] trunc_ln138_fu_1565_p1;
wire   [7:0] trunc_ln138_1_fu_1571_p3;
wire   [15:0] add_ln139_2_fu_1618_p2;
wire   [23:0] add_ln139_1_fu_1612_p2;
wire   [31:0] add_ln138_1_fu_1607_p2;
wire   [31:0] select_ln138_fu_1558_p3;
wire   [29:0] lshr_ln3_fu_1710_p4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 112'd1;
#0 grp_sha256_transform_fu_1393_ap_start_reg = 1'b0;
end

sha256_transform grp_sha256_transform_fu_1393(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha256_transform_fu_1393_ap_start),
    .ap_done(grp_sha256_transform_fu_1393_ap_done),
    .ap_idle(grp_sha256_transform_fu_1393_ap_idle),
    .ap_ready(grp_sha256_transform_fu_1393_ap_ready),
    .ap_ce(1'b1),
    .ctx_state_0_read(grp_sha256_transform_fu_1393_ctx_state_0_read),
    .ctx_state_1_read(grp_sha256_transform_fu_1393_ctx_state_1_read),
    .ctx_state_2_read(grp_sha256_transform_fu_1393_ctx_state_2_read),
    .ctx_state_3_read(grp_sha256_transform_fu_1393_ctx_state_3_read),
    .ctx_state_4_read(grp_sha256_transform_fu_1393_ctx_state_4_read),
    .ctx_state_5_read(grp_sha256_transform_fu_1393_ctx_state_5_read),
    .ctx_state_6_read(grp_sha256_transform_fu_1393_ctx_state_6_read),
    .ctx_state_7_read(grp_sha256_transform_fu_1393_ctx_state_7_read),
    .data_0_address0(grp_sha256_transform_fu_1393_data_0_address0),
    .data_0_ce0(grp_sha256_transform_fu_1393_data_0_ce0),
    .data_0_q0(ctx_data_0_q0),
    .data_0_address1(grp_sha256_transform_fu_1393_data_0_address1),
    .data_0_ce1(grp_sha256_transform_fu_1393_data_0_ce1),
    .data_0_q1(ctx_data_0_q1),
    .data_1_address0(grp_sha256_transform_fu_1393_data_1_address0),
    .data_1_ce0(grp_sha256_transform_fu_1393_data_1_ce0),
    .data_1_q0(ctx_data_1_q0),
    .data_1_address1(grp_sha256_transform_fu_1393_data_1_address1),
    .data_1_ce1(grp_sha256_transform_fu_1393_data_1_ce1),
    .data_1_q1(ctx_data_1_q1),
    .data_2_address0(grp_sha256_transform_fu_1393_data_2_address0),
    .data_2_ce0(grp_sha256_transform_fu_1393_data_2_ce0),
    .data_2_q0(ctx_data_2_q0),
    .data_2_address1(grp_sha256_transform_fu_1393_data_2_address1),
    .data_2_ce1(grp_sha256_transform_fu_1393_data_2_ce1),
    .data_2_q1(ctx_data_2_q1),
    .data_3_address0(grp_sha256_transform_fu_1393_data_3_address0),
    .data_3_ce0(grp_sha256_transform_fu_1393_data_3_ce0),
    .data_3_q0(ctx_data_3_q0),
    .data_3_address1(grp_sha256_transform_fu_1393_data_3_address1),
    .data_3_ce1(grp_sha256_transform_fu_1393_data_3_ce1),
    .data_3_q1(ctx_data_3_q1),
    .ap_return_0(grp_sha256_transform_fu_1393_ap_return_0),
    .ap_return_1(grp_sha256_transform_fu_1393_ap_return_1),
    .ap_return_2(grp_sha256_transform_fu_1393_ap_return_2),
    .ap_return_3(grp_sha256_transform_fu_1393_ap_return_3),
    .ap_return_4(grp_sha256_transform_fu_1393_ap_return_4),
    .ap_return_5(grp_sha256_transform_fu_1393_ap_return_5),
    .ap_return_6(grp_sha256_transform_fu_1393_ap_return_6),
    .ap_return_7(grp_sha256_transform_fu_1393_ap_return_7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha256_transform_fu_1393_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state58) & (1'b1 == ap_CS_fsm_state57)) | ((1'b1 == ap_NS_fsm_state9) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_sha256_transform_fu_1393_ap_start_reg <= 1'b1;
        end else if ((grp_sha256_transform_fu_1393_ap_ready == 1'b1)) begin
            grp_sha256_transform_fu_1393_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_0_0_reg_1313 <= ctx_state_0_ret4_reg_2096;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_0_0_reg_1313 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_1_0_reg_1323 <= ctx_state_1_ret5_reg_2101;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_1_0_reg_1323 <= p_read4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_2_0_reg_1333 <= ctx_state_2_ret6_reg_2106;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_2_0_reg_1333 <= p_read5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_3_0_reg_1343 <= ctx_state_3_ret7_reg_2111;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_3_0_reg_1343 <= p_read6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_4_0_reg_1353 <= ctx_state_4_ret8_reg_2116;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_4_0_reg_1353 <= p_read7;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_5_0_reg_1363 <= ctx_state_5_ret9_reg_2121;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_5_0_reg_1363 <= p_read8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_6_0_reg_1373 <= ctx_state_6_ret1_reg_2126;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_6_0_reg_1373 <= p_read9;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ctx_state_7_0_reg_1383 <= ctx_state_7_ret1_reg_2131;
    end else if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        ctx_state_7_0_reg_1383 <= p_read10;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        i_0_in_reg_1304 <= i_fu_1694_p2;
    end else if (((icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_in_reg_1304 <= ctx_datalen_read;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_in_reg_1295 <= i_1_fu_1493_p2;
    end else if (((icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_in_reg_1295 <= ctx_datalen_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        add_ln139_reg_2136 <= add_ln139_fu_1624_p2;
        trunc_ln143_reg_2156 <= trunc_ln143_fu_1660_p1;
        trunc_ln1_reg_2171 <= {{select_ln138_fu_1558_p3[31:24]}};
        trunc_ln5_reg_2141 <= {{add_ln139_2_fu_1618_p2[15:8]}};
        trunc_ln6_reg_2146 <= {{add_ln139_1_fu_1612_p2[23:16]}};
        trunc_ln7_reg_2151 <= {{add_ln138_1_fu_1607_p2[31:24]}};
        trunc_ln9_reg_2161 <= {{select_ln138_fu_1558_p3[15:8]}};
        trunc_ln_reg_2166 <= {{select_ln138_fu_1558_p3[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        ctx_state_0_ret4_reg_2096 <= grp_sha256_transform_fu_1393_ap_return_0;
        ctx_state_1_ret5_reg_2101 <= grp_sha256_transform_fu_1393_ap_return_1;
        ctx_state_2_ret6_reg_2106 <= grp_sha256_transform_fu_1393_ap_return_2;
        ctx_state_3_ret7_reg_2111 <= grp_sha256_transform_fu_1393_ap_return_3;
        ctx_state_4_ret8_reg_2116 <= grp_sha256_transform_fu_1393_ap_return_4;
        ctx_state_5_ret9_reg_2121 <= grp_sha256_transform_fu_1393_ap_return_5;
        ctx_state_6_ret1_reg_2126 <= grp_sha256_transform_fu_1393_ap_return_6;
        ctx_state_7_ret1_reg_2131 <= grp_sha256_transform_fu_1393_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln114_reg_2075 <= icmp_ln114_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        trunc_ln10_reg_2197 <= {{grp_sha256_transform_fu_1393_ap_return_4[31:24]}};
        trunc_ln11_reg_2202 <= {{grp_sha256_transform_fu_1393_ap_return_5[31:24]}};
        trunc_ln12_reg_2207 <= {{grp_sha256_transform_fu_1393_ap_return_6[31:24]}};
        trunc_ln13_reg_2212 <= {{grp_sha256_transform_fu_1393_ap_return_7[31:24]}};
        trunc_ln153_1_reg_2217 <= {{grp_sha256_transform_fu_1393_ap_return_0[23:16]}};
        trunc_ln153_2_reg_2257 <= {{grp_sha256_transform_fu_1393_ap_return_0[15:8]}};
        trunc_ln153_reg_2297 <= trunc_ln153_fu_1970_p1;
        trunc_ln154_1_reg_2222 <= {{grp_sha256_transform_fu_1393_ap_return_1[23:16]}};
        trunc_ln154_2_reg_2262 <= {{grp_sha256_transform_fu_1393_ap_return_1[15:8]}};
        trunc_ln154_reg_2302 <= trunc_ln154_fu_1974_p1;
        trunc_ln155_1_reg_2227 <= {{grp_sha256_transform_fu_1393_ap_return_2[23:16]}};
        trunc_ln155_2_reg_2267 <= {{grp_sha256_transform_fu_1393_ap_return_2[15:8]}};
        trunc_ln155_reg_2307 <= trunc_ln155_fu_1978_p1;
        trunc_ln156_1_reg_2232 <= {{grp_sha256_transform_fu_1393_ap_return_3[23:16]}};
        trunc_ln156_2_reg_2272 <= {{grp_sha256_transform_fu_1393_ap_return_3[15:8]}};
        trunc_ln156_reg_2312 <= trunc_ln156_fu_1982_p1;
        trunc_ln157_1_reg_2237 <= {{grp_sha256_transform_fu_1393_ap_return_4[23:16]}};
        trunc_ln157_2_reg_2277 <= {{grp_sha256_transform_fu_1393_ap_return_4[15:8]}};
        trunc_ln157_reg_2317 <= trunc_ln157_fu_1986_p1;
        trunc_ln158_1_reg_2242 <= {{grp_sha256_transform_fu_1393_ap_return_5[23:16]}};
        trunc_ln158_2_reg_2282 <= {{grp_sha256_transform_fu_1393_ap_return_5[15:8]}};
        trunc_ln158_reg_2322 <= trunc_ln158_fu_1990_p1;
        trunc_ln159_1_reg_2247 <= {{grp_sha256_transform_fu_1393_ap_return_6[23:16]}};
        trunc_ln159_2_reg_2287 <= {{grp_sha256_transform_fu_1393_ap_return_6[15:8]}};
        trunc_ln159_reg_2327 <= trunc_ln159_fu_1994_p1;
        trunc_ln160_1_reg_2252 <= {{grp_sha256_transform_fu_1393_ap_return_7[23:16]}};
        trunc_ln160_2_reg_2292 <= {{grp_sha256_transform_fu_1393_ap_return_7[15:8]}};
        trunc_ln160_reg_2332 <= trunc_ln160_fu_1998_p1;
        trunc_ln4_reg_2187 <= {{grp_sha256_transform_fu_1393_ap_return_2[31:24]}};
        trunc_ln8_reg_2192 <= {{grp_sha256_transform_fu_1393_ap_return_3[31:24]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_0_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_0_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_0_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ctx_data_0_address0 = zext_ln127_fu_1529_p1;
    end else if (((trunc_ln116_fu_1481_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_0_address0 = zext_ln116_fu_1485_p1;
    end else if (((trunc_ln124_fu_1469_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_0_address0 = zext_ln124_fu_1473_p1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_0_address0 = grp_sha256_transform_fu_1393_data_0_address0;
    end else begin
        ctx_data_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_0_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ctx_data_0_address1 = zext_ln119_fu_1720_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_0_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_0_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_0_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_0_address1 = grp_sha256_transform_fu_1393_data_0_address1;
    end else begin
        ctx_data_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2) | ((trunc_ln116_fu_1481_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_0_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_0_ce0 = grp_sha256_transform_fu_1393_data_0_ce0;
    end else begin
        ctx_data_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_0_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_0_ce1 = grp_sha256_transform_fu_1393_data_0_ce1;
    end else begin
        ctx_data_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_0_d0 = trunc_ln1_reg_2171;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_data_0_d0 = 8'd0;
    end else if ((((trunc_ln116_fu_1481_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((trunc_ln124_fu_1469_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ctx_data_0_d0 = 8'd128;
    end else begin
        ctx_data_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_0_d1 = trunc_ln7_reg_2151;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_0_d1 = 8'd0;
    end else begin
        ctx_data_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((trunc_ln127_fu_1515_p1 == 2'd3) & (icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((trunc_ln116_fu_1481_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd0) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_0_we0 = 1'b1;
    end else begin
        ctx_data_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((trunc_ln119_fu_1706_p1 == 2'd3) & (icmp_ln117_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        ctx_data_0_we1 = 1'b1;
    end else begin
        ctx_data_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_1_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_1_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ctx_data_1_address0 = zext_ln127_fu_1529_p1;
    end else if (((trunc_ln116_fu_1481_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_1_address0 = zext_ln116_fu_1485_p1;
    end else if (((trunc_ln124_fu_1469_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_1_address0 = zext_ln124_fu_1473_p1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_1_address0 = grp_sha256_transform_fu_1393_data_1_address0;
    end else begin
        ctx_data_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_1_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ctx_data_1_address1 = zext_ln119_fu_1720_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_1_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_1_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_1_address1 = grp_sha256_transform_fu_1393_data_1_address1;
    end else begin
        ctx_data_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2) | ((trunc_ln116_fu_1481_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_1_ce0 = grp_sha256_transform_fu_1393_data_1_ce0;
    end else begin
        ctx_data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_1_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_1_ce1 = grp_sha256_transform_fu_1393_data_1_ce1;
    end else begin
        ctx_data_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_1_d0 = trunc_ln_reg_2166;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_data_1_d0 = 8'd0;
    end else if ((((trunc_ln116_fu_1481_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((trunc_ln124_fu_1469_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ctx_data_1_d0 = 8'd128;
    end else begin
        ctx_data_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_1_d1 = trunc_ln6_reg_2146;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_1_d1 = 8'd0;
    end else begin
        ctx_data_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((trunc_ln127_fu_1515_p1 == 2'd0) & (icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((trunc_ln116_fu_1481_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd1) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_1_we0 = 1'b1;
    end else begin
        ctx_data_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((trunc_ln119_fu_1706_p1 == 2'd0) & (icmp_ln117_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        ctx_data_1_we1 = 1'b1;
    end else begin
        ctx_data_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_2_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_2_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_2_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ctx_data_2_address0 = zext_ln127_fu_1529_p1;
    end else if (((trunc_ln116_fu_1481_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_2_address0 = zext_ln116_fu_1485_p1;
    end else if (((trunc_ln124_fu_1469_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_2_address0 = zext_ln124_fu_1473_p1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_2_address0 = grp_sha256_transform_fu_1393_data_2_address0;
    end else begin
        ctx_data_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_2_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ctx_data_2_address1 = zext_ln119_fu_1720_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_2_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_2_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_2_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_2_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_2_address1 = grp_sha256_transform_fu_1393_data_2_address1;
    end else begin
        ctx_data_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2) | ((trunc_ln116_fu_1481_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_2_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_2_ce0 = grp_sha256_transform_fu_1393_data_2_ce0;
    end else begin
        ctx_data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_2_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_2_ce1 = grp_sha256_transform_fu_1393_data_2_ce1;
    end else begin
        ctx_data_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_2_d0 = trunc_ln9_reg_2161;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_data_2_d0 = 8'd0;
    end else if ((((trunc_ln116_fu_1481_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((trunc_ln124_fu_1469_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ctx_data_2_d0 = 8'd128;
    end else begin
        ctx_data_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_2_d1 = trunc_ln5_reg_2141;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_2_d1 = 8'd0;
    end else begin
        ctx_data_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((trunc_ln127_fu_1515_p1 == 2'd1) & (icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((trunc_ln116_fu_1481_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd2) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_2_we0 = 1'b1;
    end else begin
        ctx_data_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((trunc_ln119_fu_1706_p1 == 2'd1) & (icmp_ln117_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        ctx_data_2_we1 = 1'b1;
    end else begin
        ctx_data_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_3_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_3_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_3_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_3_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_3_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ctx_data_3_address0 = zext_ln127_fu_1529_p1;
    end else if (((trunc_ln116_fu_1481_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_3_address0 = zext_ln116_fu_1485_p1;
    end else if (((trunc_ln124_fu_1469_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ctx_data_3_address0 = zext_ln124_fu_1473_p1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_3_address0 = grp_sha256_transform_fu_1393_data_3_address0;
    end else begin
        ctx_data_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_3_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ctx_data_3_address1 = zext_ln119_fu_1720_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ctx_data_3_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ctx_data_3_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ctx_data_3_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ctx_data_3_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ctx_data_3_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ctx_data_3_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ctx_data_3_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_3_address1 = grp_sha256_transform_fu_1393_data_3_address1;
    end else begin
        ctx_data_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2) | ((trunc_ln116_fu_1481_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_3_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_3_ce0 = grp_sha256_transform_fu_1393_data_3_ce0;
    end else begin
        ctx_data_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_3_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state9))) begin
        ctx_data_3_ce1 = grp_sha256_transform_fu_1393_data_3_ce1;
    end else begin
        ctx_data_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_3_d0 = trunc_ln143_reg_2156;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_data_3_d0 = 8'd0;
    end else if ((((trunc_ln116_fu_1481_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((trunc_ln124_fu_1469_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ctx_data_3_d0 = 8'd128;
    end else begin
        ctx_data_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ctx_data_3_d1 = add_ln139_reg_2136;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        ctx_data_3_d1 = 8'd0;
    end else begin
        ctx_data_3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((trunc_ln127_fu_1515_p1 == 2'd2) & (icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((trunc_ln116_fu_1481_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln124_fu_1469_p1 == 2'd3) & (icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ctx_data_3_we0 = 1'b1;
    end else begin
        ctx_data_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57) | ((trunc_ln119_fu_1706_p1 == 2'd2) & (icmp_ln117_fu_1700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln114_reg_2075 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        ctx_data_3_we1 = 1'b1;
    end else begin
        ctx_data_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_0_read = ctx_state_0_0_reg_1313;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_0_read = p_read2;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_1_read = ctx_state_1_0_reg_1323;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_1_read = p_read4;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_2_read = ctx_state_2_0_reg_1333;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_2_read = p_read5;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_3_read = ctx_state_3_0_reg_1343;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_3_read = p_read6;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_4_read = ctx_state_4_0_reg_1353;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_4_read = p_read7;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_5_read = ctx_state_5_0_reg_1363;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_5_read = p_read8;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_5_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_6_read = ctx_state_6_0_reg_1373;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_6_read = p_read9;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_6_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_sha256_transform_fu_1393_ctx_state_7_read = ctx_state_7_0_reg_1383;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_sha256_transform_fu_1393_ctx_state_7_read = p_read10;
    end else begin
        grp_sha256_transform_fu_1393_ctx_state_7_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        hash_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        hash_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        hash_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        hash_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        hash_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        hash_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        hash_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        hash_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        hash_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        hash_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        hash_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        hash_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        hash_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        hash_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        hash_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        hash_address0 = 64'd0;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        hash_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        hash_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        hash_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        hash_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        hash_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        hash_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        hash_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        hash_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        hash_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        hash_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        hash_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        hash_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        hash_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        hash_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        hash_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        hash_address1 = 64'd4;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        hash_d0 = trunc_ln159_reg_2327;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        hash_d0 = trunc_ln157_reg_2317;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        hash_d0 = trunc_ln155_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        hash_d0 = trunc_ln153_reg_2297;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        hash_d0 = trunc_ln159_2_reg_2287;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        hash_d0 = trunc_ln157_2_reg_2277;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        hash_d0 = trunc_ln155_2_reg_2267;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        hash_d0 = trunc_ln153_2_reg_2257;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        hash_d0 = trunc_ln159_1_reg_2247;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        hash_d0 = trunc_ln157_1_reg_2237;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        hash_d0 = trunc_ln155_1_reg_2227;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        hash_d0 = trunc_ln153_1_reg_2217;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        hash_d0 = trunc_ln12_reg_2207;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        hash_d0 = trunc_ln10_reg_2197;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        hash_d0 = trunc_ln4_reg_2187;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        hash_d0 = {{grp_sha256_transform_fu_1393_ap_return_0[31:24]}};
    end else begin
        hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        hash_d1 = trunc_ln160_reg_2332;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        hash_d1 = trunc_ln158_reg_2322;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        hash_d1 = trunc_ln156_reg_2312;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        hash_d1 = trunc_ln154_reg_2302;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        hash_d1 = trunc_ln160_2_reg_2292;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        hash_d1 = trunc_ln158_2_reg_2282;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        hash_d1 = trunc_ln156_2_reg_2272;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        hash_d1 = trunc_ln154_2_reg_2262;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        hash_d1 = trunc_ln160_1_reg_2252;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        hash_d1 = trunc_ln158_1_reg_2242;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        hash_d1 = trunc_ln156_1_reg_2232;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        hash_d1 = trunc_ln154_1_reg_2222;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        hash_d1 = trunc_ln13_reg_2212;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        hash_d1 = trunc_ln11_reg_2202;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        hash_d1 = trunc_ln8_reg_2192;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        hash_d1 = {{grp_sha256_transform_fu_1393_ap_return_1[31:24]}};
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln114_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else if (((icmp_ln114_fu_1463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln125_fu_1509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln117_fu_1700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln138_1_fu_1607_p2 = (ctx_bitlen_0_read + shl_ln138_fu_1537_p2);

assign add_ln138_fu_1553_p2 = (32'd1 + p_read3);

assign add_ln139_1_fu_1612_p2 = (trunc_ln138_7_fu_1599_p3 + trunc_ln138_6_fu_1593_p1);

assign add_ln139_2_fu_1618_p2 = (trunc_ln138_5_fu_1585_p3 + trunc_ln138_3_fu_1579_p1);

assign add_ln139_fu_1624_p2 = (trunc_ln138_fu_1565_p1 + trunc_ln138_1_fu_1571_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_NS_fsm_state58 = ap_NS_fsm[32'd57];

assign ap_NS_fsm_state9 = ap_NS_fsm[32'd8];

assign grp_fu_1421_p4 = {{ctx_datalen_read[31:2]}};

assign grp_sha256_transform_fu_1393_ap_start = grp_sha256_transform_fu_1393_ap_start_reg;

assign i_1_fu_1493_p2 = (i_1_in_reg_1295 + 32'd1);

assign i_fu_1694_p2 = (i_0_in_reg_1304 + 32'd1);

assign icmp_ln114_fu_1463_p2 = ((ctx_datalen_read < 32'd56) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_1700_p2 = ((i_0_in_reg_1304 == 32'd55) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_1509_p2 = ((tmp_48_fu_1499_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_1548_p2 = ((ctx_bitlen_0_read > xor_ln138_fu_1542_p2) ? 1'b1 : 1'b0);

assign lshr_ln3_fu_1710_p4 = {{i_fu_1694_p2[31:2]}};

assign lshr_ln4_fu_1519_p4 = {{i_1_fu_1493_p2[31:2]}};

assign select_ln138_fu_1558_p3 = ((icmp_ln138_fu_1548_p2[0:0] === 1'b1) ? add_ln138_fu_1553_p2 : p_read3);

assign shl_ln138_fu_1537_p2 = ctx_datalen_read << 32'd3;

assign tmp_48_fu_1499_p4 = {{i_1_fu_1493_p2[31:6]}};

assign trunc_ln116_fu_1481_p1 = ctx_datalen_read[1:0];

assign trunc_ln119_fu_1706_p1 = i_0_in_reg_1304[1:0];

assign trunc_ln124_fu_1469_p1 = ctx_datalen_read[1:0];

assign trunc_ln127_fu_1515_p1 = i_1_in_reg_1295[1:0];

assign trunc_ln138_1_fu_1571_p3 = {{trunc_ln138_2_fu_1568_p1}, {3'd0}};

assign trunc_ln138_2_fu_1568_p1 = ctx_datalen_read[4:0];

assign trunc_ln138_3_fu_1579_p1 = ctx_bitlen_0_read[15:0];

assign trunc_ln138_4_fu_1582_p1 = ctx_datalen_read[12:0];

assign trunc_ln138_5_fu_1585_p3 = {{trunc_ln138_4_fu_1582_p1}, {3'd0}};

assign trunc_ln138_6_fu_1593_p1 = ctx_bitlen_0_read[23:0];

assign trunc_ln138_7_fu_1599_p3 = {{trunc_ln138_8_fu_1596_p1}, {3'd0}};

assign trunc_ln138_8_fu_1596_p1 = ctx_datalen_read[20:0];

assign trunc_ln138_fu_1565_p1 = ctx_bitlen_0_read[7:0];

assign trunc_ln143_fu_1660_p1 = select_ln138_fu_1558_p3[7:0];

assign trunc_ln153_fu_1970_p1 = grp_sha256_transform_fu_1393_ap_return_0[7:0];

assign trunc_ln154_fu_1974_p1 = grp_sha256_transform_fu_1393_ap_return_1[7:0];

assign trunc_ln155_fu_1978_p1 = grp_sha256_transform_fu_1393_ap_return_2[7:0];

assign trunc_ln156_fu_1982_p1 = grp_sha256_transform_fu_1393_ap_return_3[7:0];

assign trunc_ln157_fu_1986_p1 = grp_sha256_transform_fu_1393_ap_return_4[7:0];

assign trunc_ln158_fu_1990_p1 = grp_sha256_transform_fu_1393_ap_return_5[7:0];

assign trunc_ln159_fu_1994_p1 = grp_sha256_transform_fu_1393_ap_return_6[7:0];

assign trunc_ln160_fu_1998_p1 = grp_sha256_transform_fu_1393_ap_return_7[7:0];

assign xor_ln138_fu_1542_p2 = (shl_ln138_fu_1537_p2 ^ 32'd4294967295);

assign zext_ln116_fu_1485_p1 = grp_fu_1421_p4;

assign zext_ln119_fu_1720_p1 = lshr_ln3_fu_1710_p4;

assign zext_ln124_fu_1473_p1 = grp_fu_1421_p4;

assign zext_ln127_fu_1529_p1 = lshr_ln4_fu_1519_p4;

endmodule //sha256_final
