// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_update_HH_
#define _sha256_update_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform.h"

namespace ap_rtl {

struct sha256_update : public sc_module {
    // Port declarations 60
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > ctx_data_0_address0;
    sc_out< sc_logic > ctx_data_0_ce0;
    sc_out< sc_logic > ctx_data_0_we0;
    sc_out< sc_lv<8> > ctx_data_0_d0;
    sc_in< sc_lv<8> > ctx_data_0_q0;
    sc_out< sc_lv<4> > ctx_data_0_address1;
    sc_out< sc_logic > ctx_data_0_ce1;
    sc_in< sc_lv<8> > ctx_data_0_q1;
    sc_out< sc_lv<4> > ctx_data_1_address0;
    sc_out< sc_logic > ctx_data_1_ce0;
    sc_out< sc_logic > ctx_data_1_we0;
    sc_out< sc_lv<8> > ctx_data_1_d0;
    sc_in< sc_lv<8> > ctx_data_1_q0;
    sc_out< sc_lv<4> > ctx_data_1_address1;
    sc_out< sc_logic > ctx_data_1_ce1;
    sc_in< sc_lv<8> > ctx_data_1_q1;
    sc_out< sc_lv<4> > ctx_data_2_address0;
    sc_out< sc_logic > ctx_data_2_ce0;
    sc_out< sc_logic > ctx_data_2_we0;
    sc_out< sc_lv<8> > ctx_data_2_d0;
    sc_in< sc_lv<8> > ctx_data_2_q0;
    sc_out< sc_lv<4> > ctx_data_2_address1;
    sc_out< sc_logic > ctx_data_2_ce1;
    sc_in< sc_lv<8> > ctx_data_2_q1;
    sc_out< sc_lv<4> > ctx_data_3_address0;
    sc_out< sc_logic > ctx_data_3_ce0;
    sc_out< sc_logic > ctx_data_3_we0;
    sc_out< sc_lv<8> > ctx_data_3_d0;
    sc_in< sc_lv<8> > ctx_data_3_q0;
    sc_out< sc_lv<4> > ctx_data_3_address1;
    sc_out< sc_logic > ctx_data_3_ce1;
    sc_in< sc_lv<8> > ctx_data_3_q1;
    sc_in< sc_lv<32> > ctx_datalen_read;
    sc_in< sc_lv<32> > p_read1;
    sc_in< sc_lv<32> > p_read2;
    sc_in< sc_lv<32> > p_read3;
    sc_in< sc_lv<32> > p_read4;
    sc_in< sc_lv<32> > p_read5;
    sc_in< sc_lv<32> > p_read6;
    sc_in< sc_lv<32> > p_read7;
    sc_in< sc_lv<32> > p_read8;
    sc_out< sc_lv<6> > data_address0;
    sc_out< sc_logic > data_ce0;
    sc_in< sc_lv<8> > data_q0;
    sc_in< sc_lv<32> > len;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    sha256_update(sc_module_name name);
    SC_HAS_PROCESS(sha256_update);

    ~sha256_update();

    sc_trace_file* mVcdFile;

    sha256_transform* grp_sha256_transform_fu_246;
    sc_signal< sc_lv<49> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > empty_fu_301_p1;
    sc_signal< sc_lv<7> > empty_reg_604;
    sc_signal< sc_lv<7> > i_fu_355_p2;
    sc_signal< sc_lv<7> > i_reg_612;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln127_fu_350_p2;
    sc_signal< sc_lv<1> > icmp_ln131_fu_451_p2;
    sc_signal< sc_lv<1> > icmp_ln131_reg_625;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_ap_done;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_ap_idle;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_ap_ready;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_0_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_0_ce0;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_0_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_0_ce1;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_1_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_1_ce0;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_1_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_1_ce1;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_2_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_2_ce0;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_2_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_2_ce1;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_3_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_3_ce0;
    sc_signal< sc_lv<4> > grp_sha256_transform_fu_246_data_3_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_data_3_ce1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_246_ap_return_7;
    sc_signal< sc_lv<7> > i_0_reg_235;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > grp_sha256_transform_fu_246_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<49> > ap_NS_fsm;
    sc_signal< sc_logic > ap_NS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > zext_ln129_fu_361_p1;
    sc_signal< sc_lv<64> > zext_ln129_1_fu_434_p1;
    sc_signal< sc_lv<32> > ctx_datalen_0_fu_70;
    sc_signal< sc_lv<32> > add_ln130_fu_445_p2;
    sc_signal< sc_lv<32> > ctx_state_7_0_fu_74;
    sc_signal< sc_lv<32> > ctx_state_6_0_fu_78;
    sc_signal< sc_lv<32> > ctx_state_5_0_fu_82;
    sc_signal< sc_lv<32> > ctx_state_4_0_fu_86;
    sc_signal< sc_lv<32> > ctx_state_3_0_fu_90;
    sc_signal< sc_lv<32> > ctx_state_2_0_fu_94;
    sc_signal< sc_lv<32> > ctx_state_1_0_fu_98;
    sc_signal< sc_lv<32> > ctx_state_0_0_fu_102;
    sc_signal< sc_lv<2> > trunc_ln129_fu_420_p1;
    sc_signal< sc_lv<30> > lshr_ln_fu_424_p4;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<49> ap_ST_fsm_state1;
    static const sc_lv<49> ap_ST_fsm_state2;
    static const sc_lv<49> ap_ST_fsm_state3;
    static const sc_lv<49> ap_ST_fsm_state4;
    static const sc_lv<49> ap_ST_fsm_state5;
    static const sc_lv<49> ap_ST_fsm_state6;
    static const sc_lv<49> ap_ST_fsm_state7;
    static const sc_lv<49> ap_ST_fsm_state8;
    static const sc_lv<49> ap_ST_fsm_state9;
    static const sc_lv<49> ap_ST_fsm_state10;
    static const sc_lv<49> ap_ST_fsm_state11;
    static const sc_lv<49> ap_ST_fsm_state12;
    static const sc_lv<49> ap_ST_fsm_state13;
    static const sc_lv<49> ap_ST_fsm_state14;
    static const sc_lv<49> ap_ST_fsm_state15;
    static const sc_lv<49> ap_ST_fsm_state16;
    static const sc_lv<49> ap_ST_fsm_state17;
    static const sc_lv<49> ap_ST_fsm_state18;
    static const sc_lv<49> ap_ST_fsm_state19;
    static const sc_lv<49> ap_ST_fsm_state20;
    static const sc_lv<49> ap_ST_fsm_state21;
    static const sc_lv<49> ap_ST_fsm_state22;
    static const sc_lv<49> ap_ST_fsm_state23;
    static const sc_lv<49> ap_ST_fsm_state24;
    static const sc_lv<49> ap_ST_fsm_state25;
    static const sc_lv<49> ap_ST_fsm_state26;
    static const sc_lv<49> ap_ST_fsm_state27;
    static const sc_lv<49> ap_ST_fsm_state28;
    static const sc_lv<49> ap_ST_fsm_state29;
    static const sc_lv<49> ap_ST_fsm_state30;
    static const sc_lv<49> ap_ST_fsm_state31;
    static const sc_lv<49> ap_ST_fsm_state32;
    static const sc_lv<49> ap_ST_fsm_state33;
    static const sc_lv<49> ap_ST_fsm_state34;
    static const sc_lv<49> ap_ST_fsm_state35;
    static const sc_lv<49> ap_ST_fsm_state36;
    static const sc_lv<49> ap_ST_fsm_state37;
    static const sc_lv<49> ap_ST_fsm_state38;
    static const sc_lv<49> ap_ST_fsm_state39;
    static const sc_lv<49> ap_ST_fsm_state40;
    static const sc_lv<49> ap_ST_fsm_state41;
    static const sc_lv<49> ap_ST_fsm_state42;
    static const sc_lv<49> ap_ST_fsm_state43;
    static const sc_lv<49> ap_ST_fsm_state44;
    static const sc_lv<49> ap_ST_fsm_state45;
    static const sc_lv<49> ap_ST_fsm_state46;
    static const sc_lv<49> ap_ST_fsm_state47;
    static const sc_lv<49> ap_ST_fsm_state48;
    static const sc_lv<49> ap_ST_fsm_state49;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_40;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln130_fu_445_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_NS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ctx_data_0_address0();
    void thread_ctx_data_0_address1();
    void thread_ctx_data_0_ce0();
    void thread_ctx_data_0_ce1();
    void thread_ctx_data_0_d0();
    void thread_ctx_data_0_we0();
    void thread_ctx_data_1_address0();
    void thread_ctx_data_1_address1();
    void thread_ctx_data_1_ce0();
    void thread_ctx_data_1_ce1();
    void thread_ctx_data_1_d0();
    void thread_ctx_data_1_we0();
    void thread_ctx_data_2_address0();
    void thread_ctx_data_2_address1();
    void thread_ctx_data_2_ce0();
    void thread_ctx_data_2_ce1();
    void thread_ctx_data_2_d0();
    void thread_ctx_data_2_we0();
    void thread_ctx_data_3_address0();
    void thread_ctx_data_3_address1();
    void thread_ctx_data_3_ce0();
    void thread_ctx_data_3_ce1();
    void thread_ctx_data_3_d0();
    void thread_ctx_data_3_we0();
    void thread_data_address0();
    void thread_data_ce0();
    void thread_empty_fu_301_p1();
    void thread_grp_sha256_transform_fu_246_ap_start();
    void thread_i_fu_355_p2();
    void thread_icmp_ln127_fu_350_p2();
    void thread_icmp_ln131_fu_451_p2();
    void thread_lshr_ln_fu_424_p4();
    void thread_trunc_ln129_fu_420_p1();
    void thread_zext_ln129_1_fu_434_p1();
    void thread_zext_ln129_fu_361_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
