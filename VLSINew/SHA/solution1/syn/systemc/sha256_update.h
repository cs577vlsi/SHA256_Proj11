// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_update_HH_
#define _sha256_update_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform.h"

namespace ap_rtl {

struct sha256_update : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > ctx_data_address0;
    sc_out< sc_logic > ctx_data_ce0;
    sc_out< sc_logic > ctx_data_we0;
    sc_out< sc_lv<8> > ctx_data_d0;
    sc_in< sc_lv<8> > ctx_data_q0;
    sc_out< sc_lv<6> > ctx_data_address1;
    sc_out< sc_logic > ctx_data_ce1;
    sc_in< sc_lv<8> > ctx_data_q1;
    sc_in< sc_lv<32> > ctx_datalen_read;
    sc_in< sc_lv<32> > p_read1;
    sc_in< sc_lv<32> > p_read2;
    sc_in< sc_lv<32> > p_read3;
    sc_in< sc_lv<32> > p_read4;
    sc_in< sc_lv<32> > p_read5;
    sc_in< sc_lv<32> > p_read6;
    sc_in< sc_lv<32> > p_read7;
    sc_in< sc_lv<32> > p_read8;
    sc_in< sc_lv<32> > p_read9;
    sc_in< sc_lv<32> > p_read10;
    sc_out< sc_lv<6> > data_address0;
    sc_out< sc_logic > data_ce0;
    sc_in< sc_lv<8> > data_q0;
    sc_in< sc_lv<32> > len;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_out< sc_lv<32> > ap_return_9;
    sc_out< sc_lv<32> > ap_return_10;


    // Module declarations
    sha256_update(sc_module_name name);
    SC_HAS_PROCESS(sha256_update);

    ~sha256_update();

    sc_trace_file* mVcdFile;

    sha256_transform* grp_sha256_transform_fu_216;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > empty_fu_273_p1;
    sc_signal< sc_lv<7> > empty_reg_627;
    sc_signal< sc_lv<7> > i_fu_337_p2;
    sc_signal< sc_lv<7> > i_reg_635;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln94_fu_332_p2;
    sc_signal< sc_lv<1> > icmp_ln98_fu_425_p2;
    sc_signal< sc_lv<1> > icmp_ln98_reg_645;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > ctx_state_7_0_load_1_reg_649;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > ctx_state_6_0_load_1_reg_654;
    sc_signal< sc_lv<32> > ctx_state_5_0_load_1_reg_659;
    sc_signal< sc_lv<32> > ctx_state_4_0_load_1_reg_664;
    sc_signal< sc_lv<32> > ctx_state_3_0_load_1_reg_669;
    sc_signal< sc_lv<32> > ctx_state_2_0_load_1_reg_674;
    sc_signal< sc_lv<32> > ctx_state_1_0_load_1_reg_679;
    sc_signal< sc_lv<32> > ctx_state_0_0_load_1_reg_684;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_ap_done;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_ap_idle;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_ap_ready;
    sc_signal< sc_lv<6> > grp_sha256_transform_fu_216_data_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_data_ce0;
    sc_signal< sc_lv<6> > grp_sha256_transform_fu_216_data_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_data_ce1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_216_ap_return_7;
    sc_signal< sc_lv<7> > i_0_reg_205;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_state5_on_subcall_done;
    sc_signal< sc_logic > grp_sha256_transform_fu_216_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln96_fu_343_p1;
    sc_signal< sc_lv<64> > zext_ln96_1_fu_414_p1;
    sc_signal< sc_lv<32> > ctx_datalen_0_fu_62;
    sc_signal< sc_lv<32> > add_ln97_fu_419_p2;
    sc_signal< sc_lv<32> > ctx_state_7_0_fu_66;
    sc_signal< sc_lv<32> > ctx_state_6_0_fu_70;
    sc_signal< sc_lv<32> > ctx_state_5_0_fu_74;
    sc_signal< sc_lv<32> > ctx_state_4_0_fu_78;
    sc_signal< sc_lv<32> > ctx_state_3_0_fu_82;
    sc_signal< sc_lv<32> > ctx_state_2_0_fu_86;
    sc_signal< sc_lv<32> > ctx_state_1_0_fu_90;
    sc_signal< sc_lv<32> > ctx_state_0_0_fu_94;
    sc_signal< sc_lv<32> > ctx_bitlen_1_0_fu_98;
    sc_signal< sc_lv<32> > select_ln100_fu_485_p3;
    sc_signal< sc_lv<32> > ctx_bitlen_0_0_fu_102;
    sc_signal< sc_lv<32> > add_ln100_1_fu_493_p2;
    sc_signal< sc_lv<1> > icmp_ln100_fu_473_p2;
    sc_signal< sc_lv<32> > add_ln100_fu_479_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_FFFFFDFF;
    static const sc_lv<32> ap_const_lv32_200;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln100_1_fu_493_p2();
    void thread_add_ln100_fu_479_p2();
    void thread_add_ln97_fu_419_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state5_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_ctx_data_address0();
    void thread_ctx_data_address1();
    void thread_ctx_data_ce0();
    void thread_ctx_data_ce1();
    void thread_ctx_data_d0();
    void thread_ctx_data_we0();
    void thread_data_address0();
    void thread_data_ce0();
    void thread_empty_fu_273_p1();
    void thread_grp_sha256_transform_fu_216_ap_start();
    void thread_i_fu_337_p2();
    void thread_icmp_ln100_fu_473_p2();
    void thread_icmp_ln94_fu_332_p2();
    void thread_icmp_ln98_fu_425_p2();
    void thread_select_ln100_fu_485_p3();
    void thread_zext_ln96_1_fu_414_p1();
    void thread_zext_ln96_fu_343_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
