// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> sha256_final::ap_ST_fsm_state1 = "1";
const sc_lv<14> sha256_final::ap_ST_fsm_state2 = "10";
const sc_lv<14> sha256_final::ap_ST_fsm_state3 = "100";
const sc_lv<14> sha256_final::ap_ST_fsm_state4 = "1000";
const sc_lv<14> sha256_final::ap_ST_fsm_state5 = "10000";
const sc_lv<14> sha256_final::ap_ST_fsm_state6 = "100000";
const sc_lv<14> sha256_final::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_2 = "10";
const sc_lv<32> sha256_final::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_final::ap_const_lv32_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_final::ap_const_lv1_0 = "0";
const sc_lv<1> sha256_final::ap_const_lv1_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_final::ap_const_lv32_A = "1010";
const sc_lv<6> sha256_final::ap_const_lv6_0 = "000000";
const sc_lv<3> sha256_final::ap_const_lv3_0 = "000";
const sc_lv<32> sha256_final::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_final::ap_const_lv32_8 = "1000";
const sc_lv<64> sha256_final::ap_const_lv64_3F = "111111";
const sc_lv<64> sha256_final::ap_const_lv64_3E = "111110";
const sc_lv<64> sha256_final::ap_const_lv64_3D = "111101";
const sc_lv<32> sha256_final::ap_const_lv32_5 = "101";
const sc_lv<64> sha256_final::ap_const_lv64_3C = "111100";
const sc_lv<64> sha256_final::ap_const_lv64_3B = "111011";
const sc_lv<32> sha256_final::ap_const_lv32_6 = "110";
const sc_lv<64> sha256_final::ap_const_lv64_3A = "111010";
const sc_lv<64> sha256_final::ap_const_lv64_39 = "111001";
const sc_lv<32> sha256_final::ap_const_lv32_7 = "111";
const sc_lv<64> sha256_final::ap_const_lv64_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_B = "1011";
const sc_lv<32> sha256_final::ap_const_lv32_C = "1100";
const sc_lv<8> sha256_final::ap_const_lv8_80 = "10000000";
const sc_lv<8> sha256_final::ap_const_lv8_0 = "00000000";
const sc_lv<32> sha256_final::ap_const_lv32_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_1F = "11111";
const sc_lv<26> sha256_final::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> sha256_final::ap_const_lv6_38 = "111000";
const sc_lv<6> sha256_final::ap_const_lv6_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_final::ap_const_lv32_F = "1111";
const sc_lv<32> sha256_final::ap_const_lv32_10 = "10000";
const sc_lv<32> sha256_final::ap_const_lv32_17 = "10111";
const sc_lv<32> sha256_final::ap_const_lv32_18 = "11000";
const sc_lv<32> sha256_final::ap_const_lv32_37 = "110111";
const sc_lv<3> sha256_final::ap_const_lv3_4 = "100";
const sc_lv<3> sha256_final::ap_const_lv3_1 = "1";
const sc_lv<5> sha256_final::ap_const_lv5_18 = "11000";
const sc_lv<2> sha256_final::ap_const_lv2_2 = "10";
const sc_lv<5> sha256_final::ap_const_lv5_14 = "10100";
const bool sha256_final::ap_const_boolean_1 = true;

sha256_final::sha256_final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sha256_transform_fu_514 = new sha256_transform("grp_sha256_transform_fu_514");
    grp_sha256_transform_fu_514->ap_clk(ap_clk);
    grp_sha256_transform_fu_514->ap_rst(ap_rst);
    grp_sha256_transform_fu_514->ap_start(grp_sha256_transform_fu_514_ap_start);
    grp_sha256_transform_fu_514->ap_done(grp_sha256_transform_fu_514_ap_done);
    grp_sha256_transform_fu_514->ap_idle(grp_sha256_transform_fu_514_ap_idle);
    grp_sha256_transform_fu_514->ap_ready(grp_sha256_transform_fu_514_ap_ready);
    grp_sha256_transform_fu_514->ctx_state_0_read(grp_sha256_transform_fu_514_ctx_state_0_read);
    grp_sha256_transform_fu_514->ctx_state_1_read(grp_sha256_transform_fu_514_ctx_state_1_read);
    grp_sha256_transform_fu_514->ctx_state_2_read(grp_sha256_transform_fu_514_ctx_state_2_read);
    grp_sha256_transform_fu_514->ctx_state_3_read(grp_sha256_transform_fu_514_ctx_state_3_read);
    grp_sha256_transform_fu_514->ctx_state_4_read(grp_sha256_transform_fu_514_ctx_state_4_read);
    grp_sha256_transform_fu_514->ctx_state_5_read(grp_sha256_transform_fu_514_ctx_state_5_read);
    grp_sha256_transform_fu_514->ctx_state_6_read(grp_sha256_transform_fu_514_ctx_state_6_read);
    grp_sha256_transform_fu_514->ctx_state_7_read(grp_sha256_transform_fu_514_ctx_state_7_read);
    grp_sha256_transform_fu_514->data_address0(grp_sha256_transform_fu_514_data_address0);
    grp_sha256_transform_fu_514->data_ce0(grp_sha256_transform_fu_514_data_ce0);
    grp_sha256_transform_fu_514->data_q0(ctx_data_q0);
    grp_sha256_transform_fu_514->data_address1(grp_sha256_transform_fu_514_data_address1);
    grp_sha256_transform_fu_514->data_ce1(grp_sha256_transform_fu_514_data_ce1);
    grp_sha256_transform_fu_514->data_q1(ctx_data_q1);
    grp_sha256_transform_fu_514->ap_return_0(grp_sha256_transform_fu_514_ap_return_0);
    grp_sha256_transform_fu_514->ap_return_1(grp_sha256_transform_fu_514_ap_return_1);
    grp_sha256_transform_fu_514->ap_return_2(grp_sha256_transform_fu_514_ap_return_2);
    grp_sha256_transform_fu_514->ap_return_3(grp_sha256_transform_fu_514_ap_return_3);
    grp_sha256_transform_fu_514->ap_return_4(grp_sha256_transform_fu_514_ap_return_4);
    grp_sha256_transform_fu_514->ap_return_5(grp_sha256_transform_fu_514_ap_return_5);
    grp_sha256_transform_fu_514->ap_return_6(grp_sha256_transform_fu_514_ap_return_6);
    grp_sha256_transform_fu_514->ap_return_7(grp_sha256_transform_fu_514_ap_return_7);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln134_1_fu_735_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( shl_ln134_fu_665_p2 );

    SC_METHOD(thread_add_ln134_fu_681_p2);
    sensitive << ( p_read3 );

    SC_METHOD(thread_add_ln135_1_fu_740_p2);
    sensitive << ( trunc_ln134_7_fu_727_p3 );
    sensitive << ( trunc_ln134_6_fu_721_p1 );

    SC_METHOD(thread_add_ln135_2_fu_746_p2);
    sensitive << ( trunc_ln134_5_fu_713_p3 );
    sensitive << ( trunc_ln134_3_fu_707_p1 );

    SC_METHOD(thread_add_ln135_fu_752_p2);
    sensitive << ( trunc_ln134_fu_693_p1 );
    sensitive << ( trunc_ln134_1_fu_699_p3 );

    SC_METHOD(thread_add_ln154_fu_1011_p2);
    sensitive << ( zext_ln147_reg_1168 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln147_fu_845_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln147_fu_845_p2 );

    SC_METHOD(thread_ctx_data_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( grp_sha256_transform_fu_514_data_address0 );
    sensitive << ( icmp_ln122_fu_637_p2 );
    sensitive << ( zext_ln114_fu_616_p1 );
    sensitive << ( zext_ln124_fu_643_p1 );
    sensitive << ( zext_ln128_fu_660_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_514_data_address1 );
    sensitive << ( zext_ln117_fu_836_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( grp_sha256_transform_fu_514_data_ce0 );
    sensitive << ( icmp_ln122_fu_637_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_514_data_ce1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( trunc_ln3_reg_1135 );
    sensitive << ( trunc_ln5_reg_1145 );
    sensitive << ( trunc_ln7_reg_1155 );
    sensitive << ( icmp_ln122_fu_637_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( add_ln135_fu_752_p2 );

    SC_METHOD(thread_ctx_data_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( trunc_ln2_reg_1130 );
    sensitive << ( trunc_ln139_reg_1140 );
    sensitive << ( trunc_ln6_reg_1150 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( add_ln135_2_fu_746_p2 );

    SC_METHOD(thread_ctx_data_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( icmp_ln122_fu_637_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_we1);
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln115_fu_830_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ap_start);
    sensitive << ( grp_sha256_transform_fu_514_ap_start_reg );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_0_read);
    sensitive << ( p_read2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_0_0_reg_422 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_1_read);
    sensitive << ( p_read4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_1_0_reg_432 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_2_read);
    sensitive << ( p_read5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_2_0_reg_442 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_3_read);
    sensitive << ( p_read6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_3_0_reg_452 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_4_read);
    sensitive << ( p_read7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_4_0_reg_462 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_5_read);
    sensitive << ( p_read8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_5_0_reg_472 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_6_read);
    sensitive << ( p_read9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_6_0_reg_482 );

    SC_METHOD(thread_grp_sha256_transform_fu_514_ctx_state_7_read);
    sensitive << ( p_read10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_7_0_reg_492 );

    SC_METHOD(thread_hash_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln150_fu_906_p1 );
    sensitive << ( zext_ln149_fu_985_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln153_fu_1006_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln155_fu_1024_p1 );

    SC_METHOD(thread_hash_address1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln151_fu_930_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln152_fu_993_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln154_fu_1016_p1 );
    sensitive << ( zext_ln156_fu_1032_p1 );

    SC_METHOD(thread_hash_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_ce1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( trunc_ln149_1_reg_1181 );
    sensitive << ( trunc_ln153_reg_1202 );
    sensitive << ( trunc_ln155_reg_1212 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( trunc_ln150_fu_895_p1 );

    SC_METHOD(thread_hash_d1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( trunc_ln152_reg_1197 );
    sensitive << ( trunc_ln154_reg_1207 );
    sensitive << ( trunc_ln156_reg_1217 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( trunc_ln151_fu_917_p1 );

    SC_METHOD(thread_hash_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln147_fu_845_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln147_fu_845_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_4_fu_621_p2);
    sensitive << ( i_1_in_reg_393 );

    SC_METHOD(thread_i_5_fu_654_p2);
    sensitive << ( i_2_reg_402 );

    SC_METHOD(thread_i_6_fu_851_p2);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_i_fu_824_p2);
    sensitive << ( i_0_in_reg_413 );

    SC_METHOD(thread_icmp_ln113_fu_610_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_icmp_ln115_fu_830_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_in_reg_413 );

    SC_METHOD(thread_icmp_ln122_fu_637_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_627_p4 );

    SC_METHOD(thread_icmp_ln127_fu_648_p2);
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_402 );

    SC_METHOD(thread_icmp_ln134_fu_676_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( xor_ln134_fu_670_p2 );

    SC_METHOD(thread_icmp_ln147_fu_845_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_lshr_ln149_fu_879_p2);
    sensitive << ( reg_570 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln150_fu_889_p2);
    sensitive << ( reg_575 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln151_fu_911_p2);
    sensitive << ( reg_580 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln152_fu_935_p2);
    sensitive << ( reg_585 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln153_fu_945_p2);
    sensitive << ( reg_590 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln154_fu_955_p2);
    sensitive << ( reg_595 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln155_fu_965_p2);
    sensitive << ( reg_600 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_lshr_ln156_fu_975_p2);
    sensitive << ( reg_605 );
    sensitive << ( zext_ln149_1_fu_875_p1 );

    SC_METHOD(thread_or_ln3_fu_998_p3);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_or_ln_fu_922_p3);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_select_ln134_fu_686_p3);
    sensitive << ( p_read3 );
    sensitive << ( icmp_ln134_fu_676_p2 );
    sensitive << ( add_ln134_fu_681_p2 );

    SC_METHOD(thread_sext_ln152_fu_990_p1);
    sensitive << ( xor_ln150_reg_1186 );

    SC_METHOD(thread_sext_ln155_fu_1021_p1);
    sensitive << ( or_ln_reg_1192 );

    SC_METHOD(thread_sext_ln156_fu_1029_p1);
    sensitive << ( xor_ln150_reg_1186 );

    SC_METHOD(thread_shl_ln134_fu_665_p2);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_shl_ln1_fu_861_p3);
    sensitive << ( trunc_ln149_fu_857_p1 );

    SC_METHOD(thread_sub_ln149_fu_869_p2);
    sensitive << ( shl_ln1_fu_861_p3 );

    SC_METHOD(thread_tmp_2_fu_627_p4);
    sensitive << ( i_4_fu_621_p2 );

    SC_METHOD(thread_trunc_ln134_1_fu_699_p3);
    sensitive << ( trunc_ln134_2_fu_696_p1 );

    SC_METHOD(thread_trunc_ln134_2_fu_696_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_3_fu_707_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln134_4_fu_710_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_5_fu_713_p3);
    sensitive << ( trunc_ln134_4_fu_710_p1 );

    SC_METHOD(thread_trunc_ln134_6_fu_721_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln134_7_fu_727_p3);
    sensitive << ( trunc_ln134_8_fu_724_p1 );

    SC_METHOD(thread_trunc_ln134_8_fu_724_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_fu_693_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln139_fu_790_p1);
    sensitive << ( select_ln134_fu_686_p3 );

    SC_METHOD(thread_trunc_ln149_1_fu_885_p1);
    sensitive << ( lshr_ln149_fu_879_p2 );

    SC_METHOD(thread_trunc_ln149_fu_857_p1);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_trunc_ln150_fu_895_p1);
    sensitive << ( lshr_ln150_fu_889_p2 );

    SC_METHOD(thread_trunc_ln151_fu_917_p1);
    sensitive << ( lshr_ln151_fu_911_p2 );

    SC_METHOD(thread_trunc_ln152_fu_941_p1);
    sensitive << ( lshr_ln152_fu_935_p2 );

    SC_METHOD(thread_trunc_ln153_fu_951_p1);
    sensitive << ( lshr_ln153_fu_945_p2 );

    SC_METHOD(thread_trunc_ln154_fu_961_p1);
    sensitive << ( lshr_ln154_fu_955_p2 );

    SC_METHOD(thread_trunc_ln155_fu_971_p1);
    sensitive << ( lshr_ln155_fu_965_p2 );

    SC_METHOD(thread_trunc_ln156_fu_981_p1);
    sensitive << ( lshr_ln156_fu_975_p2 );

    SC_METHOD(thread_xor_ln134_fu_670_p2);
    sensitive << ( shl_ln134_fu_665_p2 );

    SC_METHOD(thread_xor_ln150_fu_900_p2);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_zext_ln114_fu_616_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_zext_ln117_fu_836_p1);
    sensitive << ( i_fu_824_p2 );

    SC_METHOD(thread_zext_ln124_fu_643_p1);
    sensitive << ( i_4_fu_621_p2 );

    SC_METHOD(thread_zext_ln128_fu_660_p1);
    sensitive << ( i_2_reg_402 );

    SC_METHOD(thread_zext_ln147_fu_841_p1);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_zext_ln149_1_fu_875_p1);
    sensitive << ( sub_ln149_fu_869_p2 );

    SC_METHOD(thread_zext_ln149_fu_985_p1);
    sensitive << ( i_3_reg_502 );

    SC_METHOD(thread_zext_ln150_fu_906_p1);
    sensitive << ( xor_ln150_fu_900_p2 );

    SC_METHOD(thread_zext_ln151_fu_930_p1);
    sensitive << ( or_ln_fu_922_p3 );

    SC_METHOD(thread_zext_ln152_fu_993_p1);
    sensitive << ( sext_ln152_fu_990_p1 );

    SC_METHOD(thread_zext_ln153_fu_1006_p1);
    sensitive << ( or_ln3_fu_998_p3 );

    SC_METHOD(thread_zext_ln154_fu_1016_p1);
    sensitive << ( add_ln154_fu_1011_p2 );

    SC_METHOD(thread_zext_ln155_fu_1024_p1);
    sensitive << ( sext_ln155_fu_1021_p1 );

    SC_METHOD(thread_zext_ln156_fu_1032_p1);
    sensitive << ( sext_ln156_fu_1029_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_sha256_transform_fu_514_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln113_fu_610_p2 );
    sensitive << ( icmp_ln113_reg_1110 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_648_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln147_fu_845_p2 );
    sensitive << ( icmp_ln122_fu_637_p2 );
    sensitive << ( icmp_ln115_fu_830_p2 );

    ap_CS_fsm = "00000000000001";
    grp_sha256_transform_fu_514_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_data_address0, "(port)ctx_data_address0");
    sc_trace(mVcdFile, ctx_data_ce0, "(port)ctx_data_ce0");
    sc_trace(mVcdFile, ctx_data_we0, "(port)ctx_data_we0");
    sc_trace(mVcdFile, ctx_data_d0, "(port)ctx_data_d0");
    sc_trace(mVcdFile, ctx_data_q0, "(port)ctx_data_q0");
    sc_trace(mVcdFile, ctx_data_address1, "(port)ctx_data_address1");
    sc_trace(mVcdFile, ctx_data_ce1, "(port)ctx_data_ce1");
    sc_trace(mVcdFile, ctx_data_we1, "(port)ctx_data_we1");
    sc_trace(mVcdFile, ctx_data_d1, "(port)ctx_data_d1");
    sc_trace(mVcdFile, ctx_data_q1, "(port)ctx_data_q1");
    sc_trace(mVcdFile, ctx_datalen_read, "(port)ctx_datalen_read");
    sc_trace(mVcdFile, ctx_bitlen_0_read, "(port)ctx_bitlen_0_read");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, hash_address0, "(port)hash_address0");
    sc_trace(mVcdFile, hash_ce0, "(port)hash_ce0");
    sc_trace(mVcdFile, hash_we0, "(port)hash_we0");
    sc_trace(mVcdFile, hash_d0, "(port)hash_d0");
    sc_trace(mVcdFile, hash_address1, "(port)hash_address1");
    sc_trace(mVcdFile, hash_ce1, "(port)hash_ce1");
    sc_trace(mVcdFile, hash_we1, "(port)hash_we1");
    sc_trace(mVcdFile, hash_d1, "(port)hash_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_570, "reg_570");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_ready, "grp_sha256_transform_fu_514_ap_ready");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_done, "grp_sha256_transform_fu_514_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_575, "reg_575");
    sc_trace(mVcdFile, reg_580, "reg_580");
    sc_trace(mVcdFile, reg_585, "reg_585");
    sc_trace(mVcdFile, reg_590, "reg_590");
    sc_trace(mVcdFile, reg_595, "reg_595");
    sc_trace(mVcdFile, reg_600, "reg_600");
    sc_trace(mVcdFile, reg_605, "reg_605");
    sc_trace(mVcdFile, icmp_ln113_fu_610_p2, "icmp_ln113_fu_610_p2");
    sc_trace(mVcdFile, icmp_ln113_reg_1110, "icmp_ln113_reg_1110");
    sc_trace(mVcdFile, i_4_fu_621_p2, "i_4_fu_621_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_5_fu_654_p2, "i_5_fu_654_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, trunc_ln2_reg_1130, "trunc_ln2_reg_1130");
    sc_trace(mVcdFile, icmp_ln127_fu_648_p2, "icmp_ln127_fu_648_p2");
    sc_trace(mVcdFile, trunc_ln3_reg_1135, "trunc_ln3_reg_1135");
    sc_trace(mVcdFile, trunc_ln139_fu_790_p1, "trunc_ln139_fu_790_p1");
    sc_trace(mVcdFile, trunc_ln139_reg_1140, "trunc_ln139_reg_1140");
    sc_trace(mVcdFile, trunc_ln5_reg_1145, "trunc_ln5_reg_1145");
    sc_trace(mVcdFile, trunc_ln6_reg_1150, "trunc_ln6_reg_1150");
    sc_trace(mVcdFile, trunc_ln7_reg_1155, "trunc_ln7_reg_1155");
    sc_trace(mVcdFile, i_fu_824_p2, "i_fu_824_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln147_fu_841_p1, "zext_ln147_fu_841_p1");
    sc_trace(mVcdFile, zext_ln147_reg_1168, "zext_ln147_reg_1168");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_6_fu_851_p2, "i_6_fu_851_p2");
    sc_trace(mVcdFile, i_6_reg_1176, "i_6_reg_1176");
    sc_trace(mVcdFile, trunc_ln149_1_fu_885_p1, "trunc_ln149_1_fu_885_p1");
    sc_trace(mVcdFile, trunc_ln149_1_reg_1181, "trunc_ln149_1_reg_1181");
    sc_trace(mVcdFile, icmp_ln147_fu_845_p2, "icmp_ln147_fu_845_p2");
    sc_trace(mVcdFile, xor_ln150_fu_900_p2, "xor_ln150_fu_900_p2");
    sc_trace(mVcdFile, xor_ln150_reg_1186, "xor_ln150_reg_1186");
    sc_trace(mVcdFile, or_ln_fu_922_p3, "or_ln_fu_922_p3");
    sc_trace(mVcdFile, or_ln_reg_1192, "or_ln_reg_1192");
    sc_trace(mVcdFile, trunc_ln152_fu_941_p1, "trunc_ln152_fu_941_p1");
    sc_trace(mVcdFile, trunc_ln152_reg_1197, "trunc_ln152_reg_1197");
    sc_trace(mVcdFile, trunc_ln153_fu_951_p1, "trunc_ln153_fu_951_p1");
    sc_trace(mVcdFile, trunc_ln153_reg_1202, "trunc_ln153_reg_1202");
    sc_trace(mVcdFile, trunc_ln154_fu_961_p1, "trunc_ln154_fu_961_p1");
    sc_trace(mVcdFile, trunc_ln154_reg_1207, "trunc_ln154_reg_1207");
    sc_trace(mVcdFile, trunc_ln155_fu_971_p1, "trunc_ln155_fu_971_p1");
    sc_trace(mVcdFile, trunc_ln155_reg_1212, "trunc_ln155_reg_1212");
    sc_trace(mVcdFile, trunc_ln156_fu_981_p1, "trunc_ln156_fu_981_p1");
    sc_trace(mVcdFile, trunc_ln156_reg_1217, "trunc_ln156_reg_1217");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_start, "grp_sha256_transform_fu_514_ap_start");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_idle, "grp_sha256_transform_fu_514_ap_idle");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_0_read, "grp_sha256_transform_fu_514_ctx_state_0_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_1_read, "grp_sha256_transform_fu_514_ctx_state_1_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_2_read, "grp_sha256_transform_fu_514_ctx_state_2_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_3_read, "grp_sha256_transform_fu_514_ctx_state_3_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_4_read, "grp_sha256_transform_fu_514_ctx_state_4_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_5_read, "grp_sha256_transform_fu_514_ctx_state_5_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_6_read, "grp_sha256_transform_fu_514_ctx_state_6_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ctx_state_7_read, "grp_sha256_transform_fu_514_ctx_state_7_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_data_address0, "grp_sha256_transform_fu_514_data_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_data_ce0, "grp_sha256_transform_fu_514_data_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_data_address1, "grp_sha256_transform_fu_514_data_address1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_data_ce1, "grp_sha256_transform_fu_514_data_ce1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_0, "grp_sha256_transform_fu_514_ap_return_0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_1, "grp_sha256_transform_fu_514_ap_return_1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_2, "grp_sha256_transform_fu_514_ap_return_2");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_3, "grp_sha256_transform_fu_514_ap_return_3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_4, "grp_sha256_transform_fu_514_ap_return_4");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_5, "grp_sha256_transform_fu_514_ap_return_5");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_6, "grp_sha256_transform_fu_514_ap_return_6");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_return_7, "grp_sha256_transform_fu_514_ap_return_7");
    sc_trace(mVcdFile, i_1_in_reg_393, "i_1_in_reg_393");
    sc_trace(mVcdFile, icmp_ln122_fu_637_p2, "icmp_ln122_fu_637_p2");
    sc_trace(mVcdFile, i_2_reg_402, "i_2_reg_402");
    sc_trace(mVcdFile, i_0_in_reg_413, "i_0_in_reg_413");
    sc_trace(mVcdFile, icmp_ln115_fu_830_p2, "icmp_ln115_fu_830_p2");
    sc_trace(mVcdFile, ctx_state_0_0_reg_422, "ctx_state_0_0_reg_422");
    sc_trace(mVcdFile, ctx_state_1_0_reg_432, "ctx_state_1_0_reg_432");
    sc_trace(mVcdFile, ctx_state_2_0_reg_442, "ctx_state_2_0_reg_442");
    sc_trace(mVcdFile, ctx_state_3_0_reg_452, "ctx_state_3_0_reg_452");
    sc_trace(mVcdFile, ctx_state_4_0_reg_462, "ctx_state_4_0_reg_462");
    sc_trace(mVcdFile, ctx_state_5_0_reg_472, "ctx_state_5_0_reg_472");
    sc_trace(mVcdFile, ctx_state_6_0_reg_482, "ctx_state_6_0_reg_482");
    sc_trace(mVcdFile, ctx_state_7_0_reg_492, "ctx_state_7_0_reg_492");
    sc_trace(mVcdFile, i_3_reg_502, "i_3_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_sha256_transform_fu_514_ap_start_reg, "grp_sha256_transform_fu_514_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln114_fu_616_p1, "zext_ln114_fu_616_p1");
    sc_trace(mVcdFile, zext_ln124_fu_643_p1, "zext_ln124_fu_643_p1");
    sc_trace(mVcdFile, zext_ln128_fu_660_p1, "zext_ln128_fu_660_p1");
    sc_trace(mVcdFile, zext_ln117_fu_836_p1, "zext_ln117_fu_836_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln150_fu_906_p1, "zext_ln150_fu_906_p1");
    sc_trace(mVcdFile, zext_ln151_fu_930_p1, "zext_ln151_fu_930_p1");
    sc_trace(mVcdFile, zext_ln149_fu_985_p1, "zext_ln149_fu_985_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, zext_ln152_fu_993_p1, "zext_ln152_fu_993_p1");
    sc_trace(mVcdFile, zext_ln153_fu_1006_p1, "zext_ln153_fu_1006_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, zext_ln154_fu_1016_p1, "zext_ln154_fu_1016_p1");
    sc_trace(mVcdFile, zext_ln155_fu_1024_p1, "zext_ln155_fu_1024_p1");
    sc_trace(mVcdFile, zext_ln156_fu_1032_p1, "zext_ln156_fu_1032_p1");
    sc_trace(mVcdFile, add_ln135_fu_752_p2, "add_ln135_fu_752_p2");
    sc_trace(mVcdFile, trunc_ln150_fu_895_p1, "trunc_ln150_fu_895_p1");
    sc_trace(mVcdFile, trunc_ln151_fu_917_p1, "trunc_ln151_fu_917_p1");
    sc_trace(mVcdFile, tmp_2_fu_627_p4, "tmp_2_fu_627_p4");
    sc_trace(mVcdFile, shl_ln134_fu_665_p2, "shl_ln134_fu_665_p2");
    sc_trace(mVcdFile, xor_ln134_fu_670_p2, "xor_ln134_fu_670_p2");
    sc_trace(mVcdFile, icmp_ln134_fu_676_p2, "icmp_ln134_fu_676_p2");
    sc_trace(mVcdFile, add_ln134_fu_681_p2, "add_ln134_fu_681_p2");
    sc_trace(mVcdFile, trunc_ln134_2_fu_696_p1, "trunc_ln134_2_fu_696_p1");
    sc_trace(mVcdFile, trunc_ln134_4_fu_710_p1, "trunc_ln134_4_fu_710_p1");
    sc_trace(mVcdFile, trunc_ln134_8_fu_724_p1, "trunc_ln134_8_fu_724_p1");
    sc_trace(mVcdFile, trunc_ln134_7_fu_727_p3, "trunc_ln134_7_fu_727_p3");
    sc_trace(mVcdFile, trunc_ln134_6_fu_721_p1, "trunc_ln134_6_fu_721_p1");
    sc_trace(mVcdFile, trunc_ln134_5_fu_713_p3, "trunc_ln134_5_fu_713_p3");
    sc_trace(mVcdFile, trunc_ln134_3_fu_707_p1, "trunc_ln134_3_fu_707_p1");
    sc_trace(mVcdFile, trunc_ln134_fu_693_p1, "trunc_ln134_fu_693_p1");
    sc_trace(mVcdFile, trunc_ln134_1_fu_699_p3, "trunc_ln134_1_fu_699_p3");
    sc_trace(mVcdFile, add_ln135_2_fu_746_p2, "add_ln135_2_fu_746_p2");
    sc_trace(mVcdFile, add_ln135_1_fu_740_p2, "add_ln135_1_fu_740_p2");
    sc_trace(mVcdFile, add_ln134_1_fu_735_p2, "add_ln134_1_fu_735_p2");
    sc_trace(mVcdFile, select_ln134_fu_686_p3, "select_ln134_fu_686_p3");
    sc_trace(mVcdFile, trunc_ln149_fu_857_p1, "trunc_ln149_fu_857_p1");
    sc_trace(mVcdFile, shl_ln1_fu_861_p3, "shl_ln1_fu_861_p3");
    sc_trace(mVcdFile, sub_ln149_fu_869_p2, "sub_ln149_fu_869_p2");
    sc_trace(mVcdFile, zext_ln149_1_fu_875_p1, "zext_ln149_1_fu_875_p1");
    sc_trace(mVcdFile, lshr_ln149_fu_879_p2, "lshr_ln149_fu_879_p2");
    sc_trace(mVcdFile, lshr_ln150_fu_889_p2, "lshr_ln150_fu_889_p2");
    sc_trace(mVcdFile, lshr_ln151_fu_911_p2, "lshr_ln151_fu_911_p2");
    sc_trace(mVcdFile, lshr_ln152_fu_935_p2, "lshr_ln152_fu_935_p2");
    sc_trace(mVcdFile, lshr_ln153_fu_945_p2, "lshr_ln153_fu_945_p2");
    sc_trace(mVcdFile, lshr_ln154_fu_955_p2, "lshr_ln154_fu_955_p2");
    sc_trace(mVcdFile, lshr_ln155_fu_965_p2, "lshr_ln155_fu_965_p2");
    sc_trace(mVcdFile, lshr_ln156_fu_975_p2, "lshr_ln156_fu_975_p2");
    sc_trace(mVcdFile, sext_ln152_fu_990_p1, "sext_ln152_fu_990_p1");
    sc_trace(mVcdFile, or_ln3_fu_998_p3, "or_ln3_fu_998_p3");
    sc_trace(mVcdFile, add_ln154_fu_1011_p2, "add_ln154_fu_1011_p2");
    sc_trace(mVcdFile, sext_ln155_fu_1021_p1, "sext_ln155_fu_1021_p1");
    sc_trace(mVcdFile, sext_ln156_fu_1029_p1, "sext_ln156_fu_1029_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_final::~sha256_final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sha256_transform_fu_514;
}

void sha256_final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_0_0_reg_422 = p_read2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_0_0_reg_422 = reg_570.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_1_0_reg_432 = p_read4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_1_0_reg_432 = reg_575.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_2_0_reg_442 = p_read5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_2_0_reg_442 = reg_580.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_3_0_reg_452 = p_read6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_3_0_reg_452 = reg_585.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_4_0_reg_462 = p_read7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_4_0_reg_462 = reg_590.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_5_0_reg_472 = p_read8.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_5_0_reg_472 = reg_595.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_6_0_reg_482 = p_read9.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_6_0_reg_482 = reg_600.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
        ctx_state_7_0_reg_492 = p_read10.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1))) {
        ctx_state_7_0_reg_492 = reg_605.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sha256_transform_fu_514_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_637_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            grp_sha256_transform_fu_514_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_514_ap_ready.read())) {
            grp_sha256_transform_fu_514_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln113_fu_610_p2.read(), ap_const_lv1_1))) {
        i_0_in_reg_413 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_830_p2.read()))) {
        i_0_in_reg_413 = i_fu_824_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln113_fu_610_p2.read(), ap_const_lv1_0))) {
        i_1_in_reg_393 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read()))) {
        i_1_in_reg_393 = i_4_fu_621_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_648_p2.read()))) {
        i_2_reg_402 = i_5_fu_654_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1))) {
        i_2_reg_402 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_3_reg_502 = i_6_reg_1176.read();
    } else if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        i_3_reg_502 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_6_reg_1176 = i_6_fu_851_p2.read();
        zext_ln147_reg_1168 = zext_ln147_fu_841_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        icmp_ln113_reg_1110 = icmp_ln113_fu_610_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_845_p2.read()))) {
        or_ln_reg_1192 = or_ln_fu_922_p3.read();
        trunc_ln149_1_reg_1181 = trunc_ln149_1_fu_885_p1.read();
        trunc_ln152_reg_1197 = trunc_ln152_fu_941_p1.read();
        trunc_ln153_reg_1202 = trunc_ln153_fu_951_p1.read();
        trunc_ln154_reg_1207 = trunc_ln154_fu_961_p1.read();
        trunc_ln155_reg_1212 = trunc_ln155_fu_971_p1.read();
        trunc_ln156_reg_1217 = trunc_ln156_fu_981_p1.read();
        xor_ln150_reg_1186 = xor_ln150_fu_900_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        reg_570 = grp_sha256_transform_fu_514_ap_return_0.read();
        reg_575 = grp_sha256_transform_fu_514_ap_return_1.read();
        reg_580 = grp_sha256_transform_fu_514_ap_return_2.read();
        reg_585 = grp_sha256_transform_fu_514_ap_return_3.read();
        reg_590 = grp_sha256_transform_fu_514_ap_return_4.read();
        reg_595 = grp_sha256_transform_fu_514_ap_return_5.read();
        reg_600 = grp_sha256_transform_fu_514_ap_return_6.read();
        reg_605 = grp_sha256_transform_fu_514_ap_return_7.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1)))) {
        trunc_ln139_reg_1140 = trunc_ln139_fu_790_p1.read();
        trunc_ln2_reg_1130 = add_ln135_1_fu_740_p2.read().range(23, 16);
        trunc_ln3_reg_1135 = add_ln134_1_fu_735_p2.read().range(31, 24);
        trunc_ln5_reg_1145 = select_ln134_fu_686_p3.read().range(15, 8);
        trunc_ln6_reg_1150 = select_ln134_fu_686_p3.read().range(23, 16);
        trunc_ln7_reg_1155 = select_ln134_fu_686_p3.read().range(31, 24);
    }
}

void sha256_final::thread_add_ln134_1_fu_735_p2() {
    add_ln134_1_fu_735_p2 = (!ctx_bitlen_0_read.read().is_01() || !shl_ln134_fu_665_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) + sc_biguint<32>(shl_ln134_fu_665_p2.read()));
}

void sha256_final::thread_add_ln134_fu_681_p2() {
    add_ln134_fu_681_p2 = (!ap_const_lv32_1.is_01() || !p_read3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_read3.read()));
}

void sha256_final::thread_add_ln135_1_fu_740_p2() {
    add_ln135_1_fu_740_p2 = (!trunc_ln134_7_fu_727_p3.read().is_01() || !trunc_ln134_6_fu_721_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(trunc_ln134_7_fu_727_p3.read()) + sc_biguint<24>(trunc_ln134_6_fu_721_p1.read()));
}

void sha256_final::thread_add_ln135_2_fu_746_p2() {
    add_ln135_2_fu_746_p2 = (!trunc_ln134_5_fu_713_p3.read().is_01() || !trunc_ln134_3_fu_707_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(trunc_ln134_5_fu_713_p3.read()) + sc_biguint<16>(trunc_ln134_3_fu_707_p1.read()));
}

void sha256_final::thread_add_ln135_fu_752_p2() {
    add_ln135_fu_752_p2 = (!trunc_ln134_fu_693_p1.read().is_01() || !trunc_ln134_1_fu_699_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln134_fu_693_p1.read()) + sc_biguint<8>(trunc_ln134_1_fu_699_p3.read()));
}

void sha256_final::thread_add_ln154_fu_1011_p2() {
    add_ln154_fu_1011_p2 = (!ap_const_lv5_14.is_01() || !zext_ln147_reg_1168.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(zext_ln147_reg_1168.read()));
}

void sha256_final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_final::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sha256_final::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sha256_final::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sha256_final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln147_fu_845_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln147_fu_845_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_38);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1)))) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_648_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (zext_ln128_fu_660_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (zext_ln124_fu_643_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_address0 =  (sc_lv<6>) (zext_ln114_fu_616_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address0 = grp_sha256_transform_fu_514_data_address0.read();
    } else {
        ctx_data_address0 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_39);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_address1 =  (sc_lv<6>) (zext_ln117_fu_836_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3E);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address1 = grp_sha256_transform_fu_514_data_address1.read();
    } else {
        ctx_data_address1 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_648_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce0 = grp_sha256_transform_fu_514_data_ce0.read();
    } else {
        ctx_data_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce1 = grp_sha256_transform_fu_514_data_ce1.read();
    } else {
        ctx_data_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d0 = trunc_ln7_reg_1155.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d0 = trunc_ln5_reg_1145.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d0 = trunc_ln3_reg_1135.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1)))) {
        ctx_data_d0 = add_ln135_fu_752_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_648_p2.read())))) {
        ctx_data_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_d0 = ap_const_lv8_80;
    } else {
        ctx_data_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d1 = trunc_ln6_reg_1150.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d1 = trunc_ln139_reg_1140.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d1 = trunc_ln2_reg_1130.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_d1 = add_ln135_2_fu_746_p2.read().range(15, 8);
    } else {
        ctx_data_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_648_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we0 = ap_const_logic_1;
    } else {
        ctx_data_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_830_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we1 = ap_const_logic_1;
    } else {
        ctx_data_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ap_start() {
    grp_sha256_transform_fu_514_ap_start = grp_sha256_transform_fu_514_ap_start_reg.read();
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_0_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_0_read = ctx_state_0_0_reg_422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_0_read = p_read2.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_0_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_1_read = ctx_state_1_0_reg_432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_1_read = p_read4.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_2_read = ctx_state_2_0_reg_442.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_2_read = p_read5.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_3_read = ctx_state_3_0_reg_452.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_3_read = p_read6.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_4_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_4_read = ctx_state_4_0_reg_462.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_4_read = p_read7.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_4_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_5_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_5_read = ctx_state_5_0_reg_472.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_5_read = p_read8.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_5_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_6_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_6_read = ctx_state_6_0_reg_482.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_6_read = p_read9.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_6_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_514_ctx_state_7_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_514_ctx_state_7_read = ctx_state_7_0_reg_492.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_514_ctx_state_7_read = p_read10.read();
    } else {
        grp_sha256_transform_fu_514_ctx_state_7_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_hash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln155_fu_1024_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln153_fu_1006_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln149_fu_985_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln150_fu_906_p1.read());
    } else {
        hash_address0 = "XXXXXX";
    }
}

void sha256_final::thread_hash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln156_fu_1032_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln154_fu_1016_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln152_fu_993_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln151_fu_930_p1.read());
    } else {
        hash_address1 = "XXXXXX";
    }
}

void sha256_final::thread_hash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_ce0 = ap_const_logic_1;
    } else {
        hash_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_ce1 = ap_const_logic_1;
    } else {
        hash_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d0 = trunc_ln155_reg_1212.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d0 = trunc_ln153_reg_1202.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d0 = trunc_ln149_1_reg_1181.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d0 = trunc_ln150_fu_895_p1.read();
    } else {
        hash_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d1 = trunc_ln156_reg_1217.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d1 = trunc_ln154_reg_1207.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d1 = trunc_ln152_reg_1197.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d1 = trunc_ln151_fu_917_p1.read();
    } else {
        hash_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_845_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_we0 = ap_const_logic_1;
    } else {
        hash_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_845_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_we1 = ap_const_logic_1;
    } else {
        hash_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_i_4_fu_621_p2() {
    i_4_fu_621_p2 = (!i_1_in_reg_393.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_in_reg_393.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_5_fu_654_p2() {
    i_5_fu_654_p2 = (!i_2_reg_402.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_402.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sha256_final::thread_i_6_fu_851_p2() {
    i_6_fu_851_p2 = (!i_3_reg_502.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_reg_502.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void sha256_final::thread_i_fu_824_p2() {
    i_fu_824_p2 = (!i_0_in_reg_413.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_in_reg_413.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_icmp_ln113_fu_610_p2() {
    icmp_ln113_fu_610_p2 = (!ctx_datalen_read.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_datalen_read.read()) < sc_biguint<32>(ap_const_lv32_38));
}

void sha256_final::thread_icmp_ln115_fu_830_p2() {
    icmp_ln115_fu_830_p2 = (!i_0_in_reg_413.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): sc_lv<1>(i_0_in_reg_413.read() == ap_const_lv32_37);
}

void sha256_final::thread_icmp_ln122_fu_637_p2() {
    icmp_ln122_fu_637_p2 = (!tmp_2_fu_627_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_627_p4.read() == ap_const_lv26_0);
}

void sha256_final::thread_icmp_ln127_fu_648_p2() {
    icmp_ln127_fu_648_p2 = (!i_2_reg_402.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_402.read() == ap_const_lv6_38);
}

void sha256_final::thread_icmp_ln134_fu_676_p2() {
    icmp_ln134_fu_676_p2 = (!ctx_bitlen_0_read.read().is_01() || !xor_ln134_fu_670_p2.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) > sc_biguint<32>(xor_ln134_fu_670_p2.read()));
}

void sha256_final::thread_icmp_ln147_fu_845_p2() {
    icmp_ln147_fu_845_p2 = (!i_3_reg_502.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_502.read() == ap_const_lv3_4);
}

void sha256_final::thread_lshr_ln149_fu_879_p2() {
    lshr_ln149_fu_879_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_570.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln150_fu_889_p2() {
    lshr_ln150_fu_889_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_575.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln151_fu_911_p2() {
    lshr_ln151_fu_911_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_580.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln152_fu_935_p2() {
    lshr_ln152_fu_935_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_585.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln153_fu_945_p2() {
    lshr_ln153_fu_945_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_590.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln154_fu_955_p2() {
    lshr_ln154_fu_955_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_595.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln155_fu_965_p2() {
    lshr_ln155_fu_965_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_600.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln156_fu_975_p2() {
    lshr_ln156_fu_975_p2 = (!zext_ln149_1_fu_875_p1.read().is_01())? sc_lv<32>(): reg_605.read() >> (unsigned short)zext_ln149_1_fu_875_p1.read().to_uint();
}

void sha256_final::thread_or_ln3_fu_998_p3() {
    or_ln3_fu_998_p3 = esl_concat<2,3>(ap_const_lv2_2, i_3_reg_502.read());
}

void sha256_final::thread_or_ln_fu_922_p3() {
    or_ln_fu_922_p3 = esl_concat<1,3>(ap_const_lv1_1, i_3_reg_502.read());
}

void sha256_final::thread_select_ln134_fu_686_p3() {
    select_ln134_fu_686_p3 = (!icmp_ln134_fu_676_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln134_fu_676_p2.read()[0].to_bool())? add_ln134_fu_681_p2.read(): p_read3.read());
}

void sha256_final::thread_sext_ln152_fu_990_p1() {
    sext_ln152_fu_990_p1 = esl_sext<4,3>(xor_ln150_reg_1186.read());
}

void sha256_final::thread_sext_ln155_fu_1021_p1() {
    sext_ln155_fu_1021_p1 = esl_sext<5,4>(or_ln_reg_1192.read());
}

void sha256_final::thread_sext_ln156_fu_1029_p1() {
    sext_ln156_fu_1029_p1 = esl_sext<5,3>(xor_ln150_reg_1186.read());
}

void sha256_final::thread_shl_ln134_fu_665_p2() {
    shl_ln134_fu_665_p2 = (!ap_const_lv32_3.is_01())? sc_lv<32>(): ctx_datalen_read.read() << (unsigned short)ap_const_lv32_3.to_uint();
}

void sha256_final::thread_shl_ln1_fu_861_p3() {
    shl_ln1_fu_861_p3 = esl_concat<2,3>(trunc_ln149_fu_857_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_sub_ln149_fu_869_p2() {
    sub_ln149_fu_869_p2 = (!ap_const_lv5_18.is_01() || !shl_ln1_fu_861_p3.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(shl_ln1_fu_861_p3.read()));
}

void sha256_final::thread_tmp_2_fu_627_p4() {
    tmp_2_fu_627_p4 = i_4_fu_621_p2.read().range(31, 6);
}

void sha256_final::thread_trunc_ln134_1_fu_699_p3() {
    trunc_ln134_1_fu_699_p3 = esl_concat<5,3>(trunc_ln134_2_fu_696_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_2_fu_696_p1() {
    trunc_ln134_2_fu_696_p1 = ctx_datalen_read.read().range(5-1, 0);
}

void sha256_final::thread_trunc_ln134_3_fu_707_p1() {
    trunc_ln134_3_fu_707_p1 = ctx_bitlen_0_read.read().range(16-1, 0);
}

void sha256_final::thread_trunc_ln134_4_fu_710_p1() {
    trunc_ln134_4_fu_710_p1 = ctx_datalen_read.read().range(13-1, 0);
}

void sha256_final::thread_trunc_ln134_5_fu_713_p3() {
    trunc_ln134_5_fu_713_p3 = esl_concat<13,3>(trunc_ln134_4_fu_710_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_6_fu_721_p1() {
    trunc_ln134_6_fu_721_p1 = ctx_bitlen_0_read.read().range(24-1, 0);
}

void sha256_final::thread_trunc_ln134_7_fu_727_p3() {
    trunc_ln134_7_fu_727_p3 = esl_concat<21,3>(trunc_ln134_8_fu_724_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_8_fu_724_p1() {
    trunc_ln134_8_fu_724_p1 = ctx_datalen_read.read().range(21-1, 0);
}

void sha256_final::thread_trunc_ln134_fu_693_p1() {
    trunc_ln134_fu_693_p1 = ctx_bitlen_0_read.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln139_fu_790_p1() {
    trunc_ln139_fu_790_p1 = select_ln134_fu_686_p3.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln149_1_fu_885_p1() {
    trunc_ln149_1_fu_885_p1 = lshr_ln149_fu_879_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln149_fu_857_p1() {
    trunc_ln149_fu_857_p1 = i_3_reg_502.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln150_fu_895_p1() {
    trunc_ln150_fu_895_p1 = lshr_ln150_fu_889_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln151_fu_917_p1() {
    trunc_ln151_fu_917_p1 = lshr_ln151_fu_911_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln152_fu_941_p1() {
    trunc_ln152_fu_941_p1 = lshr_ln152_fu_935_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln153_fu_951_p1() {
    trunc_ln153_fu_951_p1 = lshr_ln153_fu_945_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln154_fu_961_p1() {
    trunc_ln154_fu_961_p1 = lshr_ln154_fu_955_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln155_fu_971_p1() {
    trunc_ln155_fu_971_p1 = lshr_ln155_fu_965_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln156_fu_981_p1() {
    trunc_ln156_fu_981_p1 = lshr_ln156_fu_975_p2.read().range(8-1, 0);
}

void sha256_final::thread_xor_ln134_fu_670_p2() {
    xor_ln134_fu_670_p2 = (shl_ln134_fu_665_p2.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_final::thread_xor_ln150_fu_900_p2() {
    xor_ln150_fu_900_p2 = (i_3_reg_502.read() ^ ap_const_lv3_4);
}

void sha256_final::thread_zext_ln114_fu_616_p1() {
    zext_ln114_fu_616_p1 = esl_zext<64,32>(ctx_datalen_read.read());
}

void sha256_final::thread_zext_ln117_fu_836_p1() {
    zext_ln117_fu_836_p1 = esl_zext<64,32>(i_fu_824_p2.read());
}

void sha256_final::thread_zext_ln124_fu_643_p1() {
    zext_ln124_fu_643_p1 = esl_zext<64,32>(i_4_fu_621_p2.read());
}

void sha256_final::thread_zext_ln128_fu_660_p1() {
    zext_ln128_fu_660_p1 = esl_zext<64,6>(i_2_reg_402.read());
}

void sha256_final::thread_zext_ln147_fu_841_p1() {
    zext_ln147_fu_841_p1 = esl_zext<5,3>(i_3_reg_502.read());
}

void sha256_final::thread_zext_ln149_1_fu_875_p1() {
    zext_ln149_1_fu_875_p1 = esl_zext<32,5>(sub_ln149_fu_869_p2.read());
}

void sha256_final::thread_zext_ln149_fu_985_p1() {
    zext_ln149_fu_985_p1 = esl_zext<64,3>(i_3_reg_502.read());
}

void sha256_final::thread_zext_ln150_fu_906_p1() {
    zext_ln150_fu_906_p1 = esl_zext<64,3>(xor_ln150_fu_900_p2.read());
}

void sha256_final::thread_zext_ln151_fu_930_p1() {
    zext_ln151_fu_930_p1 = esl_zext<64,4>(or_ln_fu_922_p3.read());
}

void sha256_final::thread_zext_ln152_fu_993_p1() {
    zext_ln152_fu_993_p1 = esl_zext<64,4>(sext_ln152_fu_990_p1.read());
}

void sha256_final::thread_zext_ln153_fu_1006_p1() {
    zext_ln153_fu_1006_p1 = esl_zext<64,5>(or_ln3_fu_998_p3.read());
}

void sha256_final::thread_zext_ln154_fu_1016_p1() {
    zext_ln154_fu_1016_p1 = esl_zext<64,5>(add_ln154_fu_1011_p2.read());
}

void sha256_final::thread_zext_ln155_fu_1024_p1() {
    zext_ln155_fu_1024_p1 = esl_zext<64,5>(sext_ln155_fu_1021_p1.read());
}

void sha256_final::thread_zext_ln156_fu_1032_p1() {
    zext_ln156_fu_1032_p1 = esl_zext<64,5>(sext_ln156_fu_1029_p1.read());
}

void sha256_final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln113_fu_610_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln113_fu_610_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln122_fu_637_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(icmp_ln127_fu_648_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp_ln113_reg_1110.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_830_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_514_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln147_fu_845_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

