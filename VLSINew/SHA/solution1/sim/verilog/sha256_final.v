// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_final (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_data_address0,
        ctx_data_ce0,
        ctx_data_we0,
        ctx_data_d0,
        ctx_data_q0,
        ctx_data_address1,
        ctx_data_ce1,
        ctx_data_we1,
        ctx_data_d1,
        ctx_data_q1,
        ctx_datalen_read,
        ctx_bitlen_0_read,
        p_read3,
        p_read2,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] ctx_data_address0;
output   ctx_data_ce0;
output   ctx_data_we0;
output  [7:0] ctx_data_d0;
input  [7:0] ctx_data_q0;
output  [5:0] ctx_data_address1;
output   ctx_data_ce1;
output   ctx_data_we1;
output  [7:0] ctx_data_d1;
input  [7:0] ctx_data_q1;
input  [31:0] ctx_datalen_read;
input  [31:0] ctx_bitlen_0_read;
input  [31:0] p_read3;
input  [31:0] p_read2;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
output  [5:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [7:0] hash_d0;
output  [5:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [7:0] hash_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ctx_data_address0;
reg ctx_data_ce0;
reg ctx_data_we0;
reg[7:0] ctx_data_d0;
reg[5:0] ctx_data_address1;
reg ctx_data_ce1;
reg ctx_data_we1;
reg[7:0] ctx_data_d1;
reg[5:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[7:0] hash_d0;
reg[5:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[7:0] hash_d1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_570;
wire    ap_CS_fsm_state3;
wire    grp_sha256_transform_fu_514_ap_ready;
wire    grp_sha256_transform_fu_514_ap_done;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_575;
reg   [31:0] reg_580;
reg   [31:0] reg_585;
reg   [31:0] reg_590;
reg   [31:0] reg_595;
reg   [31:0] reg_600;
reg   [31:0] reg_605;
wire   [0:0] icmp_ln113_fu_610_p2;
reg   [0:0] icmp_ln113_reg_1110;
wire   [31:0] i_4_fu_621_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] i_5_fu_654_p2;
wire    ap_CS_fsm_state4;
reg   [7:0] trunc_ln2_reg_1130;
wire   [0:0] icmp_ln127_fu_648_p2;
reg   [7:0] trunc_ln3_reg_1135;
wire   [7:0] trunc_ln139_fu_790_p1;
reg   [7:0] trunc_ln139_reg_1140;
reg   [7:0] trunc_ln5_reg_1145;
reg   [7:0] trunc_ln6_reg_1150;
reg   [7:0] trunc_ln7_reg_1155;
wire   [31:0] i_fu_824_p2;
wire    ap_CS_fsm_state5;
wire   [4:0] zext_ln147_fu_841_p1;
reg   [4:0] zext_ln147_reg_1168;
wire    ap_CS_fsm_state11;
wire   [2:0] i_6_fu_851_p2;
reg   [2:0] i_6_reg_1176;
wire   [7:0] trunc_ln149_1_fu_885_p1;
reg   [7:0] trunc_ln149_1_reg_1181;
wire   [0:0] icmp_ln147_fu_845_p2;
wire  signed [2:0] xor_ln150_fu_900_p2;
reg  signed [2:0] xor_ln150_reg_1186;
wire  signed [3:0] or_ln_fu_922_p3;
reg  signed [3:0] or_ln_reg_1192;
wire   [7:0] trunc_ln152_fu_941_p1;
reg   [7:0] trunc_ln152_reg_1197;
wire   [7:0] trunc_ln153_fu_951_p1;
reg   [7:0] trunc_ln153_reg_1202;
wire   [7:0] trunc_ln154_fu_961_p1;
reg   [7:0] trunc_ln154_reg_1207;
wire   [7:0] trunc_ln155_fu_971_p1;
reg   [7:0] trunc_ln155_reg_1212;
wire   [7:0] trunc_ln156_fu_981_p1;
reg   [7:0] trunc_ln156_reg_1217;
wire    grp_sha256_transform_fu_514_ap_start;
wire    grp_sha256_transform_fu_514_ap_idle;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_0_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_1_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_2_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_3_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_4_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_5_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_6_read;
reg   [31:0] grp_sha256_transform_fu_514_ctx_state_7_read;
wire   [5:0] grp_sha256_transform_fu_514_data_address0;
wire    grp_sha256_transform_fu_514_data_ce0;
wire   [5:0] grp_sha256_transform_fu_514_data_address1;
wire    grp_sha256_transform_fu_514_data_ce1;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_0;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_1;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_2;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_3;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_4;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_5;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_6;
wire   [31:0] grp_sha256_transform_fu_514_ap_return_7;
reg   [31:0] i_1_in_reg_393;
wire   [0:0] icmp_ln122_fu_637_p2;
reg   [5:0] i_2_reg_402;
reg   [31:0] i_0_in_reg_413;
wire   [0:0] icmp_ln115_fu_830_p2;
reg   [31:0] ctx_state_0_0_reg_422;
reg   [31:0] ctx_state_1_0_reg_432;
reg   [31:0] ctx_state_2_0_reg_442;
reg   [31:0] ctx_state_3_0_reg_452;
reg   [31:0] ctx_state_4_0_reg_462;
reg   [31:0] ctx_state_5_0_reg_472;
reg   [31:0] ctx_state_6_0_reg_482;
reg   [31:0] ctx_state_7_0_reg_492;
reg   [2:0] i_3_reg_502;
wire    ap_CS_fsm_state14;
reg    grp_sha256_transform_fu_514_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln114_fu_616_p1;
wire   [63:0] zext_ln124_fu_643_p1;
wire   [63:0] zext_ln128_fu_660_p1;
wire   [63:0] zext_ln117_fu_836_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln150_fu_906_p1;
wire   [63:0] zext_ln151_fu_930_p1;
wire   [63:0] zext_ln149_fu_985_p1;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln152_fu_993_p1;
wire   [63:0] zext_ln153_fu_1006_p1;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln154_fu_1016_p1;
wire   [63:0] zext_ln155_fu_1024_p1;
wire   [63:0] zext_ln156_fu_1032_p1;
wire   [7:0] add_ln135_fu_752_p2;
wire   [7:0] trunc_ln150_fu_895_p1;
wire   [7:0] trunc_ln151_fu_917_p1;
wire   [25:0] tmp_2_fu_627_p4;
wire   [31:0] shl_ln134_fu_665_p2;
wire   [31:0] xor_ln134_fu_670_p2;
wire   [0:0] icmp_ln134_fu_676_p2;
wire   [31:0] add_ln134_fu_681_p2;
wire   [4:0] trunc_ln134_2_fu_696_p1;
wire   [12:0] trunc_ln134_4_fu_710_p1;
wire   [20:0] trunc_ln134_8_fu_724_p1;
wire   [23:0] trunc_ln134_7_fu_727_p3;
wire   [23:0] trunc_ln134_6_fu_721_p1;
wire   [15:0] trunc_ln134_5_fu_713_p3;
wire   [15:0] trunc_ln134_3_fu_707_p1;
wire   [7:0] trunc_ln134_fu_693_p1;
wire   [7:0] trunc_ln134_1_fu_699_p3;
wire   [15:0] add_ln135_2_fu_746_p2;
wire   [23:0] add_ln135_1_fu_740_p2;
wire   [31:0] add_ln134_1_fu_735_p2;
wire   [31:0] select_ln134_fu_686_p3;
wire   [1:0] trunc_ln149_fu_857_p1;
wire   [4:0] shl_ln1_fu_861_p3;
wire   [4:0] sub_ln149_fu_869_p2;
wire   [31:0] zext_ln149_1_fu_875_p1;
wire   [31:0] lshr_ln149_fu_879_p2;
wire   [31:0] lshr_ln150_fu_889_p2;
wire   [31:0] lshr_ln151_fu_911_p2;
wire   [31:0] lshr_ln152_fu_935_p2;
wire   [31:0] lshr_ln153_fu_945_p2;
wire   [31:0] lshr_ln154_fu_955_p2;
wire   [31:0] lshr_ln155_fu_965_p2;
wire   [31:0] lshr_ln156_fu_975_p2;
wire  signed [3:0] sext_ln152_fu_990_p1;
wire   [4:0] or_ln3_fu_998_p3;
wire   [4:0] add_ln154_fu_1011_p2;
wire  signed [4:0] sext_ln155_fu_1021_p1;
wire  signed [4:0] sext_ln156_fu_1029_p1;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_sha256_transform_fu_514_ap_start_reg = 1'b0;
end

sha256_transform grp_sha256_transform_fu_514(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha256_transform_fu_514_ap_start),
    .ap_done(grp_sha256_transform_fu_514_ap_done),
    .ap_idle(grp_sha256_transform_fu_514_ap_idle),
    .ap_ready(grp_sha256_transform_fu_514_ap_ready),
    .ctx_state_0_read(grp_sha256_transform_fu_514_ctx_state_0_read),
    .ctx_state_1_read(grp_sha256_transform_fu_514_ctx_state_1_read),
    .ctx_state_2_read(grp_sha256_transform_fu_514_ctx_state_2_read),
    .ctx_state_3_read(grp_sha256_transform_fu_514_ctx_state_3_read),
    .ctx_state_4_read(grp_sha256_transform_fu_514_ctx_state_4_read),
    .ctx_state_5_read(grp_sha256_transform_fu_514_ctx_state_5_read),
    .ctx_state_6_read(grp_sha256_transform_fu_514_ctx_state_6_read),
    .ctx_state_7_read(grp_sha256_transform_fu_514_ctx_state_7_read),
    .data_address0(grp_sha256_transform_fu_514_data_address0),
    .data_ce0(grp_sha256_transform_fu_514_data_ce0),
    .data_q0(ctx_data_q0),
    .data_address1(grp_sha256_transform_fu_514_data_address1),
    .data_ce1(grp_sha256_transform_fu_514_data_ce1),
    .data_q1(ctx_data_q1),
    .ap_return_0(grp_sha256_transform_fu_514_ap_return_0),
    .ap_return_1(grp_sha256_transform_fu_514_ap_return_1),
    .ap_return_2(grp_sha256_transform_fu_514_ap_return_2),
    .ap_return_3(grp_sha256_transform_fu_514_ap_return_3),
    .ap_return_4(grp_sha256_transform_fu_514_ap_return_4),
    .ap_return_5(grp_sha256_transform_fu_514_ap_return_5),
    .ap_return_6(grp_sha256_transform_fu_514_ap_return_6),
    .ap_return_7(grp_sha256_transform_fu_514_ap_return_7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha256_transform_fu_514_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd0)))) begin
            grp_sha256_transform_fu_514_ap_start_reg <= 1'b1;
        end else if ((grp_sha256_transform_fu_514_ap_ready == 1'b1)) begin
            grp_sha256_transform_fu_514_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_0_0_reg_422 <= p_read2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_0_0_reg_422 <= reg_570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_1_0_reg_432 <= p_read4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_1_0_reg_432 <= reg_575;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_2_0_reg_442 <= p_read5;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_2_0_reg_442 <= reg_580;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_3_0_reg_452 <= p_read6;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_3_0_reg_452 <= reg_585;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_4_0_reg_462 <= p_read7;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_4_0_reg_462 <= reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_5_0_reg_472 <= p_read8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_5_0_reg_472 <= reg_595;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_6_0_reg_482 <= p_read9;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_6_0_reg_482 <= reg_600;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
        ctx_state_7_0_reg_492 <= p_read10;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd1) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_state_7_0_reg_492 <= reg_605;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln113_fu_610_p2 == 1'd1))) begin
        i_0_in_reg_413 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd0))) begin
        i_0_in_reg_413 <= i_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln113_fu_610_p2 == 1'd0))) begin
        i_1_in_reg_393 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1))) begin
        i_1_in_reg_393 <= i_4_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd0) & (icmp_ln113_reg_1110 == 1'd0))) begin
        i_2_reg_402 <= i_5_fu_654_p2;
    end else if (((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_402 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_3_reg_502 <= i_6_reg_1176;
    end else if (((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_3_reg_502 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_6_reg_1176 <= i_6_fu_851_p2;
        zext_ln147_reg_1168[2 : 0] <= zext_ln147_fu_841_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln113_reg_1110 <= icmp_ln113_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd0))) begin
        or_ln_reg_1192[2 : 0] <= or_ln_fu_922_p3[2 : 0];
        trunc_ln149_1_reg_1181 <= trunc_ln149_1_fu_885_p1;
        trunc_ln152_reg_1197 <= trunc_ln152_fu_941_p1;
        trunc_ln153_reg_1202 <= trunc_ln153_fu_951_p1;
        trunc_ln154_reg_1207 <= trunc_ln154_fu_961_p1;
        trunc_ln155_reg_1212 <= trunc_ln155_fu_971_p1;
        trunc_ln156_reg_1217 <= trunc_ln156_fu_981_p1;
        xor_ln150_reg_1186 <= xor_ln150_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_570 <= grp_sha256_transform_fu_514_ap_return_0;
        reg_575 <= grp_sha256_transform_fu_514_ap_return_1;
        reg_580 <= grp_sha256_transform_fu_514_ap_return_2;
        reg_585 <= grp_sha256_transform_fu_514_ap_return_3;
        reg_590 <= grp_sha256_transform_fu_514_ap_return_4;
        reg_595 <= grp_sha256_transform_fu_514_ap_return_5;
        reg_600 <= grp_sha256_transform_fu_514_ap_return_6;
        reg_605 <= grp_sha256_transform_fu_514_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1)))) begin
        trunc_ln139_reg_1140 <= trunc_ln139_fu_790_p1;
        trunc_ln2_reg_1130 <= {{add_ln135_1_fu_740_p2[23:16]}};
        trunc_ln3_reg_1135 <= {{add_ln134_1_fu_735_p2[31:24]}};
        trunc_ln5_reg_1145 <= {{select_ln134_fu_686_p3[15:8]}};
        trunc_ln6_reg_1150 <= {{select_ln134_fu_686_p3[23:16]}};
        trunc_ln7_reg_1155 <= {{select_ln134_fu_686_p3[31:24]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address0 = 64'd60;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1)))) begin
        ctx_data_address0 = 64'd63;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd0) & (icmp_ln113_reg_1110 == 1'd0))) begin
        ctx_data_address0 = zext_ln128_fu_660_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1))) begin
        ctx_data_address0 = zext_ln124_fu_643_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_address0 = zext_ln114_fu_616_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_address0 = grp_sha256_transform_fu_514_data_address0;
    end else begin
        ctx_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_address1 = zext_ln117_fu_836_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_address1 = 64'd62;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_address1 = grp_sha256_transform_fu_514_data_address1;
    end else begin
        ctx_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1))) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd0) & (icmp_ln113_reg_1110 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1)))) begin
        ctx_data_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_ce0 = grp_sha256_transform_fu_514_data_ce0;
    end else begin
        ctx_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        ctx_data_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_ce1 = grp_sha256_transform_fu_514_data_ce1;
    end else begin
        ctx_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d0 = trunc_ln7_reg_1155;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d0 = trunc_ln5_reg_1145;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d0 = trunc_ln3_reg_1135;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1)))) begin
        ctx_data_d0 = add_ln135_fu_752_p2;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd0) & (icmp_ln113_reg_1110 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1)))) begin
        ctx_data_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_d0 = 8'd128;
    end else begin
        ctx_data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d1 = trunc_ln6_reg_1150;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d1 = trunc_ln139_reg_1140;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d1 = trunc_ln2_reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_d1 = {{add_ln135_2_fu_746_p2[15:8]}};
    end else begin
        ctx_data_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1))) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln127_fu_648_p2 == 1'd0) & (icmp_ln113_reg_1110 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1)))) begin
        ctx_data_we0 = 1'b1;
    end else begin
        ctx_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1))))) begin
        ctx_data_we1 = 1'b1;
    end else begin
        ctx_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_0_read = ctx_state_0_0_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_0_read = p_read2;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_1_read = ctx_state_1_0_reg_432;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_1_read = p_read4;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_2_read = ctx_state_2_0_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_2_read = p_read5;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_3_read = ctx_state_3_0_reg_452;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_3_read = p_read6;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_4_read = ctx_state_4_0_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_4_read = p_read7;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_5_read = ctx_state_5_0_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_5_read = p_read8;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_5_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_6_read = ctx_state_6_0_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_6_read = p_read9;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_6_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_514_ctx_state_7_read = ctx_state_7_0_reg_492;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_514_ctx_state_7_read = p_read10;
    end else begin
        grp_sha256_transform_fu_514_ctx_state_7_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address0 = zext_ln155_fu_1024_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address0 = zext_ln153_fu_1006_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address0 = zext_ln149_fu_985_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address0 = zext_ln150_fu_906_p1;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address1 = zext_ln156_fu_1032_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address1 = zext_ln154_fu_1016_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address1 = zext_ln152_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address1 = zext_ln151_fu_930_p1;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d0 = trunc_ln155_reg_1212;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d0 = trunc_ln153_reg_1202;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d0 = trunc_ln149_1_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_d0 = trunc_ln150_fu_895_p1;
    end else begin
        hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d1 = trunc_ln156_reg_1217;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d1 = trunc_ln154_reg_1207;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d1 = trunc_ln152_reg_1197;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_d1 = trunc_ln151_fu_917_p1;
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd0)))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd0)))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln113_fu_610_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln113_fu_610_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln122_fu_637_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln127_fu_648_p2 == 1'd1) | (icmp_ln113_reg_1110 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln115_fu_830_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_sha256_transform_fu_514_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln147_fu_845_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln134_1_fu_735_p2 = (ctx_bitlen_0_read + shl_ln134_fu_665_p2);

assign add_ln134_fu_681_p2 = (32'd1 + p_read3);

assign add_ln135_1_fu_740_p2 = (trunc_ln134_7_fu_727_p3 + trunc_ln134_6_fu_721_p1);

assign add_ln135_2_fu_746_p2 = (trunc_ln134_5_fu_713_p3 + trunc_ln134_3_fu_707_p1);

assign add_ln135_fu_752_p2 = (trunc_ln134_fu_693_p1 + trunc_ln134_1_fu_699_p3);

assign add_ln154_fu_1011_p2 = ($signed(5'd20) + $signed(zext_ln147_reg_1168));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_sha256_transform_fu_514_ap_start = grp_sha256_transform_fu_514_ap_start_reg;

assign i_4_fu_621_p2 = (i_1_in_reg_393 + 32'd1);

assign i_5_fu_654_p2 = (i_2_reg_402 + 6'd1);

assign i_6_fu_851_p2 = (i_3_reg_502 + 3'd1);

assign i_fu_824_p2 = (i_0_in_reg_413 + 32'd1);

assign icmp_ln113_fu_610_p2 = ((ctx_datalen_read < 32'd56) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_830_p2 = ((i_0_in_reg_413 == 32'd55) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_637_p2 = ((tmp_2_fu_627_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_648_p2 = ((i_2_reg_402 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_676_p2 = ((ctx_bitlen_0_read > xor_ln134_fu_670_p2) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_845_p2 = ((i_3_reg_502 == 3'd4) ? 1'b1 : 1'b0);

assign lshr_ln149_fu_879_p2 = reg_570 >> zext_ln149_1_fu_875_p1;

assign lshr_ln150_fu_889_p2 = reg_575 >> zext_ln149_1_fu_875_p1;

assign lshr_ln151_fu_911_p2 = reg_580 >> zext_ln149_1_fu_875_p1;

assign lshr_ln152_fu_935_p2 = reg_585 >> zext_ln149_1_fu_875_p1;

assign lshr_ln153_fu_945_p2 = reg_590 >> zext_ln149_1_fu_875_p1;

assign lshr_ln154_fu_955_p2 = reg_595 >> zext_ln149_1_fu_875_p1;

assign lshr_ln155_fu_965_p2 = reg_600 >> zext_ln149_1_fu_875_p1;

assign lshr_ln156_fu_975_p2 = reg_605 >> zext_ln149_1_fu_875_p1;

assign or_ln3_fu_998_p3 = {{2'd2}, {i_3_reg_502}};

assign or_ln_fu_922_p3 = {{1'd1}, {i_3_reg_502}};

assign select_ln134_fu_686_p3 = ((icmp_ln134_fu_676_p2[0:0] === 1'b1) ? add_ln134_fu_681_p2 : p_read3);

assign sext_ln152_fu_990_p1 = xor_ln150_reg_1186;

assign sext_ln155_fu_1021_p1 = or_ln_reg_1192;

assign sext_ln156_fu_1029_p1 = xor_ln150_reg_1186;

assign shl_ln134_fu_665_p2 = ctx_datalen_read << 32'd3;

assign shl_ln1_fu_861_p3 = {{trunc_ln149_fu_857_p1}, {3'd0}};

assign sub_ln149_fu_869_p2 = ($signed(5'd24) - $signed(shl_ln1_fu_861_p3));

assign tmp_2_fu_627_p4 = {{i_4_fu_621_p2[31:6]}};

assign trunc_ln134_1_fu_699_p3 = {{trunc_ln134_2_fu_696_p1}, {3'd0}};

assign trunc_ln134_2_fu_696_p1 = ctx_datalen_read[4:0];

assign trunc_ln134_3_fu_707_p1 = ctx_bitlen_0_read[15:0];

assign trunc_ln134_4_fu_710_p1 = ctx_datalen_read[12:0];

assign trunc_ln134_5_fu_713_p3 = {{trunc_ln134_4_fu_710_p1}, {3'd0}};

assign trunc_ln134_6_fu_721_p1 = ctx_bitlen_0_read[23:0];

assign trunc_ln134_7_fu_727_p3 = {{trunc_ln134_8_fu_724_p1}, {3'd0}};

assign trunc_ln134_8_fu_724_p1 = ctx_datalen_read[20:0];

assign trunc_ln134_fu_693_p1 = ctx_bitlen_0_read[7:0];

assign trunc_ln139_fu_790_p1 = select_ln134_fu_686_p3[7:0];

assign trunc_ln149_1_fu_885_p1 = lshr_ln149_fu_879_p2[7:0];

assign trunc_ln149_fu_857_p1 = i_3_reg_502[1:0];

assign trunc_ln150_fu_895_p1 = lshr_ln150_fu_889_p2[7:0];

assign trunc_ln151_fu_917_p1 = lshr_ln151_fu_911_p2[7:0];

assign trunc_ln152_fu_941_p1 = lshr_ln152_fu_935_p2[7:0];

assign trunc_ln153_fu_951_p1 = lshr_ln153_fu_945_p2[7:0];

assign trunc_ln154_fu_961_p1 = lshr_ln154_fu_955_p2[7:0];

assign trunc_ln155_fu_971_p1 = lshr_ln155_fu_965_p2[7:0];

assign trunc_ln156_fu_981_p1 = lshr_ln156_fu_975_p2[7:0];

assign xor_ln134_fu_670_p2 = (shl_ln134_fu_665_p2 ^ 32'd4294967295);

assign xor_ln150_fu_900_p2 = (i_3_reg_502 ^ 3'd4);

assign zext_ln114_fu_616_p1 = ctx_datalen_read;

assign zext_ln117_fu_836_p1 = i_fu_824_p2;

assign zext_ln124_fu_643_p1 = i_4_fu_621_p2;

assign zext_ln128_fu_660_p1 = i_2_reg_402;

assign zext_ln147_fu_841_p1 = i_3_reg_502;

assign zext_ln149_1_fu_875_p1 = sub_ln149_fu_869_p2;

assign zext_ln149_fu_985_p1 = i_3_reg_502;

assign zext_ln150_fu_906_p1 = $unsigned(xor_ln150_fu_900_p2);

assign zext_ln151_fu_930_p1 = $unsigned(or_ln_fu_922_p3);

assign zext_ln152_fu_993_p1 = $unsigned(sext_ln152_fu_990_p1);

assign zext_ln153_fu_1006_p1 = or_ln3_fu_998_p3;

assign zext_ln154_fu_1016_p1 = add_ln154_fu_1011_p2;

assign zext_ln155_fu_1024_p1 = $unsigned(sext_ln155_fu_1021_p1);

assign zext_ln156_fu_1032_p1 = $unsigned(sext_ln156_fu_1029_p1);

always @ (posedge ap_clk) begin
    zext_ln147_reg_1168[4:3] <= 2'b00;
    or_ln_reg_1192[3] <= 1'b1;
end

endmodule //sha256_final
