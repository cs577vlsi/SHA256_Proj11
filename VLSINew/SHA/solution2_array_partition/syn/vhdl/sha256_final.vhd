-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha256_final is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ctx_data_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_0_ce0 : OUT STD_LOGIC;
    ctx_data_0_we0 : OUT STD_LOGIC;
    ctx_data_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_0_ce1 : OUT STD_LOGIC;
    ctx_data_0_we1 : OUT STD_LOGIC;
    ctx_data_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_1_ce0 : OUT STD_LOGIC;
    ctx_data_1_we0 : OUT STD_LOGIC;
    ctx_data_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_1_ce1 : OUT STD_LOGIC;
    ctx_data_1_we1 : OUT STD_LOGIC;
    ctx_data_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_2_ce0 : OUT STD_LOGIC;
    ctx_data_2_we0 : OUT STD_LOGIC;
    ctx_data_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_2_ce1 : OUT STD_LOGIC;
    ctx_data_2_we1 : OUT STD_LOGIC;
    ctx_data_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_3_ce0 : OUT STD_LOGIC;
    ctx_data_3_we0 : OUT STD_LOGIC;
    ctx_data_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_data_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ctx_data_3_ce1 : OUT STD_LOGIC;
    ctx_data_3_we1 : OUT STD_LOGIC;
    ctx_data_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_datalen_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ctx_bitlen_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
    hash_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    hash_ce0 : OUT STD_LOGIC;
    hash_we0 : OUT STD_LOGIC;
    hash_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hash_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    hash_ce1 : OUT STD_LOGIC;
    hash_we1 : OUT STD_LOGIC;
    hash_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sha256_final is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_sha256_transform_fu_654_ap_ready : STD_LOGIC;
    signal grp_sha256_transform_fu_654_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal reg_721 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_726 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_731 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_741 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_746 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_751 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln113_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_5_fu_834_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln147_fu_1061_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln147_reg_1370 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_6_fu_1071_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_6_reg_1378 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln149_1_fu_1105_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln149_1_reg_1383 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln147_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln150_fu_1120_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln150_reg_1388 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln_fu_1142_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln_reg_1394 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln152_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln152_reg_1399 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln153_fu_1171_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln153_reg_1404 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln154_fu_1181_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln154_reg_1409 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln155_fu_1191_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln155_reg_1414 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln156_fu_1201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln156_reg_1419 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha256_transform_fu_654_ap_start : STD_LOGIC;
    signal grp_sha256_transform_fu_654_ap_idle : STD_LOGIC;
    signal grp_sha256_transform_fu_654_ctx_state_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_5_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_6_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ctx_state_7_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_data_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sha256_transform_fu_654_data_0_ce0 : STD_LOGIC;
    signal grp_sha256_transform_fu_654_data_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sha256_transform_fu_654_data_1_ce0 : STD_LOGIC;
    signal grp_sha256_transform_fu_654_data_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sha256_transform_fu_654_data_2_ce0 : STD_LOGIC;
    signal grp_sha256_transform_fu_654_data_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sha256_transform_fu_654_data_3_ce0 : STD_LOGIC;
    signal grp_sha256_transform_fu_654_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sha256_transform_fu_654_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_in_reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln122_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_542 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln127_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_in_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln115_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_state_0_0_reg_562 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_1_0_reg_572 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_2_0_reg_582 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_3_0_reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_4_0_reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_5_0_reg_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_6_0_reg_622 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_state_7_0_reg_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_642 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_sha256_transform_fu_654_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln114_fu_776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln128_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln117_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_1205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln152_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_fu_1226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln154_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln155_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln156_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln114_fu_762_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln124_fu_806_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln128_fu_840_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln117_fu_1039_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln135_fu_949_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_989_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln150_fu_1115_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_fu_1137_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_fu_766_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_790_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal lshr_ln4_fu_810_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lshr_ln5_fu_844_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln134_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln134_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln134_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln134_fu_878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln134_2_fu_893_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln134_4_fu_907_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln134_8_fu_921_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln134_7_fu_924_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln134_6_fu_918_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln134_5_fu_910_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln134_3_fu_904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln134_fu_890_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_1_fu_896_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln135_2_fu_943_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln135_1_fu_937_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln134_1_fu_932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln134_fu_883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln3_fu_1043_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln149_fu_1077_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln1_fu_1081_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln149_fu_1089_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln149_1_fu_1095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln149_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln150_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln151_fu_1131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln152_fu_1155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln153_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln154_fu_1175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln155_fu_1185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln156_fu_1195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln152_fu_1210_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln3_fu_1218_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln154_fu_1231_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln155_fu_1241_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln156_fu_1249_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);

    component sha256_transform IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_state_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctx_state_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_1_ce0 : OUT STD_LOGIC;
        data_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_2_ce0 : OUT STD_LOGIC;
        data_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_3_ce0 : OUT STD_LOGIC;
        data_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_sha256_transform_fu_654 : component sha256_transform
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha256_transform_fu_654_ap_start,
        ap_done => grp_sha256_transform_fu_654_ap_done,
        ap_idle => grp_sha256_transform_fu_654_ap_idle,
        ap_ready => grp_sha256_transform_fu_654_ap_ready,
        ctx_state_0_read => grp_sha256_transform_fu_654_ctx_state_0_read,
        ctx_state_1_read => grp_sha256_transform_fu_654_ctx_state_1_read,
        ctx_state_2_read => grp_sha256_transform_fu_654_ctx_state_2_read,
        ctx_state_3_read => grp_sha256_transform_fu_654_ctx_state_3_read,
        ctx_state_4_read => grp_sha256_transform_fu_654_ctx_state_4_read,
        ctx_state_5_read => grp_sha256_transform_fu_654_ctx_state_5_read,
        ctx_state_6_read => grp_sha256_transform_fu_654_ctx_state_6_read,
        ctx_state_7_read => grp_sha256_transform_fu_654_ctx_state_7_read,
        data_0_address0 => grp_sha256_transform_fu_654_data_0_address0,
        data_0_ce0 => grp_sha256_transform_fu_654_data_0_ce0,
        data_0_q0 => ctx_data_0_q0,
        data_1_address0 => grp_sha256_transform_fu_654_data_1_address0,
        data_1_ce0 => grp_sha256_transform_fu_654_data_1_ce0,
        data_1_q0 => ctx_data_1_q0,
        data_2_address0 => grp_sha256_transform_fu_654_data_2_address0,
        data_2_ce0 => grp_sha256_transform_fu_654_data_2_ce0,
        data_2_q0 => ctx_data_2_q0,
        data_3_address0 => grp_sha256_transform_fu_654_data_3_address0,
        data_3_ce0 => grp_sha256_transform_fu_654_data_3_ce0,
        data_3_q0 => ctx_data_3_q0,
        ap_return_0 => grp_sha256_transform_fu_654_ap_return_0,
        ap_return_1 => grp_sha256_transform_fu_654_ap_return_1,
        ap_return_2 => grp_sha256_transform_fu_654_ap_return_2,
        ap_return_3 => grp_sha256_transform_fu_654_ap_return_3,
        ap_return_4 => grp_sha256_transform_fu_654_ap_return_4,
        ap_return_5 => grp_sha256_transform_fu_654_ap_return_5,
        ap_return_6 => grp_sha256_transform_fu_654_ap_return_6,
        ap_return_7 => grp_sha256_transform_fu_654_ap_return_7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sha256_transform_fu_654_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sha256_transform_fu_654_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln122_fu_800_p2 = ap_const_lv1_0)))) then 
                    grp_sha256_transform_fu_654_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sha256_transform_fu_654_ap_ready = ap_const_logic_1)) then 
                    grp_sha256_transform_fu_654_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_state_0_0_reg_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_0_0_reg_562 <= p_read2;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_0_0_reg_562 <= reg_716;
            end if; 
        end if;
    end process;

    ctx_state_1_0_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_1_0_reg_572 <= p_read4;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_1_0_reg_572 <= reg_721;
            end if; 
        end if;
    end process;

    ctx_state_2_0_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_2_0_reg_582 <= p_read5;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_2_0_reg_582 <= reg_726;
            end if; 
        end if;
    end process;

    ctx_state_3_0_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_3_0_reg_592 <= p_read6;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_3_0_reg_592 <= reg_731;
            end if; 
        end if;
    end process;

    ctx_state_4_0_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_4_0_reg_602 <= p_read7;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_4_0_reg_602 <= reg_736;
            end if; 
        end if;
    end process;

    ctx_state_5_0_reg_612_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_5_0_reg_612 <= p_read8;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_5_0_reg_612 <= reg_741;
            end if; 
        end if;
    end process;

    ctx_state_6_0_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_6_0_reg_622 <= p_read9;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_6_0_reg_622 <= reg_746;
            end if; 
        end if;
    end process;

    ctx_state_7_0_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ctx_state_7_0_reg_632 <= p_read10;
            elsif (((icmp_ln127_fu_828_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                ctx_state_7_0_reg_632 <= reg_751;
            end if; 
        end if;
    end process;

    i_0_in_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln113_fu_756_p2 = ap_const_lv1_1))) then 
                i_0_in_reg_553 <= ctx_datalen_read;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln115_fu_1033_p2 = ap_const_lv1_0))) then 
                i_0_in_reg_553 <= i_fu_1027_p2;
            end if; 
        end if;
    end process;

    i_1_in_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln113_fu_756_p2 = ap_const_lv1_0))) then 
                i_1_in_reg_533 <= ctx_datalen_read;
            elsif (((icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_in_reg_533 <= i_4_fu_784_p2;
            end if; 
        end if;
    end process;

    i_2_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
                i_2_reg_542 <= i_5_fu_834_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1))) then 
                i_2_reg_542 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_3_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i_3_reg_642 <= i_6_reg_1378;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1))) then 
                i_3_reg_642 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_6_reg_1378 <= i_6_fu_1071_p2;
                    zext_ln147_reg_1370(2 downto 0) <= zext_ln147_fu_1061_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_ln113_reg_1330 <= icmp_ln113_fu_756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_0))) then
                    or_ln_reg_1394(2 downto 0) <= or_ln_fu_1142_p3(2 downto 0);
                trunc_ln149_1_reg_1383 <= trunc_ln149_1_fu_1105_p1;
                trunc_ln152_reg_1399 <= trunc_ln152_fu_1161_p1;
                trunc_ln153_reg_1404 <= trunc_ln153_fu_1171_p1;
                trunc_ln154_reg_1409 <= trunc_ln154_fu_1181_p1;
                trunc_ln155_reg_1414 <= trunc_ln155_fu_1191_p1;
                trunc_ln156_reg_1419 <= trunc_ln156_fu_1201_p1;
                xor_ln150_reg_1388 <= xor_ln150_fu_1120_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1)))) then
                reg_716 <= grp_sha256_transform_fu_654_ap_return_0;
                reg_721 <= grp_sha256_transform_fu_654_ap_return_1;
                reg_726 <= grp_sha256_transform_fu_654_ap_return_2;
                reg_731 <= grp_sha256_transform_fu_654_ap_return_3;
                reg_736 <= grp_sha256_transform_fu_654_ap_return_4;
                reg_741 <= grp_sha256_transform_fu_654_ap_return_5;
                reg_746 <= grp_sha256_transform_fu_654_ap_return_6;
                reg_751 <= grp_sha256_transform_fu_654_ap_return_7;
            end if;
        end if;
    end process;
    zext_ln147_reg_1370(4 downto 3) <= "00";
    or_ln_reg_1394(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, grp_sha256_transform_fu_654_ap_done, ap_CS_fsm_state7, icmp_ln113_fu_756_p2, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8, icmp_ln147_fu_1065_p2, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, icmp_ln115_fu_1033_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln113_fu_756_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln113_fu_756_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln115_fu_1033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_sha256_transform_fu_654_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln134_1_fu_932_p2 <= std_logic_vector(unsigned(ctx_bitlen_0_read) + unsigned(shl_ln134_fu_862_p2));
    add_ln134_fu_878_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(p_read3));
    add_ln135_1_fu_937_p2 <= std_logic_vector(unsigned(trunc_ln134_7_fu_924_p3) + unsigned(trunc_ln134_6_fu_918_p1));
    add_ln135_2_fu_943_p2 <= std_logic_vector(unsigned(trunc_ln134_5_fu_910_p3) + unsigned(trunc_ln134_3_fu_904_p1));
    add_ln135_fu_949_p2 <= std_logic_vector(unsigned(trunc_ln134_fu_890_p1) + unsigned(trunc_ln134_1_fu_896_p3));
    add_ln154_fu_1231_p2 <= std_logic_vector(signed(ap_const_lv5_14) + signed(zext_ln147_reg_1370));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8, icmp_ln147_fu_1065_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, icmp_ln147_fu_1065_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_0_address0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, zext_ln114_fu_776_p1, zext_ln124_fu_820_p1, zext_ln128_fu_854_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((trunc_ln128_fu_840_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
            ctx_data_0_address0 <= zext_ln128_fu_854_p1(4 - 1 downto 0);
        elsif (((trunc_ln124_fu_806_p1 = ap_const_lv2_3) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_data_0_address0 <= zext_ln124_fu_820_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_0_address0 <= zext_ln114_fu_776_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_0_address0 <= grp_sha256_transform_fu_654_data_0_address0;
        else 
            ctx_data_0_address0 <= "XXXX";
        end if; 
    end process;


    ctx_data_0_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln117_fu_1053_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_0_address1 <= zext_ln117_fu_1053_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_0_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        else 
            ctx_data_0_address1 <= "XXXX";
        end if; 
    end process;


    ctx_data_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_0_ce0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_3) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_0_ce0 <= grp_sha256_transform_fu_654_data_0_ce0;
        else 
            ctx_data_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_0_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ctx_data_0_ce1 <= ap_const_logic_1;
        else 
            ctx_data_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_0_d0_assign_proc : process(ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1, add_ln134_1_fu_932_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_0_d0 <= add_ln134_1_fu_932_p2(31 downto 24);
        elsif ((((trunc_ln128_fu_840_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_3) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_0_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_0_d0 <= ap_const_lv8_80;
        else 
            ctx_data_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_0_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, select_ln134_fu_883_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_0_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_0_d1 <= select_ln134_fu_883_p3(31 downto 24);
        else 
            ctx_data_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln114_fu_762_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((trunc_ln114_fu_762_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_3) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_0_we0 <= ap_const_logic_1;
        else 
            ctx_data_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_0_we1_assign_proc : process(icmp_ln113_reg_1330, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln127_fu_828_p2, icmp_ln115_fu_1033_p2, trunc_ln117_fu_1039_p1)
    begin
        if ((((trunc_ln117_fu_1039_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln115_fu_1033_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))))) then 
            ctx_data_0_we1 <= ap_const_logic_1;
        else 
            ctx_data_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_1_address0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, zext_ln114_fu_776_p1, zext_ln124_fu_820_p1, zext_ln128_fu_854_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((trunc_ln128_fu_840_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
            ctx_data_1_address0 <= zext_ln128_fu_854_p1(4 - 1 downto 0);
        elsif (((trunc_ln124_fu_806_p1 = ap_const_lv2_0) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_data_1_address0 <= zext_ln124_fu_820_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_1_address0 <= zext_ln114_fu_776_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_1_address0 <= grp_sha256_transform_fu_654_data_1_address0;
        else 
            ctx_data_1_address0 <= "XXXX";
        end if; 
    end process;


    ctx_data_1_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln117_fu_1053_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_1_address1 <= zext_ln117_fu_1053_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_1_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        else 
            ctx_data_1_address1 <= "XXXX";
        end if; 
    end process;


    ctx_data_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_1_ce0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_0) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_1_ce0 <= grp_sha256_transform_fu_654_data_1_ce0;
        else 
            ctx_data_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_1_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ctx_data_1_ce1 <= ap_const_logic_1;
        else 
            ctx_data_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_1_d0_assign_proc : process(ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1, add_ln135_1_fu_937_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_1_d0 <= add_ln135_1_fu_937_p2(23 downto 16);
        elsif ((((trunc_ln128_fu_840_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_0) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_1_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_1_d0 <= ap_const_lv8_80;
        else 
            ctx_data_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_1_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, select_ln134_fu_883_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_1_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_1_d1 <= select_ln134_fu_883_p3(23 downto 16);
        else 
            ctx_data_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_1_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln114_fu_762_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((trunc_ln114_fu_762_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_0) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_1_we0 <= ap_const_logic_1;
        else 
            ctx_data_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_1_we1_assign_proc : process(icmp_ln113_reg_1330, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln127_fu_828_p2, icmp_ln115_fu_1033_p2, trunc_ln117_fu_1039_p1)
    begin
        if ((((trunc_ln117_fu_1039_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln115_fu_1033_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))))) then 
            ctx_data_1_we1 <= ap_const_logic_1;
        else 
            ctx_data_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_2_address0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, zext_ln114_fu_776_p1, zext_ln124_fu_820_p1, zext_ln128_fu_854_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_2_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((trunc_ln128_fu_840_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
            ctx_data_2_address0 <= zext_ln128_fu_854_p1(4 - 1 downto 0);
        elsif (((trunc_ln124_fu_806_p1 = ap_const_lv2_1) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_data_2_address0 <= zext_ln124_fu_820_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_2_address0 <= zext_ln114_fu_776_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_2_address0 <= grp_sha256_transform_fu_654_data_2_address0;
        else 
            ctx_data_2_address0 <= "XXXX";
        end if; 
    end process;


    ctx_data_2_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln117_fu_1053_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_2_address1 <= zext_ln117_fu_1053_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_2_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        else 
            ctx_data_2_address1 <= "XXXX";
        end if; 
    end process;


    ctx_data_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_2_ce0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_1) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_2_ce0 <= grp_sha256_transform_fu_654_data_2_ce0;
        else 
            ctx_data_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_2_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ctx_data_2_ce1 <= ap_const_logic_1;
        else 
            ctx_data_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_2_d0_assign_proc : process(ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1, add_ln135_2_fu_943_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_2_d0 <= add_ln135_2_fu_943_p2(15 downto 8);
        elsif ((((trunc_ln128_fu_840_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_1) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_2_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_2_d0 <= ap_const_lv8_80;
        else 
            ctx_data_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_2_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, select_ln134_fu_883_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_2_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_2_d1 <= select_ln134_fu_883_p3(15 downto 8);
        else 
            ctx_data_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_2_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln114_fu_762_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((trunc_ln114_fu_762_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_1) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_2_we0 <= ap_const_logic_1;
        else 
            ctx_data_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_2_we1_assign_proc : process(icmp_ln113_reg_1330, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln127_fu_828_p2, icmp_ln115_fu_1033_p2, trunc_ln117_fu_1039_p1)
    begin
        if ((((trunc_ln117_fu_1039_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln115_fu_1033_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))))) then 
            ctx_data_2_we1 <= ap_const_logic_1;
        else 
            ctx_data_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_3_address0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, zext_ln114_fu_776_p1, zext_ln124_fu_820_p1, zext_ln128_fu_854_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_3_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((trunc_ln128_fu_840_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0))) then 
            ctx_data_3_address0 <= zext_ln128_fu_854_p1(4 - 1 downto 0);
        elsif (((trunc_ln124_fu_806_p1 = ap_const_lv2_2) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_data_3_address0 <= zext_ln124_fu_820_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_3_address0 <= zext_ln114_fu_776_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_3_address0 <= grp_sha256_transform_fu_654_data_3_address0;
        else 
            ctx_data_3_address0 <= "XXXX";
        end if; 
    end process;


    ctx_data_3_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln117_fu_1053_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_3_address1 <= zext_ln117_fu_1053_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_3_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        else 
            ctx_data_3_address1 <= "XXXX";
        end if; 
    end process;


    ctx_data_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_sha256_transform_fu_654_data_3_ce0, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_2) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_data_3_ce0 <= grp_sha256_transform_fu_654_data_3_ce0;
        else 
            ctx_data_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_3_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ctx_data_3_ce1 <= ap_const_logic_1;
        else 
            ctx_data_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_3_d0_assign_proc : process(ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1, add_ln135_fu_949_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1)))) then 
            ctx_data_3_d0 <= add_ln135_fu_949_p2;
        elsif ((((trunc_ln128_fu_840_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_2) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_3_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ctx_data_3_d0 <= ap_const_lv8_80;
        else 
            ctx_data_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_3_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, trunc_ln139_fu_989_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_data_3_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ctx_data_3_d1 <= trunc_ln139_fu_989_p1;
        else 
            ctx_data_3_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_data_3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln113_reg_1330, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln122_fu_800_p2, icmp_ln127_fu_828_p2, trunc_ln114_fu_762_p1, trunc_ln124_fu_806_p1, trunc_ln128_fu_840_p1)
    begin
        if ((((trunc_ln114_fu_762_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))) or ((trunc_ln128_fu_840_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln127_fu_828_p2 = ap_const_lv1_0) and (icmp_ln113_reg_1330 = ap_const_lv1_0)) or ((trunc_ln124_fu_806_p1 = ap_const_lv2_2) and (icmp_ln122_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_data_3_we0 <= ap_const_logic_1;
        else 
            ctx_data_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_data_3_we1_assign_proc : process(icmp_ln113_reg_1330, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln127_fu_828_p2, icmp_ln115_fu_1033_p2, trunc_ln117_fu_1039_p1)
    begin
        if ((((trunc_ln117_fu_1039_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln115_fu_1033_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln127_fu_828_p2 = ap_const_lv1_1) or (icmp_ln113_reg_1330 = ap_const_lv1_1))))) then 
            ctx_data_3_we1 <= ap_const_logic_1;
        else 
            ctx_data_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_sha256_transform_fu_654_ap_start <= grp_sha256_transform_fu_654_ap_start_reg;

    grp_sha256_transform_fu_654_ctx_state_0_read_assign_proc : process(p_read2, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_0_0_reg_562)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_0_read <= ctx_state_0_0_reg_562;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_0_read <= p_read2;
        else 
            grp_sha256_transform_fu_654_ctx_state_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_1_read_assign_proc : process(p_read4, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_1_0_reg_572)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_1_read <= ctx_state_1_0_reg_572;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_1_read <= p_read4;
        else 
            grp_sha256_transform_fu_654_ctx_state_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_2_read_assign_proc : process(p_read5, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_2_0_reg_582)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_2_read <= ctx_state_2_0_reg_582;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_2_read <= p_read5;
        else 
            grp_sha256_transform_fu_654_ctx_state_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_3_read_assign_proc : process(p_read6, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_3_0_reg_592)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_3_read <= ctx_state_3_0_reg_592;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_3_read <= p_read6;
        else 
            grp_sha256_transform_fu_654_ctx_state_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_4_read_assign_proc : process(p_read7, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_4_0_reg_602)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_4_read <= ctx_state_4_0_reg_602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_4_read <= p_read7;
        else 
            grp_sha256_transform_fu_654_ctx_state_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_5_read_assign_proc : process(p_read8, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_5_0_reg_612)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_5_read <= ctx_state_5_0_reg_612;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_5_read <= p_read8;
        else 
            grp_sha256_transform_fu_654_ctx_state_5_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_6_read_assign_proc : process(p_read9, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_6_0_reg_622)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_6_read <= ctx_state_6_0_reg_622;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_6_read <= p_read9;
        else 
            grp_sha256_transform_fu_654_ctx_state_6_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sha256_transform_fu_654_ctx_state_7_read_assign_proc : process(p_read10, ap_CS_fsm_state3, ap_CS_fsm_state7, ctx_state_7_0_reg_632)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_sha256_transform_fu_654_ctx_state_7_read <= ctx_state_7_0_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_sha256_transform_fu_654_ctx_state_7_read <= p_read10;
        else 
            grp_sha256_transform_fu_654_ctx_state_7_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hash_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, zext_ln150_fu_1126_p1, zext_ln149_fu_1205_p1, ap_CS_fsm_state9, zext_ln153_fu_1226_p1, ap_CS_fsm_state10, zext_ln155_fu_1244_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            hash_address0 <= zext_ln155_fu_1244_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hash_address0 <= zext_ln153_fu_1226_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hash_address0 <= zext_ln149_fu_1205_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            hash_address0 <= zext_ln150_fu_1126_p1(6 - 1 downto 0);
        else 
            hash_address0 <= "XXXXXX";
        end if; 
    end process;


    hash_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, zext_ln151_fu_1150_p1, ap_CS_fsm_state9, zext_ln152_fu_1213_p1, ap_CS_fsm_state10, zext_ln154_fu_1236_p1, zext_ln156_fu_1252_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            hash_address1 <= zext_ln156_fu_1252_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hash_address1 <= zext_ln154_fu_1236_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hash_address1 <= zext_ln152_fu_1213_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            hash_address1 <= zext_ln151_fu_1150_p1(6 - 1 downto 0);
        else 
            hash_address1 <= "XXXXXX";
        end if; 
    end process;


    hash_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            hash_ce0 <= ap_const_logic_1;
        else 
            hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hash_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            hash_ce1 <= ap_const_logic_1;
        else 
            hash_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hash_d0_assign_proc : process(ap_CS_fsm_state8, trunc_ln149_1_reg_1383, trunc_ln153_reg_1404, trunc_ln155_reg_1414, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10, trunc_ln150_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            hash_d0 <= trunc_ln155_reg_1414;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hash_d0 <= trunc_ln153_reg_1404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hash_d0 <= trunc_ln149_1_reg_1383;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            hash_d0 <= trunc_ln150_fu_1115_p1;
        else 
            hash_d0 <= "XXXXXXXX";
        end if; 
    end process;


    hash_d1_assign_proc : process(ap_CS_fsm_state8, trunc_ln152_reg_1399, trunc_ln154_reg_1409, trunc_ln156_reg_1419, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10, trunc_ln151_fu_1137_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            hash_d1 <= trunc_ln156_reg_1419;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hash_d1 <= trunc_ln154_reg_1409;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hash_d1 <= trunc_ln152_reg_1399;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            hash_d1 <= trunc_ln151_fu_1137_p1;
        else 
            hash_d1 <= "XXXXXXXX";
        end if; 
    end process;


    hash_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln147_fu_1065_p2, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_0)))) then 
            hash_we0 <= ap_const_logic_1;
        else 
            hash_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hash_we1_assign_proc : process(ap_CS_fsm_state8, icmp_ln147_fu_1065_p2, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln147_fu_1065_p2 = ap_const_lv1_0)))) then 
            hash_we1 <= ap_const_logic_1;
        else 
            hash_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_4_fu_784_p2 <= std_logic_vector(unsigned(i_1_in_reg_533) + unsigned(ap_const_lv32_1));
    i_5_fu_834_p2 <= std_logic_vector(unsigned(i_2_reg_542) + unsigned(ap_const_lv6_1));
    i_6_fu_1071_p2 <= std_logic_vector(unsigned(i_3_reg_642) + unsigned(ap_const_lv3_1));
    i_fu_1027_p2 <= std_logic_vector(unsigned(i_0_in_reg_553) + unsigned(ap_const_lv32_1));
    icmp_ln113_fu_756_p2 <= "1" when (unsigned(ctx_datalen_read) < unsigned(ap_const_lv32_38)) else "0";
    icmp_ln115_fu_1033_p2 <= "1" when (i_0_in_reg_553 = ap_const_lv32_37) else "0";
    icmp_ln122_fu_800_p2 <= "1" when (tmp_2_fu_790_p4 = ap_const_lv26_0) else "0";
    icmp_ln127_fu_828_p2 <= "1" when (i_2_reg_542 = ap_const_lv6_38) else "0";
    icmp_ln134_fu_873_p2 <= "1" when (unsigned(ctx_bitlen_0_read) > unsigned(xor_ln134_fu_867_p2)) else "0";
    icmp_ln147_fu_1065_p2 <= "1" when (i_3_reg_642 = ap_const_lv3_4) else "0";
    lshr_ln149_fu_1099_p2 <= std_logic_vector(shift_right(unsigned(reg_716),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln150_fu_1109_p2 <= std_logic_vector(shift_right(unsigned(reg_721),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln151_fu_1131_p2 <= std_logic_vector(shift_right(unsigned(reg_726),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln152_fu_1155_p2 <= std_logic_vector(shift_right(unsigned(reg_731),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln153_fu_1165_p2 <= std_logic_vector(shift_right(unsigned(reg_736),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln154_fu_1175_p2 <= std_logic_vector(shift_right(unsigned(reg_741),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln155_fu_1185_p2 <= std_logic_vector(shift_right(unsigned(reg_746),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln156_fu_1195_p2 <= std_logic_vector(shift_right(unsigned(reg_751),to_integer(unsigned('0' & zext_ln149_1_fu_1095_p1(31-1 downto 0)))));
    lshr_ln3_fu_1043_p4 <= i_fu_1027_p2(31 downto 2);
    lshr_ln4_fu_810_p4 <= i_4_fu_784_p2(31 downto 2);
    lshr_ln5_fu_844_p4 <= i_2_reg_542(5 downto 2);
    lshr_ln_fu_766_p4 <= ctx_datalen_read(31 downto 2);
    or_ln3_fu_1218_p3 <= (ap_const_lv2_2 & i_3_reg_642);
    or_ln_fu_1142_p3 <= (ap_const_lv1_1 & i_3_reg_642);
    select_ln134_fu_883_p3 <= 
        add_ln134_fu_878_p2 when (icmp_ln134_fu_873_p2(0) = '1') else 
        p_read3;
        sext_ln152_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln150_reg_1388),4));

        sext_ln155_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln_reg_1394),5));

        sext_ln156_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln150_reg_1388),5));

    shl_ln134_fu_862_p2 <= std_logic_vector(shift_left(unsigned(ctx_datalen_read),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln1_fu_1081_p3 <= (trunc_ln149_fu_1077_p1 & ap_const_lv3_0);
    sub_ln149_fu_1089_p2 <= std_logic_vector(signed(ap_const_lv5_18) - signed(shl_ln1_fu_1081_p3));
    tmp_2_fu_790_p4 <= i_4_fu_784_p2(31 downto 6);
    trunc_ln114_fu_762_p1 <= ctx_datalen_read(2 - 1 downto 0);
    trunc_ln117_fu_1039_p1 <= i_0_in_reg_553(2 - 1 downto 0);
    trunc_ln124_fu_806_p1 <= i_1_in_reg_533(2 - 1 downto 0);
    trunc_ln128_fu_840_p1 <= i_2_reg_542(2 - 1 downto 0);
    trunc_ln134_1_fu_896_p3 <= (trunc_ln134_2_fu_893_p1 & ap_const_lv3_0);
    trunc_ln134_2_fu_893_p1 <= ctx_datalen_read(5 - 1 downto 0);
    trunc_ln134_3_fu_904_p1 <= ctx_bitlen_0_read(16 - 1 downto 0);
    trunc_ln134_4_fu_907_p1 <= ctx_datalen_read(13 - 1 downto 0);
    trunc_ln134_5_fu_910_p3 <= (trunc_ln134_4_fu_907_p1 & ap_const_lv3_0);
    trunc_ln134_6_fu_918_p1 <= ctx_bitlen_0_read(24 - 1 downto 0);
    trunc_ln134_7_fu_924_p3 <= (trunc_ln134_8_fu_921_p1 & ap_const_lv3_0);
    trunc_ln134_8_fu_921_p1 <= ctx_datalen_read(21 - 1 downto 0);
    trunc_ln134_fu_890_p1 <= ctx_bitlen_0_read(8 - 1 downto 0);
    trunc_ln139_fu_989_p1 <= select_ln134_fu_883_p3(8 - 1 downto 0);
    trunc_ln149_1_fu_1105_p1 <= lshr_ln149_fu_1099_p2(8 - 1 downto 0);
    trunc_ln149_fu_1077_p1 <= i_3_reg_642(2 - 1 downto 0);
    trunc_ln150_fu_1115_p1 <= lshr_ln150_fu_1109_p2(8 - 1 downto 0);
    trunc_ln151_fu_1137_p1 <= lshr_ln151_fu_1131_p2(8 - 1 downto 0);
    trunc_ln152_fu_1161_p1 <= lshr_ln152_fu_1155_p2(8 - 1 downto 0);
    trunc_ln153_fu_1171_p1 <= lshr_ln153_fu_1165_p2(8 - 1 downto 0);
    trunc_ln154_fu_1181_p1 <= lshr_ln154_fu_1175_p2(8 - 1 downto 0);
    trunc_ln155_fu_1191_p1 <= lshr_ln155_fu_1185_p2(8 - 1 downto 0);
    trunc_ln156_fu_1201_p1 <= lshr_ln156_fu_1195_p2(8 - 1 downto 0);
    xor_ln134_fu_867_p2 <= (shl_ln134_fu_862_p2 xor ap_const_lv32_FFFFFFFF);
    xor_ln150_fu_1120_p2 <= (i_3_reg_642 xor ap_const_lv3_4);
    zext_ln114_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_766_p4),64));
    zext_ln117_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_1043_p4),64));
    zext_ln124_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_fu_810_p4),64));
    zext_ln128_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_844_p4),64));
    zext_ln147_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_642),5));
    zext_ln149_1_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln149_fu_1089_p2),32));
    zext_ln149_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_642),64));
    zext_ln150_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_fu_1120_p2),64));
    zext_ln151_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_1142_p3),64));
    zext_ln152_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln152_fu_1210_p1),64));
    zext_ln153_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3_fu_1218_p3),64));
    zext_ln154_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln154_fu_1231_p2),64));
    zext_ln155_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln155_fu_1241_p1),64));
    zext_ln156_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln156_fu_1249_p1),64));
end behav;
