// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_transform_HH_
#define _sha256_transform_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform_k.h"
#include "sha256_transform_m.h"

namespace ap_rtl {

struct sha256_transform : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > ctx_state_0_read;
    sc_in< sc_lv<32> > ctx_state_1_read;
    sc_in< sc_lv<32> > ctx_state_2_read;
    sc_in< sc_lv<32> > ctx_state_3_read;
    sc_in< sc_lv<32> > ctx_state_4_read;
    sc_in< sc_lv<32> > ctx_state_5_read;
    sc_in< sc_lv<32> > ctx_state_6_read;
    sc_in< sc_lv<32> > ctx_state_7_read;
    sc_out< sc_lv<4> > data_0_address0;
    sc_out< sc_logic > data_0_ce0;
    sc_in< sc_lv<8> > data_0_q0;
    sc_out< sc_lv<4> > data_1_address0;
    sc_out< sc_logic > data_1_ce0;
    sc_in< sc_lv<8> > data_1_q0;
    sc_out< sc_lv<4> > data_2_address0;
    sc_out< sc_logic > data_2_ce0;
    sc_in< sc_lv<8> > data_2_q0;
    sc_out< sc_lv<4> > data_3_address0;
    sc_out< sc_logic > data_3_ce0;
    sc_in< sc_lv<8> > data_3_q0;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;


    // Module declarations
    sha256_transform(sc_module_name name);
    SC_HAS_PROCESS(sha256_transform);

    ~sha256_transform();

    sc_trace_file* mVcdFile;

    sha256_transform_k* k_U;
    sha256_transform_m* m_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > k_address0;
    sc_signal< sc_logic > k_ce0;
    sc_signal< sc_lv<32> > k_q0;
    sc_signal< sc_lv<32> > m_q0;
    sc_signal< sc_lv<32> > reg_432;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > add_ln34_fu_442_p2;
    sc_signal< sc_lv<5> > add_ln34_reg_1086;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln36_fu_448_p1;
    sc_signal< sc_lv<64> > zext_ln36_reg_1091;
    sc_signal< sc_lv<1> > icmp_ln34_fu_436_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln38_fu_469_p2;
    sc_signal< sc_lv<32> > m_q1;
    sc_signal< sc_lv<32> > m_load_1_reg_1129;
    sc_signal< sc_lv<32> > add_ln40_5_fu_659_p2;
    sc_signal< sc_lv<32> > add_ln40_5_reg_1144;
    sc_signal< sc_lv<7> > i_fu_681_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > i_3_fu_693_p2;
    sc_signal< sc_lv<7> > i_3_reg_1157;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln51_fu_687_p2;
    sc_signal< sc_lv<32> > add_ln53_2_fu_813_p2;
    sc_signal< sc_lv<32> > add_ln53_2_reg_1172;
    sc_signal< sc_lv<32> > xor_ln54_3_fu_837_p2;
    sc_signal< sc_lv<32> > xor_ln54_3_reg_1177;
    sc_signal< sc_lv<32> > t1_fu_937_p2;
    sc_signal< sc_lv<32> > t1_reg_1182;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > e_fu_1020_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > a_fu_1029_p2;
    sc_signal< sc_lv<6> > m_address0;
    sc_signal< sc_logic > m_ce0;
    sc_signal< sc_logic > m_we0;
    sc_signal< sc_lv<32> > m_d0;
    sc_signal< sc_lv<6> > m_address1;
    sc_signal< sc_logic > m_ce1;
    sc_signal< sc_logic > m_we1;
    sc_signal< sc_lv<32> > m_d1;
    sc_signal< sc_lv<5> > i_0_reg_313;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > i_1_reg_324;
    sc_signal< sc_lv<32> > h_reg_345;
    sc_signal< sc_lv<32> > h_0_reg_336;
    sc_signal< sc_lv<32> > g_reg_356;
    sc_signal< sc_lv<32> > f_reg_367;
    sc_signal< sc_lv<32> > d_reg_388;
    sc_signal< sc_lv<32> > d_0_reg_378;
    sc_signal< sc_lv<32> > c_reg_399;
    sc_signal< sc_lv<32> > b_reg_410;
    sc_signal< sc_lv<7> > i_2_reg_421;
    sc_signal< sc_lv<64> > zext_ln40_fu_481_p1;
    sc_signal< sc_lv<64> > zext_ln40_1_fu_492_p1;
    sc_signal< sc_lv<64> > zext_ln40_2_fu_503_p1;
    sc_signal< sc_lv<64> > zext_ln40_3_fu_514_p1;
    sc_signal< sc_lv<64> > zext_ln40_4_fu_676_p1;
    sc_signal< sc_lv<64> > zext_ln53_fu_801_p1;
    sc_signal< sc_lv<7> > add_ln40_fu_475_p2;
    sc_signal< sc_lv<7> > add_ln40_1_fu_486_p2;
    sc_signal< sc_lv<7> > add_ln40_2_fu_497_p2;
    sc_signal< sc_lv<7> > add_ln40_3_fu_508_p2;
    sc_signal< sc_lv<17> > trunc_ln40_fu_529_p1;
    sc_signal< sc_lv<15> > lshr_ln_fu_519_p4;
    sc_signal< sc_lv<19> > trunc_ln40_1_fu_551_p1;
    sc_signal< sc_lv<13> > lshr_ln40_1_fu_541_p4;
    sc_signal< sc_lv<22> > lshr_ln40_2_fu_563_p4;
    sc_signal< sc_lv<32> > zext_ln40_5_fu_573_p1;
    sc_signal< sc_lv<32> > or_ln40_1_fu_555_p3;
    sc_signal< sc_lv<32> > xor_ln40_fu_577_p2;
    sc_signal< sc_lv<32> > or_ln_fu_533_p3;
    sc_signal< sc_lv<7> > trunc_ln40_2_fu_599_p1;
    sc_signal< sc_lv<25> > lshr_ln40_3_fu_589_p4;
    sc_signal< sc_lv<18> > trunc_ln40_3_fu_621_p1;
    sc_signal< sc_lv<14> > lshr_ln40_4_fu_611_p4;
    sc_signal< sc_lv<29> > lshr_ln40_5_fu_633_p4;
    sc_signal< sc_lv<32> > zext_ln40_6_fu_643_p1;
    sc_signal< sc_lv<32> > or_ln40_3_fu_625_p3;
    sc_signal< sc_lv<32> > xor_ln40_2_fu_647_p2;
    sc_signal< sc_lv<32> > or_ln40_2_fu_603_p3;
    sc_signal< sc_lv<32> > xor_ln40_1_fu_583_p2;
    sc_signal< sc_lv<32> > xor_ln40_3_fu_653_p2;
    sc_signal< sc_lv<32> > add_ln40_4_fu_665_p2;
    sc_signal< sc_lv<6> > trunc_ln53_fu_709_p1;
    sc_signal< sc_lv<26> > lshr_ln1_fu_699_p4;
    sc_signal< sc_lv<11> > trunc_ln53_1_fu_731_p1;
    sc_signal< sc_lv<21> > lshr_ln53_1_fu_721_p4;
    sc_signal< sc_lv<25> > trunc_ln53_2_fu_753_p1;
    sc_signal< sc_lv<7> > lshr_ln53_2_fu_743_p4;
    sc_signal< sc_lv<32> > or_ln1_fu_713_p3;
    sc_signal< sc_lv<32> > or_ln53_1_fu_735_p3;
    sc_signal< sc_lv<32> > xor_ln53_fu_765_p2;
    sc_signal< sc_lv<32> > or_ln53_2_fu_757_p3;
    sc_signal< sc_lv<32> > xor_ln53_2_fu_783_p2;
    sc_signal< sc_lv<32> > and_ln53_fu_777_p2;
    sc_signal< sc_lv<32> > and_ln53_1_fu_789_p2;
    sc_signal< sc_lv<32> > xor_ln53_1_fu_771_p2;
    sc_signal< sc_lv<32> > xor_ln53_3_fu_795_p2;
    sc_signal< sc_lv<32> > add_ln53_1_fu_807_p2;
    sc_signal< sc_lv<32> > xor_ln54_2_fu_819_p2;
    sc_signal< sc_lv<32> > and_ln54_fu_825_p2;
    sc_signal< sc_lv<32> > and_ln54_1_fu_831_p2;
    sc_signal< sc_lv<32> > add_ln65_fu_843_p2;
    sc_signal< sc_lv<32> > add_ln66_fu_848_p2;
    sc_signal< sc_lv<32> > add_ln67_fu_853_p2;
    sc_signal< sc_lv<32> > add_ln68_fu_858_p2;
    sc_signal< sc_lv<32> > add_ln69_fu_863_p2;
    sc_signal< sc_lv<32> > add_ln70_fu_868_p2;
    sc_signal< sc_lv<32> > add_ln71_fu_873_p2;
    sc_signal< sc_lv<32> > add_ln72_fu_878_p2;
    sc_signal< sc_lv<32> > add_ln53_fu_931_p2;
    sc_signal< sc_lv<2> > trunc_ln54_fu_952_p1;
    sc_signal< sc_lv<30> > lshr_ln2_fu_942_p4;
    sc_signal< sc_lv<13> > trunc_ln54_1_fu_974_p1;
    sc_signal< sc_lv<19> > lshr_ln54_1_fu_964_p4;
    sc_signal< sc_lv<22> > trunc_ln54_2_fu_996_p1;
    sc_signal< sc_lv<10> > lshr_ln54_2_fu_986_p4;
    sc_signal< sc_lv<32> > or_ln2_fu_956_p3;
    sc_signal< sc_lv<32> > or_ln54_1_fu_978_p3;
    sc_signal< sc_lv<32> > xor_ln54_fu_1008_p2;
    sc_signal< sc_lv<32> > or_ln54_2_fu_1000_p3;
    sc_signal< sc_lv<32> > add_ln62_fu_1025_p2;
    sc_signal< sc_lv<32> > xor_ln54_1_fu_1014_p2;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    sc_signal< sc_lv<32> > ap_return_2_preg;
    sc_signal< sc_lv<32> > ap_return_3_preg;
    sc_signal< sc_lv<32> > ap_return_4_preg;
    sc_signal< sc_lv<32> > ap_return_5_preg;
    sc_signal< sc_lv<32> > ap_return_6_preg;
    sc_signal< sc_lv<32> > ap_return_7_preg;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_10;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_7E;
    static const sc_lv<7> ap_const_lv7_79;
    static const sc_lv<7> ap_const_lv7_71;
    static const sc_lv<7> ap_const_lv7_70;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_16;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_fu_1029_p2();
    void thread_add_ln34_fu_442_p2();
    void thread_add_ln40_1_fu_486_p2();
    void thread_add_ln40_2_fu_497_p2();
    void thread_add_ln40_3_fu_508_p2();
    void thread_add_ln40_4_fu_665_p2();
    void thread_add_ln40_5_fu_659_p2();
    void thread_add_ln40_fu_475_p2();
    void thread_add_ln53_1_fu_807_p2();
    void thread_add_ln53_2_fu_813_p2();
    void thread_add_ln53_fu_931_p2();
    void thread_add_ln62_fu_1025_p2();
    void thread_add_ln65_fu_843_p2();
    void thread_add_ln66_fu_848_p2();
    void thread_add_ln67_fu_853_p2();
    void thread_add_ln68_fu_858_p2();
    void thread_add_ln69_fu_863_p2();
    void thread_add_ln70_fu_868_p2();
    void thread_add_ln71_fu_873_p2();
    void thread_add_ln72_fu_878_p2();
    void thread_and_ln53_1_fu_789_p2();
    void thread_and_ln53_fu_777_p2();
    void thread_and_ln54_1_fu_831_p2();
    void thread_and_ln54_fu_825_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_data_0_address0();
    void thread_data_0_ce0();
    void thread_data_1_address0();
    void thread_data_1_ce0();
    void thread_data_2_address0();
    void thread_data_2_ce0();
    void thread_data_3_address0();
    void thread_data_3_ce0();
    void thread_e_fu_1020_p2();
    void thread_i_3_fu_693_p2();
    void thread_i_fu_681_p2();
    void thread_icmp_ln34_fu_436_p2();
    void thread_icmp_ln38_fu_469_p2();
    void thread_icmp_ln51_fu_687_p2();
    void thread_k_address0();
    void thread_k_ce0();
    void thread_lshr_ln1_fu_699_p4();
    void thread_lshr_ln2_fu_942_p4();
    void thread_lshr_ln40_1_fu_541_p4();
    void thread_lshr_ln40_2_fu_563_p4();
    void thread_lshr_ln40_3_fu_589_p4();
    void thread_lshr_ln40_4_fu_611_p4();
    void thread_lshr_ln40_5_fu_633_p4();
    void thread_lshr_ln53_1_fu_721_p4();
    void thread_lshr_ln53_2_fu_743_p4();
    void thread_lshr_ln54_1_fu_964_p4();
    void thread_lshr_ln54_2_fu_986_p4();
    void thread_lshr_ln_fu_519_p4();
    void thread_m_address0();
    void thread_m_address1();
    void thread_m_ce0();
    void thread_m_ce1();
    void thread_m_d0();
    void thread_m_d1();
    void thread_m_we0();
    void thread_m_we1();
    void thread_or_ln1_fu_713_p3();
    void thread_or_ln2_fu_956_p3();
    void thread_or_ln40_1_fu_555_p3();
    void thread_or_ln40_2_fu_603_p3();
    void thread_or_ln40_3_fu_625_p3();
    void thread_or_ln53_1_fu_735_p3();
    void thread_or_ln53_2_fu_757_p3();
    void thread_or_ln54_1_fu_978_p3();
    void thread_or_ln54_2_fu_1000_p3();
    void thread_or_ln_fu_533_p3();
    void thread_t1_fu_937_p2();
    void thread_trunc_ln40_1_fu_551_p1();
    void thread_trunc_ln40_2_fu_599_p1();
    void thread_trunc_ln40_3_fu_621_p1();
    void thread_trunc_ln40_fu_529_p1();
    void thread_trunc_ln53_1_fu_731_p1();
    void thread_trunc_ln53_2_fu_753_p1();
    void thread_trunc_ln53_fu_709_p1();
    void thread_trunc_ln54_1_fu_974_p1();
    void thread_trunc_ln54_2_fu_996_p1();
    void thread_trunc_ln54_fu_952_p1();
    void thread_xor_ln40_1_fu_583_p2();
    void thread_xor_ln40_2_fu_647_p2();
    void thread_xor_ln40_3_fu_653_p2();
    void thread_xor_ln40_fu_577_p2();
    void thread_xor_ln53_1_fu_771_p2();
    void thread_xor_ln53_2_fu_783_p2();
    void thread_xor_ln53_3_fu_795_p2();
    void thread_xor_ln53_fu_765_p2();
    void thread_xor_ln54_1_fu_1014_p2();
    void thread_xor_ln54_2_fu_819_p2();
    void thread_xor_ln54_3_fu_837_p2();
    void thread_xor_ln54_fu_1008_p2();
    void thread_zext_ln36_fu_448_p1();
    void thread_zext_ln40_1_fu_492_p1();
    void thread_zext_ln40_2_fu_503_p1();
    void thread_zext_ln40_3_fu_514_p1();
    void thread_zext_ln40_4_fu_676_p1();
    void thread_zext_ln40_5_fu_573_p1();
    void thread_zext_ln40_6_fu_643_p1();
    void thread_zext_ln40_fu_481_p1();
    void thread_zext_ln53_fu_801_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
