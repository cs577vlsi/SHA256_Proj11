// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_transform.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_transform::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_transform::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> sha256_transform::ap_ST_fsm_state1 = "1";
const sc_lv<10> sha256_transform::ap_ST_fsm_state2 = "10";
const sc_lv<10> sha256_transform::ap_ST_fsm_state3 = "100";
const sc_lv<10> sha256_transform::ap_ST_fsm_state4 = "1000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state5 = "10000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state6 = "100000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> sha256_transform::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_transform::ap_const_lv32_5 = "101";
const sc_lv<32> sha256_transform::ap_const_lv32_1 = "1";
const sc_lv<1> sha256_transform::ap_const_lv1_0 = "0";
const sc_lv<32> sha256_transform::ap_const_lv32_3 = "11";
const sc_lv<32> sha256_transform::ap_const_lv32_6 = "110";
const sc_lv<32> sha256_transform::ap_const_lv32_7 = "111";
const sc_lv<32> sha256_transform::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_transform::ap_const_lv32_9 = "1001";
const sc_lv<5> sha256_transform::ap_const_lv5_0 = "00000";
const sc_lv<32> sha256_transform::ap_const_lv32_2 = "10";
const sc_lv<7> sha256_transform::ap_const_lv7_10 = "10000";
const sc_lv<1> sha256_transform::ap_const_lv1_1 = "1";
const sc_lv<7> sha256_transform::ap_const_lv7_0 = "0000000";
const sc_lv<5> sha256_transform::ap_const_lv5_10 = "10000";
const sc_lv<5> sha256_transform::ap_const_lv5_1 = "1";
const sc_lv<7> sha256_transform::ap_const_lv7_40 = "1000000";
const sc_lv<7> sha256_transform::ap_const_lv7_7E = "1111110";
const sc_lv<7> sha256_transform::ap_const_lv7_79 = "1111001";
const sc_lv<7> sha256_transform::ap_const_lv7_71 = "1110001";
const sc_lv<7> sha256_transform::ap_const_lv7_70 = "1110000";
const sc_lv<32> sha256_transform::ap_const_lv32_11 = "10001";
const sc_lv<32> sha256_transform::ap_const_lv32_1F = "11111";
const sc_lv<32> sha256_transform::ap_const_lv32_13 = "10011";
const sc_lv<32> sha256_transform::ap_const_lv32_A = "1010";
const sc_lv<32> sha256_transform::ap_const_lv32_12 = "10010";
const sc_lv<7> sha256_transform::ap_const_lv7_1 = "1";
const sc_lv<32> sha256_transform::ap_const_lv32_B = "1011";
const sc_lv<32> sha256_transform::ap_const_lv32_19 = "11001";
const sc_lv<32> sha256_transform::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_transform::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_transform::ap_const_lv32_16 = "10110";
const bool sha256_transform::ap_const_boolean_1 = true;

sha256_transform::sha256_transform(sc_module_name name) : sc_module(name), mVcdFile(0) {
    k_U = new sha256_transform_k("k_U");
    k_U->clk(ap_clk);
    k_U->reset(ap_rst);
    k_U->address0(k_address0);
    k_U->ce0(k_ce0);
    k_U->q0(k_q0);
    m_U = new sha256_transform_m("m_U");
    m_U->clk(ap_clk);
    m_U->reset(ap_rst);
    m_U->address0(m_address0);
    m_U->ce0(m_ce0);
    m_U->we0(m_we0);
    m_U->d0(m_d0);
    m_U->q0(m_q0);
    m_U->address1(m_address1);
    m_U->ce1(m_ce1);
    m_U->we1(m_we1);
    m_U->d1(m_d1);
    m_U->q1(m_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_fu_1029_p2);
    sensitive << ( add_ln62_fu_1025_p2 );
    sensitive << ( xor_ln54_1_fu_1014_p2 );

    SC_METHOD(thread_add_ln34_fu_442_p2);
    sensitive << ( i_0_reg_313 );

    SC_METHOD(thread_add_ln40_1_fu_486_p2);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_add_ln40_2_fu_497_p2);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_add_ln40_3_fu_508_p2);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_add_ln40_4_fu_665_p2);
    sensitive << ( reg_432 );
    sensitive << ( m_load_1_reg_1129 );

    SC_METHOD(thread_add_ln40_5_fu_659_p2);
    sensitive << ( xor_ln40_1_fu_583_p2 );
    sensitive << ( xor_ln40_3_fu_653_p2 );

    SC_METHOD(thread_add_ln40_fu_475_p2);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_add_ln53_1_fu_807_p2);
    sensitive << ( xor_ln53_1_fu_771_p2 );
    sensitive << ( xor_ln53_3_fu_795_p2 );

    SC_METHOD(thread_add_ln53_2_fu_813_p2);
    sensitive << ( h_0_reg_336 );
    sensitive << ( add_ln53_1_fu_807_p2 );

    SC_METHOD(thread_add_ln53_fu_931_p2);
    sensitive << ( k_q0 );
    sensitive << ( m_q0 );

    SC_METHOD(thread_add_ln62_fu_1025_p2);
    sensitive << ( xor_ln54_3_reg_1177 );
    sensitive << ( t1_reg_1182 );

    SC_METHOD(thread_add_ln65_fu_843_p2);
    sensitive << ( ctx_state_0_read );
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_add_ln66_fu_848_p2);
    sensitive << ( ctx_state_1_read );
    sensitive << ( c_reg_399 );

    SC_METHOD(thread_add_ln67_fu_853_p2);
    sensitive << ( ctx_state_2_read );
    sensitive << ( d_reg_388 );

    SC_METHOD(thread_add_ln68_fu_858_p2);
    sensitive << ( ctx_state_3_read );
    sensitive << ( d_0_reg_378 );

    SC_METHOD(thread_add_ln69_fu_863_p2);
    sensitive << ( ctx_state_4_read );
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_add_ln70_fu_868_p2);
    sensitive << ( ctx_state_5_read );
    sensitive << ( g_reg_356 );

    SC_METHOD(thread_add_ln71_fu_873_p2);
    sensitive << ( ctx_state_6_read );
    sensitive << ( h_reg_345 );

    SC_METHOD(thread_add_ln72_fu_878_p2);
    sensitive << ( ctx_state_7_read );
    sensitive << ( h_0_reg_336 );

    SC_METHOD(thread_and_ln53_1_fu_789_p2);
    sensitive << ( h_reg_345 );
    sensitive << ( xor_ln53_2_fu_783_p2 );

    SC_METHOD(thread_and_ln53_fu_777_p2);
    sensitive << ( g_reg_356 );
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_and_ln54_1_fu_831_p2);
    sensitive << ( d_reg_388 );
    sensitive << ( c_reg_399 );

    SC_METHOD(thread_and_ln54_fu_825_p2);
    sensitive << ( b_reg_410 );
    sensitive << ( xor_ln54_2_fu_819_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln65_fu_843_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln66_fu_848_p2 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln67_fu_853_p2 );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln68_fu_858_p2 );
    sensitive << ( ap_return_3_preg );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln69_fu_863_p2 );
    sensitive << ( ap_return_4_preg );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln70_fu_868_p2 );
    sensitive << ( ap_return_5_preg );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln71_fu_873_p2 );
    sensitive << ( ap_return_6_preg );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );
    sensitive << ( add_ln72_fu_878_p2 );
    sensitive << ( ap_return_7_preg );

    SC_METHOD(thread_data_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln36_fu_448_p1 );

    SC_METHOD(thread_data_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_data_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln36_fu_448_p1 );

    SC_METHOD(thread_data_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_data_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln36_fu_448_p1 );

    SC_METHOD(thread_data_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_data_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln36_fu_448_p1 );

    SC_METHOD(thread_data_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_e_fu_1020_p2);
    sensitive << ( t1_reg_1182 );
    sensitive << ( d_0_reg_378 );

    SC_METHOD(thread_i_3_fu_693_p2);
    sensitive << ( i_2_reg_421 );

    SC_METHOD(thread_i_fu_681_p2);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_icmp_ln34_fu_436_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_313 );

    SC_METHOD(thread_icmp_ln38_fu_469_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_icmp_ln51_fu_687_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_2_reg_421 );

    SC_METHOD(thread_k_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln53_fu_801_p1 );

    SC_METHOD(thread_k_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_lshr_ln1_fu_699_p4);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_lshr_ln2_fu_942_p4);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_lshr_ln40_1_fu_541_p4);
    sensitive << ( reg_432 );

    SC_METHOD(thread_lshr_ln40_2_fu_563_p4);
    sensitive << ( reg_432 );

    SC_METHOD(thread_lshr_ln40_3_fu_589_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_lshr_ln40_4_fu_611_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_lshr_ln40_5_fu_633_p4);
    sensitive << ( m_q1 );

    SC_METHOD(thread_lshr_ln53_1_fu_721_p4);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_lshr_ln53_2_fu_743_p4);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_lshr_ln54_1_fu_964_p4);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_lshr_ln54_2_fu_986_p4);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_lshr_ln_fu_519_p4);
    sensitive << ( reg_432 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln36_reg_1091 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln40_fu_481_p1 );
    sensitive << ( zext_ln40_3_fu_514_p1 );
    sensitive << ( zext_ln53_fu_801_p1 );

    SC_METHOD(thread_m_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln40_1_fu_492_p1 );
    sensitive << ( zext_ln40_2_fu_503_p1 );
    sensitive << ( zext_ln40_4_fu_676_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_m_d0);
    sensitive << ( data_0_q0 );
    sensitive << ( data_1_q0 );
    sensitive << ( data_2_q0 );
    sensitive << ( data_3_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_d1);
    sensitive << ( add_ln40_5_reg_1144 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( add_ln40_4_fu_665_p2 );

    SC_METHOD(thread_m_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_we1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_or_ln1_fu_713_p3);
    sensitive << ( trunc_ln53_fu_709_p1 );
    sensitive << ( lshr_ln1_fu_699_p4 );

    SC_METHOD(thread_or_ln2_fu_956_p3);
    sensitive << ( trunc_ln54_fu_952_p1 );
    sensitive << ( lshr_ln2_fu_942_p4 );

    SC_METHOD(thread_or_ln40_1_fu_555_p3);
    sensitive << ( trunc_ln40_1_fu_551_p1 );
    sensitive << ( lshr_ln40_1_fu_541_p4 );

    SC_METHOD(thread_or_ln40_2_fu_603_p3);
    sensitive << ( trunc_ln40_2_fu_599_p1 );
    sensitive << ( lshr_ln40_3_fu_589_p4 );

    SC_METHOD(thread_or_ln40_3_fu_625_p3);
    sensitive << ( trunc_ln40_3_fu_621_p1 );
    sensitive << ( lshr_ln40_4_fu_611_p4 );

    SC_METHOD(thread_or_ln53_1_fu_735_p3);
    sensitive << ( trunc_ln53_1_fu_731_p1 );
    sensitive << ( lshr_ln53_1_fu_721_p4 );

    SC_METHOD(thread_or_ln53_2_fu_757_p3);
    sensitive << ( trunc_ln53_2_fu_753_p1 );
    sensitive << ( lshr_ln53_2_fu_743_p4 );

    SC_METHOD(thread_or_ln54_1_fu_978_p3);
    sensitive << ( trunc_ln54_1_fu_974_p1 );
    sensitive << ( lshr_ln54_1_fu_964_p4 );

    SC_METHOD(thread_or_ln54_2_fu_1000_p3);
    sensitive << ( trunc_ln54_2_fu_996_p1 );
    sensitive << ( lshr_ln54_2_fu_986_p4 );

    SC_METHOD(thread_or_ln_fu_533_p3);
    sensitive << ( trunc_ln40_fu_529_p1 );
    sensitive << ( lshr_ln_fu_519_p4 );

    SC_METHOD(thread_t1_fu_937_p2);
    sensitive << ( add_ln53_2_reg_1172 );
    sensitive << ( add_ln53_fu_931_p2 );

    SC_METHOD(thread_trunc_ln40_1_fu_551_p1);
    sensitive << ( reg_432 );

    SC_METHOD(thread_trunc_ln40_2_fu_599_p1);
    sensitive << ( m_q1 );

    SC_METHOD(thread_trunc_ln40_3_fu_621_p1);
    sensitive << ( m_q1 );

    SC_METHOD(thread_trunc_ln40_fu_529_p1);
    sensitive << ( reg_432 );

    SC_METHOD(thread_trunc_ln53_1_fu_731_p1);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_trunc_ln53_2_fu_753_p1);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_trunc_ln53_fu_709_p1);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_trunc_ln54_1_fu_974_p1);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_trunc_ln54_2_fu_996_p1);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_trunc_ln54_fu_952_p1);
    sensitive << ( b_reg_410 );

    SC_METHOD(thread_xor_ln40_1_fu_583_p2);
    sensitive << ( xor_ln40_fu_577_p2 );
    sensitive << ( or_ln_fu_533_p3 );

    SC_METHOD(thread_xor_ln40_2_fu_647_p2);
    sensitive << ( zext_ln40_6_fu_643_p1 );
    sensitive << ( or_ln40_3_fu_625_p3 );

    SC_METHOD(thread_xor_ln40_3_fu_653_p2);
    sensitive << ( xor_ln40_2_fu_647_p2 );
    sensitive << ( or_ln40_2_fu_603_p3 );

    SC_METHOD(thread_xor_ln40_fu_577_p2);
    sensitive << ( zext_ln40_5_fu_573_p1 );
    sensitive << ( or_ln40_1_fu_555_p3 );

    SC_METHOD(thread_xor_ln53_1_fu_771_p2);
    sensitive << ( xor_ln53_fu_765_p2 );
    sensitive << ( or_ln53_2_fu_757_p3 );

    SC_METHOD(thread_xor_ln53_2_fu_783_p2);
    sensitive << ( f_reg_367 );

    SC_METHOD(thread_xor_ln53_3_fu_795_p2);
    sensitive << ( and_ln53_fu_777_p2 );
    sensitive << ( and_ln53_1_fu_789_p2 );

    SC_METHOD(thread_xor_ln53_fu_765_p2);
    sensitive << ( or_ln1_fu_713_p3 );
    sensitive << ( or_ln53_1_fu_735_p3 );

    SC_METHOD(thread_xor_ln54_1_fu_1014_p2);
    sensitive << ( xor_ln54_fu_1008_p2 );
    sensitive << ( or_ln54_2_fu_1000_p3 );

    SC_METHOD(thread_xor_ln54_2_fu_819_p2);
    sensitive << ( d_reg_388 );
    sensitive << ( c_reg_399 );

    SC_METHOD(thread_xor_ln54_3_fu_837_p2);
    sensitive << ( and_ln54_fu_825_p2 );
    sensitive << ( and_ln54_1_fu_831_p2 );

    SC_METHOD(thread_xor_ln54_fu_1008_p2);
    sensitive << ( or_ln2_fu_956_p3 );
    sensitive << ( or_ln54_1_fu_978_p3 );

    SC_METHOD(thread_zext_ln36_fu_448_p1);
    sensitive << ( i_0_reg_313 );

    SC_METHOD(thread_zext_ln40_1_fu_492_p1);
    sensitive << ( add_ln40_1_fu_486_p2 );

    SC_METHOD(thread_zext_ln40_2_fu_503_p1);
    sensitive << ( add_ln40_2_fu_497_p2 );

    SC_METHOD(thread_zext_ln40_3_fu_514_p1);
    sensitive << ( add_ln40_3_fu_508_p2 );

    SC_METHOD(thread_zext_ln40_4_fu_676_p1);
    sensitive << ( i_1_reg_324 );

    SC_METHOD(thread_zext_ln40_5_fu_573_p1);
    sensitive << ( lshr_ln40_2_fu_563_p4 );

    SC_METHOD(thread_zext_ln40_6_fu_643_p1);
    sensitive << ( lshr_ln40_5_fu_633_p4 );

    SC_METHOD(thread_zext_ln40_fu_481_p1);
    sensitive << ( add_ln40_fu_475_p2 );

    SC_METHOD(thread_zext_ln53_fu_801_p1);
    sensitive << ( i_2_reg_421 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln34_fu_436_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln38_fu_469_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln51_fu_687_p2 );

    ap_CS_fsm = "0000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    ap_return_2_preg = "00000000000000000000000000000000";
    ap_return_3_preg = "00000000000000000000000000000000";
    ap_return_4_preg = "00000000000000000000000000000000";
    ap_return_5_preg = "00000000000000000000000000000000";
    ap_return_6_preg = "00000000000000000000000000000000";
    ap_return_7_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_transform_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_state_0_read, "(port)ctx_state_0_read");
    sc_trace(mVcdFile, ctx_state_1_read, "(port)ctx_state_1_read");
    sc_trace(mVcdFile, ctx_state_2_read, "(port)ctx_state_2_read");
    sc_trace(mVcdFile, ctx_state_3_read, "(port)ctx_state_3_read");
    sc_trace(mVcdFile, ctx_state_4_read, "(port)ctx_state_4_read");
    sc_trace(mVcdFile, ctx_state_5_read, "(port)ctx_state_5_read");
    sc_trace(mVcdFile, ctx_state_6_read, "(port)ctx_state_6_read");
    sc_trace(mVcdFile, ctx_state_7_read, "(port)ctx_state_7_read");
    sc_trace(mVcdFile, data_0_address0, "(port)data_0_address0");
    sc_trace(mVcdFile, data_0_ce0, "(port)data_0_ce0");
    sc_trace(mVcdFile, data_0_q0, "(port)data_0_q0");
    sc_trace(mVcdFile, data_1_address0, "(port)data_1_address0");
    sc_trace(mVcdFile, data_1_ce0, "(port)data_1_ce0");
    sc_trace(mVcdFile, data_1_q0, "(port)data_1_q0");
    sc_trace(mVcdFile, data_2_address0, "(port)data_2_address0");
    sc_trace(mVcdFile, data_2_ce0, "(port)data_2_ce0");
    sc_trace(mVcdFile, data_2_q0, "(port)data_2_q0");
    sc_trace(mVcdFile, data_3_address0, "(port)data_3_address0");
    sc_trace(mVcdFile, data_3_ce0, "(port)data_3_ce0");
    sc_trace(mVcdFile, data_3_q0, "(port)data_3_q0");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, k_address0, "k_address0");
    sc_trace(mVcdFile, k_ce0, "k_ce0");
    sc_trace(mVcdFile, k_q0, "k_q0");
    sc_trace(mVcdFile, m_q0, "m_q0");
    sc_trace(mVcdFile, reg_432, "reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, add_ln34_fu_442_p2, "add_ln34_fu_442_p2");
    sc_trace(mVcdFile, add_ln34_reg_1086, "add_ln34_reg_1086");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln36_fu_448_p1, "zext_ln36_fu_448_p1");
    sc_trace(mVcdFile, zext_ln36_reg_1091, "zext_ln36_reg_1091");
    sc_trace(mVcdFile, icmp_ln34_fu_436_p2, "icmp_ln34_fu_436_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln38_fu_469_p2, "icmp_ln38_fu_469_p2");
    sc_trace(mVcdFile, m_q1, "m_q1");
    sc_trace(mVcdFile, m_load_1_reg_1129, "m_load_1_reg_1129");
    sc_trace(mVcdFile, add_ln40_5_fu_659_p2, "add_ln40_5_fu_659_p2");
    sc_trace(mVcdFile, add_ln40_5_reg_1144, "add_ln40_5_reg_1144");
    sc_trace(mVcdFile, i_fu_681_p2, "i_fu_681_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_3_fu_693_p2, "i_3_fu_693_p2");
    sc_trace(mVcdFile, i_3_reg_1157, "i_3_reg_1157");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln51_fu_687_p2, "icmp_ln51_fu_687_p2");
    sc_trace(mVcdFile, add_ln53_2_fu_813_p2, "add_ln53_2_fu_813_p2");
    sc_trace(mVcdFile, add_ln53_2_reg_1172, "add_ln53_2_reg_1172");
    sc_trace(mVcdFile, xor_ln54_3_fu_837_p2, "xor_ln54_3_fu_837_p2");
    sc_trace(mVcdFile, xor_ln54_3_reg_1177, "xor_ln54_3_reg_1177");
    sc_trace(mVcdFile, t1_fu_937_p2, "t1_fu_937_p2");
    sc_trace(mVcdFile, t1_reg_1182, "t1_reg_1182");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, e_fu_1020_p2, "e_fu_1020_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, a_fu_1029_p2, "a_fu_1029_p2");
    sc_trace(mVcdFile, m_address0, "m_address0");
    sc_trace(mVcdFile, m_ce0, "m_ce0");
    sc_trace(mVcdFile, m_we0, "m_we0");
    sc_trace(mVcdFile, m_d0, "m_d0");
    sc_trace(mVcdFile, m_address1, "m_address1");
    sc_trace(mVcdFile, m_ce1, "m_ce1");
    sc_trace(mVcdFile, m_we1, "m_we1");
    sc_trace(mVcdFile, m_d1, "m_d1");
    sc_trace(mVcdFile, i_0_reg_313, "i_0_reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_reg_324, "i_1_reg_324");
    sc_trace(mVcdFile, h_reg_345, "h_reg_345");
    sc_trace(mVcdFile, h_0_reg_336, "h_0_reg_336");
    sc_trace(mVcdFile, g_reg_356, "g_reg_356");
    sc_trace(mVcdFile, f_reg_367, "f_reg_367");
    sc_trace(mVcdFile, d_reg_388, "d_reg_388");
    sc_trace(mVcdFile, d_0_reg_378, "d_0_reg_378");
    sc_trace(mVcdFile, c_reg_399, "c_reg_399");
    sc_trace(mVcdFile, b_reg_410, "b_reg_410");
    sc_trace(mVcdFile, i_2_reg_421, "i_2_reg_421");
    sc_trace(mVcdFile, zext_ln40_fu_481_p1, "zext_ln40_fu_481_p1");
    sc_trace(mVcdFile, zext_ln40_1_fu_492_p1, "zext_ln40_1_fu_492_p1");
    sc_trace(mVcdFile, zext_ln40_2_fu_503_p1, "zext_ln40_2_fu_503_p1");
    sc_trace(mVcdFile, zext_ln40_3_fu_514_p1, "zext_ln40_3_fu_514_p1");
    sc_trace(mVcdFile, zext_ln40_4_fu_676_p1, "zext_ln40_4_fu_676_p1");
    sc_trace(mVcdFile, zext_ln53_fu_801_p1, "zext_ln53_fu_801_p1");
    sc_trace(mVcdFile, add_ln40_fu_475_p2, "add_ln40_fu_475_p2");
    sc_trace(mVcdFile, add_ln40_1_fu_486_p2, "add_ln40_1_fu_486_p2");
    sc_trace(mVcdFile, add_ln40_2_fu_497_p2, "add_ln40_2_fu_497_p2");
    sc_trace(mVcdFile, add_ln40_3_fu_508_p2, "add_ln40_3_fu_508_p2");
    sc_trace(mVcdFile, trunc_ln40_fu_529_p1, "trunc_ln40_fu_529_p1");
    sc_trace(mVcdFile, lshr_ln_fu_519_p4, "lshr_ln_fu_519_p4");
    sc_trace(mVcdFile, trunc_ln40_1_fu_551_p1, "trunc_ln40_1_fu_551_p1");
    sc_trace(mVcdFile, lshr_ln40_1_fu_541_p4, "lshr_ln40_1_fu_541_p4");
    sc_trace(mVcdFile, lshr_ln40_2_fu_563_p4, "lshr_ln40_2_fu_563_p4");
    sc_trace(mVcdFile, zext_ln40_5_fu_573_p1, "zext_ln40_5_fu_573_p1");
    sc_trace(mVcdFile, or_ln40_1_fu_555_p3, "or_ln40_1_fu_555_p3");
    sc_trace(mVcdFile, xor_ln40_fu_577_p2, "xor_ln40_fu_577_p2");
    sc_trace(mVcdFile, or_ln_fu_533_p3, "or_ln_fu_533_p3");
    sc_trace(mVcdFile, trunc_ln40_2_fu_599_p1, "trunc_ln40_2_fu_599_p1");
    sc_trace(mVcdFile, lshr_ln40_3_fu_589_p4, "lshr_ln40_3_fu_589_p4");
    sc_trace(mVcdFile, trunc_ln40_3_fu_621_p1, "trunc_ln40_3_fu_621_p1");
    sc_trace(mVcdFile, lshr_ln40_4_fu_611_p4, "lshr_ln40_4_fu_611_p4");
    sc_trace(mVcdFile, lshr_ln40_5_fu_633_p4, "lshr_ln40_5_fu_633_p4");
    sc_trace(mVcdFile, zext_ln40_6_fu_643_p1, "zext_ln40_6_fu_643_p1");
    sc_trace(mVcdFile, or_ln40_3_fu_625_p3, "or_ln40_3_fu_625_p3");
    sc_trace(mVcdFile, xor_ln40_2_fu_647_p2, "xor_ln40_2_fu_647_p2");
    sc_trace(mVcdFile, or_ln40_2_fu_603_p3, "or_ln40_2_fu_603_p3");
    sc_trace(mVcdFile, xor_ln40_1_fu_583_p2, "xor_ln40_1_fu_583_p2");
    sc_trace(mVcdFile, xor_ln40_3_fu_653_p2, "xor_ln40_3_fu_653_p2");
    sc_trace(mVcdFile, add_ln40_4_fu_665_p2, "add_ln40_4_fu_665_p2");
    sc_trace(mVcdFile, trunc_ln53_fu_709_p1, "trunc_ln53_fu_709_p1");
    sc_trace(mVcdFile, lshr_ln1_fu_699_p4, "lshr_ln1_fu_699_p4");
    sc_trace(mVcdFile, trunc_ln53_1_fu_731_p1, "trunc_ln53_1_fu_731_p1");
    sc_trace(mVcdFile, lshr_ln53_1_fu_721_p4, "lshr_ln53_1_fu_721_p4");
    sc_trace(mVcdFile, trunc_ln53_2_fu_753_p1, "trunc_ln53_2_fu_753_p1");
    sc_trace(mVcdFile, lshr_ln53_2_fu_743_p4, "lshr_ln53_2_fu_743_p4");
    sc_trace(mVcdFile, or_ln1_fu_713_p3, "or_ln1_fu_713_p3");
    sc_trace(mVcdFile, or_ln53_1_fu_735_p3, "or_ln53_1_fu_735_p3");
    sc_trace(mVcdFile, xor_ln53_fu_765_p2, "xor_ln53_fu_765_p2");
    sc_trace(mVcdFile, or_ln53_2_fu_757_p3, "or_ln53_2_fu_757_p3");
    sc_trace(mVcdFile, xor_ln53_2_fu_783_p2, "xor_ln53_2_fu_783_p2");
    sc_trace(mVcdFile, and_ln53_fu_777_p2, "and_ln53_fu_777_p2");
    sc_trace(mVcdFile, and_ln53_1_fu_789_p2, "and_ln53_1_fu_789_p2");
    sc_trace(mVcdFile, xor_ln53_1_fu_771_p2, "xor_ln53_1_fu_771_p2");
    sc_trace(mVcdFile, xor_ln53_3_fu_795_p2, "xor_ln53_3_fu_795_p2");
    sc_trace(mVcdFile, add_ln53_1_fu_807_p2, "add_ln53_1_fu_807_p2");
    sc_trace(mVcdFile, xor_ln54_2_fu_819_p2, "xor_ln54_2_fu_819_p2");
    sc_trace(mVcdFile, and_ln54_fu_825_p2, "and_ln54_fu_825_p2");
    sc_trace(mVcdFile, and_ln54_1_fu_831_p2, "and_ln54_1_fu_831_p2");
    sc_trace(mVcdFile, add_ln65_fu_843_p2, "add_ln65_fu_843_p2");
    sc_trace(mVcdFile, add_ln66_fu_848_p2, "add_ln66_fu_848_p2");
    sc_trace(mVcdFile, add_ln67_fu_853_p2, "add_ln67_fu_853_p2");
    sc_trace(mVcdFile, add_ln68_fu_858_p2, "add_ln68_fu_858_p2");
    sc_trace(mVcdFile, add_ln69_fu_863_p2, "add_ln69_fu_863_p2");
    sc_trace(mVcdFile, add_ln70_fu_868_p2, "add_ln70_fu_868_p2");
    sc_trace(mVcdFile, add_ln71_fu_873_p2, "add_ln71_fu_873_p2");
    sc_trace(mVcdFile, add_ln72_fu_878_p2, "add_ln72_fu_878_p2");
    sc_trace(mVcdFile, add_ln53_fu_931_p2, "add_ln53_fu_931_p2");
    sc_trace(mVcdFile, trunc_ln54_fu_952_p1, "trunc_ln54_fu_952_p1");
    sc_trace(mVcdFile, lshr_ln2_fu_942_p4, "lshr_ln2_fu_942_p4");
    sc_trace(mVcdFile, trunc_ln54_1_fu_974_p1, "trunc_ln54_1_fu_974_p1");
    sc_trace(mVcdFile, lshr_ln54_1_fu_964_p4, "lshr_ln54_1_fu_964_p4");
    sc_trace(mVcdFile, trunc_ln54_2_fu_996_p1, "trunc_ln54_2_fu_996_p1");
    sc_trace(mVcdFile, lshr_ln54_2_fu_986_p4, "lshr_ln54_2_fu_986_p4");
    sc_trace(mVcdFile, or_ln2_fu_956_p3, "or_ln2_fu_956_p3");
    sc_trace(mVcdFile, or_ln54_1_fu_978_p3, "or_ln54_1_fu_978_p3");
    sc_trace(mVcdFile, xor_ln54_fu_1008_p2, "xor_ln54_fu_1008_p2");
    sc_trace(mVcdFile, or_ln54_2_fu_1000_p3, "or_ln54_2_fu_1000_p3");
    sc_trace(mVcdFile, add_ln62_fu_1025_p2, "add_ln62_fu_1025_p2");
    sc_trace(mVcdFile, xor_ln54_1_fu_1014_p2, "xor_ln54_1_fu_1014_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_transform::~sha256_transform() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete k_U;
    delete m_U;
}

void sha256_transform::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_0_preg = add_ln65_fu_843_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_1_preg = add_ln66_fu_848_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_2_preg = add_ln67_fu_853_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_3_preg = add_ln68_fu_858_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_4_preg = add_ln69_fu_863_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_5_preg = add_ln70_fu_868_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_6_preg = add_ln71_fu_873_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
            ap_return_7_preg = add_ln72_fu_878_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        b_reg_410 = ctx_state_0_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        b_reg_410 = a_fu_1029_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        c_reg_399 = ctx_state_1_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        c_reg_399 = b_reg_410.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        d_0_reg_378 = ctx_state_3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        d_0_reg_378 = d_reg_388.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        d_reg_388 = ctx_state_2_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        d_reg_388 = c_reg_399.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        f_reg_367 = ctx_state_4_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        f_reg_367 = e_fu_1020_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        g_reg_356 = ctx_state_5_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        g_reg_356 = f_reg_367.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        h_0_reg_336 = ctx_state_7_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        h_0_reg_336 = h_reg_345.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        h_reg_345 = ctx_state_6_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        h_reg_345 = g_reg_356.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_313 = add_ln34_reg_1086.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_313 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln34_fu_436_p2.read(), ap_const_lv1_1))) {
        i_1_reg_324 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_324 = i_fu_681_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
        i_2_reg_421 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_2_reg_421 = i_3_reg_1157.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln34_reg_1086 = add_ln34_fu_442_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_ln40_5_reg_1144 = add_ln40_5_fu_659_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_687_p2.read()))) {
        add_ln53_2_reg_1172 = add_ln53_2_fu_813_p2.read();
        xor_ln54_3_reg_1177 = xor_ln54_3_fu_837_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_3_reg_1157 = i_3_fu_693_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_load_1_reg_1129 = m_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_432 = m_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t1_reg_1182 = t1_fu_937_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln34_fu_436_p2.read(), ap_const_lv1_0))) {
        zext_ln36_reg_1091 = zext_ln36_fu_448_p1.read();
    }
}

void sha256_transform::thread_a_fu_1029_p2() {
    a_fu_1029_p2 = (!add_ln62_fu_1025_p2.read().is_01() || !xor_ln54_1_fu_1014_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln62_fu_1025_p2.read()) + sc_biguint<32>(xor_ln54_1_fu_1014_p2.read()));
}

void sha256_transform::thread_add_ln34_fu_442_p2() {
    add_ln34_fu_442_p2 = (!i_0_reg_313.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_313.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void sha256_transform::thread_add_ln40_1_fu_486_p2() {
    add_ln40_1_fu_486_p2 = (!ap_const_lv7_79.is_01() || !i_1_reg_324.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_79) + sc_biguint<7>(i_1_reg_324.read()));
}

void sha256_transform::thread_add_ln40_2_fu_497_p2() {
    add_ln40_2_fu_497_p2 = (!ap_const_lv7_71.is_01() || !i_1_reg_324.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_71) + sc_biguint<7>(i_1_reg_324.read()));
}

void sha256_transform::thread_add_ln40_3_fu_508_p2() {
    add_ln40_3_fu_508_p2 = (!ap_const_lv7_70.is_01() || !i_1_reg_324.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_70) + sc_biguint<7>(i_1_reg_324.read()));
}

void sha256_transform::thread_add_ln40_4_fu_665_p2() {
    add_ln40_4_fu_665_p2 = (!m_load_1_reg_1129.read().is_01() || !reg_432.read().is_01())? sc_lv<32>(): (sc_biguint<32>(m_load_1_reg_1129.read()) + sc_biguint<32>(reg_432.read()));
}

void sha256_transform::thread_add_ln40_5_fu_659_p2() {
    add_ln40_5_fu_659_p2 = (!xor_ln40_1_fu_583_p2.read().is_01() || !xor_ln40_3_fu_653_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln40_1_fu_583_p2.read()) + sc_biguint<32>(xor_ln40_3_fu_653_p2.read()));
}

void sha256_transform::thread_add_ln40_fu_475_p2() {
    add_ln40_fu_475_p2 = (!ap_const_lv7_7E.is_01() || !i_1_reg_324.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7E) + sc_biguint<7>(i_1_reg_324.read()));
}

void sha256_transform::thread_add_ln53_1_fu_807_p2() {
    add_ln53_1_fu_807_p2 = (!xor_ln53_1_fu_771_p2.read().is_01() || !xor_ln53_3_fu_795_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln53_1_fu_771_p2.read()) + sc_biguint<32>(xor_ln53_3_fu_795_p2.read()));
}

void sha256_transform::thread_add_ln53_2_fu_813_p2() {
    add_ln53_2_fu_813_p2 = (!add_ln53_1_fu_807_p2.read().is_01() || !h_0_reg_336.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln53_1_fu_807_p2.read()) + sc_biguint<32>(h_0_reg_336.read()));
}

void sha256_transform::thread_add_ln53_fu_931_p2() {
    add_ln53_fu_931_p2 = (!k_q0.read().is_01() || !m_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(k_q0.read()) + sc_biguint<32>(m_q0.read()));
}

void sha256_transform::thread_add_ln62_fu_1025_p2() {
    add_ln62_fu_1025_p2 = (!xor_ln54_3_reg_1177.read().is_01() || !t1_reg_1182.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln54_3_reg_1177.read()) + sc_biguint<32>(t1_reg_1182.read()));
}

void sha256_transform::thread_add_ln65_fu_843_p2() {
    add_ln65_fu_843_p2 = (!b_reg_410.read().is_01() || !ctx_state_0_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(b_reg_410.read()) + sc_biguint<32>(ctx_state_0_read.read()));
}

void sha256_transform::thread_add_ln66_fu_848_p2() {
    add_ln66_fu_848_p2 = (!c_reg_399.read().is_01() || !ctx_state_1_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(c_reg_399.read()) + sc_biguint<32>(ctx_state_1_read.read()));
}

void sha256_transform::thread_add_ln67_fu_853_p2() {
    add_ln67_fu_853_p2 = (!d_reg_388.read().is_01() || !ctx_state_2_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(d_reg_388.read()) + sc_biguint<32>(ctx_state_2_read.read()));
}

void sha256_transform::thread_add_ln68_fu_858_p2() {
    add_ln68_fu_858_p2 = (!d_0_reg_378.read().is_01() || !ctx_state_3_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(d_0_reg_378.read()) + sc_biguint<32>(ctx_state_3_read.read()));
}

void sha256_transform::thread_add_ln69_fu_863_p2() {
    add_ln69_fu_863_p2 = (!f_reg_367.read().is_01() || !ctx_state_4_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(f_reg_367.read()) + sc_biguint<32>(ctx_state_4_read.read()));
}

void sha256_transform::thread_add_ln70_fu_868_p2() {
    add_ln70_fu_868_p2 = (!g_reg_356.read().is_01() || !ctx_state_5_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(g_reg_356.read()) + sc_biguint<32>(ctx_state_5_read.read()));
}

void sha256_transform::thread_add_ln71_fu_873_p2() {
    add_ln71_fu_873_p2 = (!h_reg_345.read().is_01() || !ctx_state_6_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h_reg_345.read()) + sc_biguint<32>(ctx_state_6_read.read()));
}

void sha256_transform::thread_add_ln72_fu_878_p2() {
    add_ln72_fu_878_p2 = (!h_0_reg_336.read().is_01() || !ctx_state_7_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h_0_reg_336.read()) + sc_biguint<32>(ctx_state_7_read.read()));
}

void sha256_transform::thread_and_ln53_1_fu_789_p2() {
    and_ln53_1_fu_789_p2 = (h_reg_345.read() & xor_ln53_2_fu_783_p2.read());
}

void sha256_transform::thread_and_ln53_fu_777_p2() {
    and_ln53_fu_777_p2 = (f_reg_367.read() & g_reg_356.read());
}

void sha256_transform::thread_and_ln54_1_fu_831_p2() {
    and_ln54_1_fu_831_p2 = (c_reg_399.read() & d_reg_388.read());
}

void sha256_transform::thread_and_ln54_fu_825_p2() {
    and_ln54_fu_825_p2 = (b_reg_410.read() & xor_ln54_2_fu_819_p2.read());
}

void sha256_transform::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_transform::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_transform::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_transform::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_transform::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_transform::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_transform::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_transform::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_transform::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_transform::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_transform::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_0 = add_ln65_fu_843_p2.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void sha256_transform::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_1 = add_ln66_fu_848_p2.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void sha256_transform::thread_ap_return_2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_2 = add_ln67_fu_853_p2.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void sha256_transform::thread_ap_return_3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_3 = add_ln68_fu_858_p2.read();
    } else {
        ap_return_3 = ap_return_3_preg.read();
    }
}

void sha256_transform::thread_ap_return_4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_4 = add_ln69_fu_863_p2.read();
    } else {
        ap_return_4 = ap_return_4_preg.read();
    }
}

void sha256_transform::thread_ap_return_5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_5 = add_ln70_fu_868_p2.read();
    } else {
        ap_return_5 = ap_return_5_preg.read();
    }
}

void sha256_transform::thread_ap_return_6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_6 = add_ln71_fu_873_p2.read();
    } else {
        ap_return_6 = ap_return_6_preg.read();
    }
}

void sha256_transform::thread_ap_return_7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
        ap_return_7 = add_ln72_fu_878_p2.read();
    } else {
        ap_return_7 = ap_return_7_preg.read();
    }
}

void sha256_transform::thread_data_0_address0() {
    data_0_address0 =  (sc_lv<4>) (zext_ln36_fu_448_p1.read());
}

void sha256_transform::thread_data_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_0_ce0 = ap_const_logic_1;
    } else {
        data_0_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_data_1_address0() {
    data_1_address0 =  (sc_lv<4>) (zext_ln36_fu_448_p1.read());
}

void sha256_transform::thread_data_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_1_ce0 = ap_const_logic_1;
    } else {
        data_1_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_data_2_address0() {
    data_2_address0 =  (sc_lv<4>) (zext_ln36_fu_448_p1.read());
}

void sha256_transform::thread_data_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_2_ce0 = ap_const_logic_1;
    } else {
        data_2_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_data_3_address0() {
    data_3_address0 =  (sc_lv<4>) (zext_ln36_fu_448_p1.read());
}

void sha256_transform::thread_data_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_3_ce0 = ap_const_logic_1;
    } else {
        data_3_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_e_fu_1020_p2() {
    e_fu_1020_p2 = (!t1_reg_1182.read().is_01() || !d_0_reg_378.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t1_reg_1182.read()) + sc_biguint<32>(d_0_reg_378.read()));
}

void sha256_transform::thread_i_3_fu_693_p2() {
    i_3_fu_693_p2 = (!i_2_reg_421.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_2_reg_421.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sha256_transform::thread_i_fu_681_p2() {
    i_fu_681_p2 = (!ap_const_lv7_1.is_01() || !i_1_reg_324.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(i_1_reg_324.read()));
}

void sha256_transform::thread_icmp_ln34_fu_436_p2() {
    icmp_ln34_fu_436_p2 = (!i_0_reg_313.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_313.read() == ap_const_lv5_10);
}

void sha256_transform::thread_icmp_ln38_fu_469_p2() {
    icmp_ln38_fu_469_p2 = (!i_1_reg_324.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_324.read() == ap_const_lv7_40);
}

void sha256_transform::thread_icmp_ln51_fu_687_p2() {
    icmp_ln51_fu_687_p2 = (!i_2_reg_421.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_421.read() == ap_const_lv7_40);
}

void sha256_transform::thread_k_address0() {
    k_address0 =  (sc_lv<6>) (zext_ln53_fu_801_p1.read());
}

void sha256_transform::thread_k_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        k_ce0 = ap_const_logic_1;
    } else {
        k_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_lshr_ln1_fu_699_p4() {
    lshr_ln1_fu_699_p4 = f_reg_367.read().range(31, 6);
}

void sha256_transform::thread_lshr_ln2_fu_942_p4() {
    lshr_ln2_fu_942_p4 = b_reg_410.read().range(31, 2);
}

void sha256_transform::thread_lshr_ln40_1_fu_541_p4() {
    lshr_ln40_1_fu_541_p4 = reg_432.read().range(31, 19);
}

void sha256_transform::thread_lshr_ln40_2_fu_563_p4() {
    lshr_ln40_2_fu_563_p4 = reg_432.read().range(31, 10);
}

void sha256_transform::thread_lshr_ln40_3_fu_589_p4() {
    lshr_ln40_3_fu_589_p4 = m_q1.read().range(31, 7);
}

void sha256_transform::thread_lshr_ln40_4_fu_611_p4() {
    lshr_ln40_4_fu_611_p4 = m_q1.read().range(31, 18);
}

void sha256_transform::thread_lshr_ln40_5_fu_633_p4() {
    lshr_ln40_5_fu_633_p4 = m_q1.read().range(31, 3);
}

void sha256_transform::thread_lshr_ln53_1_fu_721_p4() {
    lshr_ln53_1_fu_721_p4 = f_reg_367.read().range(31, 11);
}

void sha256_transform::thread_lshr_ln53_2_fu_743_p4() {
    lshr_ln53_2_fu_743_p4 = f_reg_367.read().range(31, 25);
}

void sha256_transform::thread_lshr_ln54_1_fu_964_p4() {
    lshr_ln54_1_fu_964_p4 = b_reg_410.read().range(31, 13);
}

void sha256_transform::thread_lshr_ln54_2_fu_986_p4() {
    lshr_ln54_2_fu_986_p4 = b_reg_410.read().range(31, 22);
}

void sha256_transform::thread_lshr_ln_fu_519_p4() {
    lshr_ln_fu_519_p4 = reg_432.read().range(31, 17);
}

void sha256_transform::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_address0 =  (sc_lv<6>) (zext_ln53_fu_801_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address0 =  (sc_lv<6>) (zext_ln40_3_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_address0 =  (sc_lv<6>) (zext_ln40_fu_481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_address0 =  (sc_lv<6>) (zext_ln36_reg_1091.read());
    } else {
        m_address0 = "XXXXXX";
    }
}

void sha256_transform::thread_m_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        m_address1 =  (sc_lv<6>) (zext_ln40_4_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address1 =  (sc_lv<6>) (zext_ln40_2_fu_503_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_address1 =  (sc_lv<6>) (zext_ln40_1_fu_492_p1.read());
    } else {
        m_address1 = "XXXXXX";
    }
}

void sha256_transform::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        m_ce1 = ap_const_logic_1;
    } else {
        m_ce1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_d0() {
    m_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(data_0_q0.read(), data_1_q0.read()), data_2_q0.read()), data_3_q0.read());
}

void sha256_transform::thread_m_d1() {
    m_d1 = (!add_ln40_5_reg_1144.read().is_01() || !add_ln40_4_fu_665_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln40_5_reg_1144.read()) + sc_biguint<32>(add_ln40_4_fu_665_p2.read()));
}

void sha256_transform::thread_m_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_we0 = ap_const_logic_1;
    } else {
        m_we0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        m_we1 = ap_const_logic_1;
    } else {
        m_we1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_or_ln1_fu_713_p3() {
    or_ln1_fu_713_p3 = esl_concat<6,26>(trunc_ln53_fu_709_p1.read(), lshr_ln1_fu_699_p4.read());
}

void sha256_transform::thread_or_ln2_fu_956_p3() {
    or_ln2_fu_956_p3 = esl_concat<2,30>(trunc_ln54_fu_952_p1.read(), lshr_ln2_fu_942_p4.read());
}

void sha256_transform::thread_or_ln40_1_fu_555_p3() {
    or_ln40_1_fu_555_p3 = esl_concat<19,13>(trunc_ln40_1_fu_551_p1.read(), lshr_ln40_1_fu_541_p4.read());
}

void sha256_transform::thread_or_ln40_2_fu_603_p3() {
    or_ln40_2_fu_603_p3 = esl_concat<7,25>(trunc_ln40_2_fu_599_p1.read(), lshr_ln40_3_fu_589_p4.read());
}

void sha256_transform::thread_or_ln40_3_fu_625_p3() {
    or_ln40_3_fu_625_p3 = esl_concat<18,14>(trunc_ln40_3_fu_621_p1.read(), lshr_ln40_4_fu_611_p4.read());
}

void sha256_transform::thread_or_ln53_1_fu_735_p3() {
    or_ln53_1_fu_735_p3 = esl_concat<11,21>(trunc_ln53_1_fu_731_p1.read(), lshr_ln53_1_fu_721_p4.read());
}

void sha256_transform::thread_or_ln53_2_fu_757_p3() {
    or_ln53_2_fu_757_p3 = esl_concat<25,7>(trunc_ln53_2_fu_753_p1.read(), lshr_ln53_2_fu_743_p4.read());
}

void sha256_transform::thread_or_ln54_1_fu_978_p3() {
    or_ln54_1_fu_978_p3 = esl_concat<13,19>(trunc_ln54_1_fu_974_p1.read(), lshr_ln54_1_fu_964_p4.read());
}

void sha256_transform::thread_or_ln54_2_fu_1000_p3() {
    or_ln54_2_fu_1000_p3 = esl_concat<22,10>(trunc_ln54_2_fu_996_p1.read(), lshr_ln54_2_fu_986_p4.read());
}

void sha256_transform::thread_or_ln_fu_533_p3() {
    or_ln_fu_533_p3 = esl_concat<17,15>(trunc_ln40_fu_529_p1.read(), lshr_ln_fu_519_p4.read());
}

void sha256_transform::thread_t1_fu_937_p2() {
    t1_fu_937_p2 = (!add_ln53_2_reg_1172.read().is_01() || !add_ln53_fu_931_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln53_2_reg_1172.read()) + sc_biguint<32>(add_ln53_fu_931_p2.read()));
}

void sha256_transform::thread_trunc_ln40_1_fu_551_p1() {
    trunc_ln40_1_fu_551_p1 = reg_432.read().range(19-1, 0);
}

void sha256_transform::thread_trunc_ln40_2_fu_599_p1() {
    trunc_ln40_2_fu_599_p1 = m_q1.read().range(7-1, 0);
}

void sha256_transform::thread_trunc_ln40_3_fu_621_p1() {
    trunc_ln40_3_fu_621_p1 = m_q1.read().range(18-1, 0);
}

void sha256_transform::thread_trunc_ln40_fu_529_p1() {
    trunc_ln40_fu_529_p1 = reg_432.read().range(17-1, 0);
}

void sha256_transform::thread_trunc_ln53_1_fu_731_p1() {
    trunc_ln53_1_fu_731_p1 = f_reg_367.read().range(11-1, 0);
}

void sha256_transform::thread_trunc_ln53_2_fu_753_p1() {
    trunc_ln53_2_fu_753_p1 = f_reg_367.read().range(25-1, 0);
}

void sha256_transform::thread_trunc_ln53_fu_709_p1() {
    trunc_ln53_fu_709_p1 = f_reg_367.read().range(6-1, 0);
}

void sha256_transform::thread_trunc_ln54_1_fu_974_p1() {
    trunc_ln54_1_fu_974_p1 = b_reg_410.read().range(13-1, 0);
}

void sha256_transform::thread_trunc_ln54_2_fu_996_p1() {
    trunc_ln54_2_fu_996_p1 = b_reg_410.read().range(22-1, 0);
}

void sha256_transform::thread_trunc_ln54_fu_952_p1() {
    trunc_ln54_fu_952_p1 = b_reg_410.read().range(2-1, 0);
}

void sha256_transform::thread_xor_ln40_1_fu_583_p2() {
    xor_ln40_1_fu_583_p2 = (xor_ln40_fu_577_p2.read() ^ or_ln_fu_533_p3.read());
}

void sha256_transform::thread_xor_ln40_2_fu_647_p2() {
    xor_ln40_2_fu_647_p2 = (zext_ln40_6_fu_643_p1.read() ^ or_ln40_3_fu_625_p3.read());
}

void sha256_transform::thread_xor_ln40_3_fu_653_p2() {
    xor_ln40_3_fu_653_p2 = (xor_ln40_2_fu_647_p2.read() ^ or_ln40_2_fu_603_p3.read());
}

void sha256_transform::thread_xor_ln40_fu_577_p2() {
    xor_ln40_fu_577_p2 = (zext_ln40_5_fu_573_p1.read() ^ or_ln40_1_fu_555_p3.read());
}

void sha256_transform::thread_xor_ln53_1_fu_771_p2() {
    xor_ln53_1_fu_771_p2 = (xor_ln53_fu_765_p2.read() ^ or_ln53_2_fu_757_p3.read());
}

void sha256_transform::thread_xor_ln53_2_fu_783_p2() {
    xor_ln53_2_fu_783_p2 = (f_reg_367.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_transform::thread_xor_ln53_3_fu_795_p2() {
    xor_ln53_3_fu_795_p2 = (and_ln53_fu_777_p2.read() ^ and_ln53_1_fu_789_p2.read());
}

void sha256_transform::thread_xor_ln53_fu_765_p2() {
    xor_ln53_fu_765_p2 = (or_ln1_fu_713_p3.read() ^ or_ln53_1_fu_735_p3.read());
}

void sha256_transform::thread_xor_ln54_1_fu_1014_p2() {
    xor_ln54_1_fu_1014_p2 = (xor_ln54_fu_1008_p2.read() ^ or_ln54_2_fu_1000_p3.read());
}

void sha256_transform::thread_xor_ln54_2_fu_819_p2() {
    xor_ln54_2_fu_819_p2 = (c_reg_399.read() ^ d_reg_388.read());
}

void sha256_transform::thread_xor_ln54_3_fu_837_p2() {
    xor_ln54_3_fu_837_p2 = (and_ln54_fu_825_p2.read() ^ and_ln54_1_fu_831_p2.read());
}

void sha256_transform::thread_xor_ln54_fu_1008_p2() {
    xor_ln54_fu_1008_p2 = (or_ln2_fu_956_p3.read() ^ or_ln54_1_fu_978_p3.read());
}

void sha256_transform::thread_zext_ln36_fu_448_p1() {
    zext_ln36_fu_448_p1 = esl_zext<64,5>(i_0_reg_313.read());
}

void sha256_transform::thread_zext_ln40_1_fu_492_p1() {
    zext_ln40_1_fu_492_p1 = esl_zext<64,7>(add_ln40_1_fu_486_p2.read());
}

void sha256_transform::thread_zext_ln40_2_fu_503_p1() {
    zext_ln40_2_fu_503_p1 = esl_zext<64,7>(add_ln40_2_fu_497_p2.read());
}

void sha256_transform::thread_zext_ln40_3_fu_514_p1() {
    zext_ln40_3_fu_514_p1 = esl_zext<64,7>(add_ln40_3_fu_508_p2.read());
}

void sha256_transform::thread_zext_ln40_4_fu_676_p1() {
    zext_ln40_4_fu_676_p1 = esl_zext<64,7>(i_1_reg_324.read());
}

void sha256_transform::thread_zext_ln40_5_fu_573_p1() {
    zext_ln40_5_fu_573_p1 = esl_zext<32,22>(lshr_ln40_2_fu_563_p4.read());
}

void sha256_transform::thread_zext_ln40_6_fu_643_p1() {
    zext_ln40_6_fu_643_p1 = esl_zext<32,29>(lshr_ln40_5_fu_633_p4.read());
}

void sha256_transform::thread_zext_ln40_fu_481_p1() {
    zext_ln40_fu_481_p1 = esl_zext<64,7>(add_ln40_fu_475_p2.read());
}

void sha256_transform::thread_zext_ln53_fu_801_p1() {
    zext_ln53_fu_801_p1 = esl_zext<64,7>(i_2_reg_421.read());
}

void sha256_transform::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln34_fu_436_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln38_fu_469_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln51_fu_687_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

