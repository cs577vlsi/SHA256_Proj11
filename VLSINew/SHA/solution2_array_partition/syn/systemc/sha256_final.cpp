// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> sha256_final::ap_ST_fsm_state1 = "1";
const sc_lv<11> sha256_final::ap_ST_fsm_state2 = "10";
const sc_lv<11> sha256_final::ap_ST_fsm_state3 = "100";
const sc_lv<11> sha256_final::ap_ST_fsm_state4 = "1000";
const sc_lv<11> sha256_final::ap_ST_fsm_state5 = "10000";
const sc_lv<11> sha256_final::ap_ST_fsm_state6 = "100000";
const sc_lv<11> sha256_final::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> sha256_final::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> sha256_final::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> sha256_final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> sha256_final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> sha256_final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_2 = "10";
const sc_lv<32> sha256_final::ap_const_lv32_6 = "110";
const sc_lv<32> sha256_final::ap_const_lv32_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_final::ap_const_lv1_0 = "0";
const sc_lv<32> sha256_final::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_final::ap_const_lv32_7 = "111";
const sc_lv<1> sha256_final::ap_const_lv1_1 = "1";
const sc_lv<6> sha256_final::ap_const_lv6_0 = "000000";
const sc_lv<3> sha256_final::ap_const_lv3_0 = "000";
const sc_lv<32> sha256_final::ap_const_lv32_A = "1010";
const sc_lv<32> sha256_final::ap_const_lv32_5 = "101";
const sc_lv<64> sha256_final::ap_const_lv64_F = "1111";
const sc_lv<64> sha256_final::ap_const_lv64_E = "1110";
const sc_lv<32> sha256_final::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_final::ap_const_lv32_9 = "1001";
const sc_lv<2> sha256_final::ap_const_lv2_2 = "10";
const sc_lv<8> sha256_final::ap_const_lv8_80 = "10000000";
const sc_lv<2> sha256_final::ap_const_lv2_1 = "1";
const sc_lv<8> sha256_final::ap_const_lv8_0 = "00000000";
const sc_lv<2> sha256_final::ap_const_lv2_0 = "00";
const sc_lv<2> sha256_final::ap_const_lv2_3 = "11";
const sc_lv<32> sha256_final::ap_const_lv32_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_1F = "11111";
const sc_lv<26> sha256_final::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> sha256_final::ap_const_lv6_38 = "111000";
const sc_lv<6> sha256_final::ap_const_lv6_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_final::ap_const_lv32_F = "1111";
const sc_lv<32> sha256_final::ap_const_lv32_10 = "10000";
const sc_lv<32> sha256_final::ap_const_lv32_17 = "10111";
const sc_lv<32> sha256_final::ap_const_lv32_18 = "11000";
const sc_lv<32> sha256_final::ap_const_lv32_37 = "110111";
const sc_lv<3> sha256_final::ap_const_lv3_4 = "100";
const sc_lv<3> sha256_final::ap_const_lv3_1 = "1";
const sc_lv<5> sha256_final::ap_const_lv5_18 = "11000";
const sc_lv<5> sha256_final::ap_const_lv5_14 = "10100";
const bool sha256_final::ap_const_boolean_1 = true;

sha256_final::sha256_final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sha256_transform_fu_654 = new sha256_transform("grp_sha256_transform_fu_654");
    grp_sha256_transform_fu_654->ap_clk(ap_clk);
    grp_sha256_transform_fu_654->ap_rst(ap_rst);
    grp_sha256_transform_fu_654->ap_start(grp_sha256_transform_fu_654_ap_start);
    grp_sha256_transform_fu_654->ap_done(grp_sha256_transform_fu_654_ap_done);
    grp_sha256_transform_fu_654->ap_idle(grp_sha256_transform_fu_654_ap_idle);
    grp_sha256_transform_fu_654->ap_ready(grp_sha256_transform_fu_654_ap_ready);
    grp_sha256_transform_fu_654->ctx_state_0_read(grp_sha256_transform_fu_654_ctx_state_0_read);
    grp_sha256_transform_fu_654->ctx_state_1_read(grp_sha256_transform_fu_654_ctx_state_1_read);
    grp_sha256_transform_fu_654->ctx_state_2_read(grp_sha256_transform_fu_654_ctx_state_2_read);
    grp_sha256_transform_fu_654->ctx_state_3_read(grp_sha256_transform_fu_654_ctx_state_3_read);
    grp_sha256_transform_fu_654->ctx_state_4_read(grp_sha256_transform_fu_654_ctx_state_4_read);
    grp_sha256_transform_fu_654->ctx_state_5_read(grp_sha256_transform_fu_654_ctx_state_5_read);
    grp_sha256_transform_fu_654->ctx_state_6_read(grp_sha256_transform_fu_654_ctx_state_6_read);
    grp_sha256_transform_fu_654->ctx_state_7_read(grp_sha256_transform_fu_654_ctx_state_7_read);
    grp_sha256_transform_fu_654->data_0_address0(grp_sha256_transform_fu_654_data_0_address0);
    grp_sha256_transform_fu_654->data_0_ce0(grp_sha256_transform_fu_654_data_0_ce0);
    grp_sha256_transform_fu_654->data_0_q0(ctx_data_0_q0);
    grp_sha256_transform_fu_654->data_1_address0(grp_sha256_transform_fu_654_data_1_address0);
    grp_sha256_transform_fu_654->data_1_ce0(grp_sha256_transform_fu_654_data_1_ce0);
    grp_sha256_transform_fu_654->data_1_q0(ctx_data_1_q0);
    grp_sha256_transform_fu_654->data_2_address0(grp_sha256_transform_fu_654_data_2_address0);
    grp_sha256_transform_fu_654->data_2_ce0(grp_sha256_transform_fu_654_data_2_ce0);
    grp_sha256_transform_fu_654->data_2_q0(ctx_data_2_q0);
    grp_sha256_transform_fu_654->data_3_address0(grp_sha256_transform_fu_654_data_3_address0);
    grp_sha256_transform_fu_654->data_3_ce0(grp_sha256_transform_fu_654_data_3_ce0);
    grp_sha256_transform_fu_654->data_3_q0(ctx_data_3_q0);
    grp_sha256_transform_fu_654->ap_return_0(grp_sha256_transform_fu_654_ap_return_0);
    grp_sha256_transform_fu_654->ap_return_1(grp_sha256_transform_fu_654_ap_return_1);
    grp_sha256_transform_fu_654->ap_return_2(grp_sha256_transform_fu_654_ap_return_2);
    grp_sha256_transform_fu_654->ap_return_3(grp_sha256_transform_fu_654_ap_return_3);
    grp_sha256_transform_fu_654->ap_return_4(grp_sha256_transform_fu_654_ap_return_4);
    grp_sha256_transform_fu_654->ap_return_5(grp_sha256_transform_fu_654_ap_return_5);
    grp_sha256_transform_fu_654->ap_return_6(grp_sha256_transform_fu_654_ap_return_6);
    grp_sha256_transform_fu_654->ap_return_7(grp_sha256_transform_fu_654_ap_return_7);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln134_1_fu_932_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( shl_ln134_fu_862_p2 );

    SC_METHOD(thread_add_ln134_fu_878_p2);
    sensitive << ( p_read3 );

    SC_METHOD(thread_add_ln135_1_fu_937_p2);
    sensitive << ( trunc_ln134_7_fu_924_p3 );
    sensitive << ( trunc_ln134_6_fu_918_p1 );

    SC_METHOD(thread_add_ln135_2_fu_943_p2);
    sensitive << ( trunc_ln134_5_fu_910_p3 );
    sensitive << ( trunc_ln134_3_fu_904_p1 );

    SC_METHOD(thread_add_ln135_fu_949_p2);
    sensitive << ( trunc_ln134_fu_890_p1 );
    sensitive << ( trunc_ln134_1_fu_896_p3 );

    SC_METHOD(thread_add_ln154_fu_1231_p2);
    sensitive << ( zext_ln147_reg_1370 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln147_fu_1065_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln147_fu_1065_p2 );

    SC_METHOD(thread_ctx_data_0_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_0_address0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( zext_ln114_fu_776_p1 );
    sensitive << ( zext_ln124_fu_820_p1 );
    sensitive << ( zext_ln128_fu_854_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_0_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln117_fu_1053_p1 );

    SC_METHOD(thread_ctx_data_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_0_ce0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_0_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ctx_data_0_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );
    sensitive << ( add_ln134_1_fu_932_p2 );

    SC_METHOD(thread_ctx_data_0_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln134_fu_883_p3 );

    SC_METHOD(thread_ctx_data_0_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln114_fu_762_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_0_we1);
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( icmp_ln115_fu_1033_p2 );
    sensitive << ( trunc_ln117_fu_1039_p1 );

    SC_METHOD(thread_ctx_data_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_1_address0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( zext_ln114_fu_776_p1 );
    sensitive << ( zext_ln124_fu_820_p1 );
    sensitive << ( zext_ln128_fu_854_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_1_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln117_fu_1053_p1 );

    SC_METHOD(thread_ctx_data_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_1_ce0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_1_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ctx_data_1_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );
    sensitive << ( add_ln135_1_fu_937_p2 );

    SC_METHOD(thread_ctx_data_1_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln134_fu_883_p3 );

    SC_METHOD(thread_ctx_data_1_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln114_fu_762_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_1_we1);
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( icmp_ln115_fu_1033_p2 );
    sensitive << ( trunc_ln117_fu_1039_p1 );

    SC_METHOD(thread_ctx_data_2_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_2_address0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( zext_ln114_fu_776_p1 );
    sensitive << ( zext_ln124_fu_820_p1 );
    sensitive << ( zext_ln128_fu_854_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_2_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln117_fu_1053_p1 );

    SC_METHOD(thread_ctx_data_2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_2_ce0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_2_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ctx_data_2_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );
    sensitive << ( add_ln135_2_fu_943_p2 );

    SC_METHOD(thread_ctx_data_2_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln134_fu_883_p3 );

    SC_METHOD(thread_ctx_data_2_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln114_fu_762_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_2_we1);
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( icmp_ln115_fu_1033_p2 );
    sensitive << ( trunc_ln117_fu_1039_p1 );

    SC_METHOD(thread_ctx_data_3_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_3_address0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( zext_ln114_fu_776_p1 );
    sensitive << ( zext_ln124_fu_820_p1 );
    sensitive << ( zext_ln128_fu_854_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_3_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln117_fu_1053_p1 );

    SC_METHOD(thread_ctx_data_3_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_sha256_transform_fu_654_data_3_ce0 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_3_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ctx_data_3_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );
    sensitive << ( add_ln135_fu_949_p2 );

    SC_METHOD(thread_ctx_data_3_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln139_fu_989_p1 );

    SC_METHOD(thread_ctx_data_3_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( trunc_ln114_fu_762_p1 );
    sensitive << ( trunc_ln124_fu_806_p1 );
    sensitive << ( trunc_ln128_fu_840_p1 );

    SC_METHOD(thread_ctx_data_3_we1);
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( icmp_ln115_fu_1033_p2 );
    sensitive << ( trunc_ln117_fu_1039_p1 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ap_start);
    sensitive << ( grp_sha256_transform_fu_654_ap_start_reg );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_0_read);
    sensitive << ( p_read2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_0_0_reg_562 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_1_read);
    sensitive << ( p_read4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_1_0_reg_572 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_2_read);
    sensitive << ( p_read5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_2_0_reg_582 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_3_read);
    sensitive << ( p_read6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_3_0_reg_592 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_4_read);
    sensitive << ( p_read7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_4_0_reg_602 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_5_read);
    sensitive << ( p_read8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_5_0_reg_612 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_6_read);
    sensitive << ( p_read9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_6_0_reg_622 );

    SC_METHOD(thread_grp_sha256_transform_fu_654_ctx_state_7_read);
    sensitive << ( p_read10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ctx_state_7_0_reg_632 );

    SC_METHOD(thread_hash_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln150_fu_1126_p1 );
    sensitive << ( zext_ln149_fu_1205_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln153_fu_1226_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln155_fu_1244_p1 );

    SC_METHOD(thread_hash_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln151_fu_1150_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln152_fu_1213_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln154_fu_1236_p1 );
    sensitive << ( zext_ln156_fu_1252_p1 );

    SC_METHOD(thread_hash_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_hash_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_hash_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( trunc_ln149_1_reg_1383 );
    sensitive << ( trunc_ln153_reg_1404 );
    sensitive << ( trunc_ln155_reg_1414 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( trunc_ln150_fu_1115_p1 );

    SC_METHOD(thread_hash_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( trunc_ln152_reg_1399 );
    sensitive << ( trunc_ln154_reg_1409 );
    sensitive << ( trunc_ln156_reg_1419 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( trunc_ln151_fu_1137_p1 );

    SC_METHOD(thread_hash_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln147_fu_1065_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_hash_we1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln147_fu_1065_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_i_4_fu_784_p2);
    sensitive << ( i_1_in_reg_533 );

    SC_METHOD(thread_i_5_fu_834_p2);
    sensitive << ( i_2_reg_542 );

    SC_METHOD(thread_i_6_fu_1071_p2);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_i_fu_1027_p2);
    sensitive << ( i_0_in_reg_553 );

    SC_METHOD(thread_icmp_ln113_fu_756_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_icmp_ln115_fu_1033_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_in_reg_553 );

    SC_METHOD(thread_icmp_ln122_fu_800_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_790_p4 );

    SC_METHOD(thread_icmp_ln127_fu_828_p2);
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_542 );

    SC_METHOD(thread_icmp_ln134_fu_873_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( xor_ln134_fu_867_p2 );

    SC_METHOD(thread_icmp_ln147_fu_1065_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_lshr_ln149_fu_1099_p2);
    sensitive << ( reg_716 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln150_fu_1109_p2);
    sensitive << ( reg_721 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln151_fu_1131_p2);
    sensitive << ( reg_726 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln152_fu_1155_p2);
    sensitive << ( reg_731 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln153_fu_1165_p2);
    sensitive << ( reg_736 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln154_fu_1175_p2);
    sensitive << ( reg_741 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln155_fu_1185_p2);
    sensitive << ( reg_746 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln156_fu_1195_p2);
    sensitive << ( reg_751 );
    sensitive << ( zext_ln149_1_fu_1095_p1 );

    SC_METHOD(thread_lshr_ln3_fu_1043_p4);
    sensitive << ( i_fu_1027_p2 );

    SC_METHOD(thread_lshr_ln4_fu_810_p4);
    sensitive << ( i_4_fu_784_p2 );

    SC_METHOD(thread_lshr_ln5_fu_844_p4);
    sensitive << ( i_2_reg_542 );

    SC_METHOD(thread_lshr_ln_fu_766_p4);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_or_ln3_fu_1218_p3);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_or_ln_fu_1142_p3);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_select_ln134_fu_883_p3);
    sensitive << ( p_read3 );
    sensitive << ( icmp_ln134_fu_873_p2 );
    sensitive << ( add_ln134_fu_878_p2 );

    SC_METHOD(thread_sext_ln152_fu_1210_p1);
    sensitive << ( xor_ln150_reg_1388 );

    SC_METHOD(thread_sext_ln155_fu_1241_p1);
    sensitive << ( or_ln_reg_1394 );

    SC_METHOD(thread_sext_ln156_fu_1249_p1);
    sensitive << ( xor_ln150_reg_1388 );

    SC_METHOD(thread_shl_ln134_fu_862_p2);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_shl_ln1_fu_1081_p3);
    sensitive << ( trunc_ln149_fu_1077_p1 );

    SC_METHOD(thread_sub_ln149_fu_1089_p2);
    sensitive << ( shl_ln1_fu_1081_p3 );

    SC_METHOD(thread_tmp_2_fu_790_p4);
    sensitive << ( i_4_fu_784_p2 );

    SC_METHOD(thread_trunc_ln114_fu_762_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln117_fu_1039_p1);
    sensitive << ( i_0_in_reg_553 );

    SC_METHOD(thread_trunc_ln124_fu_806_p1);
    sensitive << ( i_1_in_reg_533 );

    SC_METHOD(thread_trunc_ln128_fu_840_p1);
    sensitive << ( i_2_reg_542 );

    SC_METHOD(thread_trunc_ln134_1_fu_896_p3);
    sensitive << ( trunc_ln134_2_fu_893_p1 );

    SC_METHOD(thread_trunc_ln134_2_fu_893_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_3_fu_904_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln134_4_fu_907_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_5_fu_910_p3);
    sensitive << ( trunc_ln134_4_fu_907_p1 );

    SC_METHOD(thread_trunc_ln134_6_fu_918_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln134_7_fu_924_p3);
    sensitive << ( trunc_ln134_8_fu_921_p1 );

    SC_METHOD(thread_trunc_ln134_8_fu_921_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_trunc_ln134_fu_890_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_trunc_ln139_fu_989_p1);
    sensitive << ( select_ln134_fu_883_p3 );

    SC_METHOD(thread_trunc_ln149_1_fu_1105_p1);
    sensitive << ( lshr_ln149_fu_1099_p2 );

    SC_METHOD(thread_trunc_ln149_fu_1077_p1);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_trunc_ln150_fu_1115_p1);
    sensitive << ( lshr_ln150_fu_1109_p2 );

    SC_METHOD(thread_trunc_ln151_fu_1137_p1);
    sensitive << ( lshr_ln151_fu_1131_p2 );

    SC_METHOD(thread_trunc_ln152_fu_1161_p1);
    sensitive << ( lshr_ln152_fu_1155_p2 );

    SC_METHOD(thread_trunc_ln153_fu_1171_p1);
    sensitive << ( lshr_ln153_fu_1165_p2 );

    SC_METHOD(thread_trunc_ln154_fu_1181_p1);
    sensitive << ( lshr_ln154_fu_1175_p2 );

    SC_METHOD(thread_trunc_ln155_fu_1191_p1);
    sensitive << ( lshr_ln155_fu_1185_p2 );

    SC_METHOD(thread_trunc_ln156_fu_1201_p1);
    sensitive << ( lshr_ln156_fu_1195_p2 );

    SC_METHOD(thread_xor_ln134_fu_867_p2);
    sensitive << ( shl_ln134_fu_862_p2 );

    SC_METHOD(thread_xor_ln150_fu_1120_p2);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_zext_ln114_fu_776_p1);
    sensitive << ( lshr_ln_fu_766_p4 );

    SC_METHOD(thread_zext_ln117_fu_1053_p1);
    sensitive << ( lshr_ln3_fu_1043_p4 );

    SC_METHOD(thread_zext_ln124_fu_820_p1);
    sensitive << ( lshr_ln4_fu_810_p4 );

    SC_METHOD(thread_zext_ln128_fu_854_p1);
    sensitive << ( lshr_ln5_fu_844_p4 );

    SC_METHOD(thread_zext_ln147_fu_1061_p1);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_zext_ln149_1_fu_1095_p1);
    sensitive << ( sub_ln149_fu_1089_p2 );

    SC_METHOD(thread_zext_ln149_fu_1205_p1);
    sensitive << ( i_3_reg_642 );

    SC_METHOD(thread_zext_ln150_fu_1126_p1);
    sensitive << ( xor_ln150_fu_1120_p2 );

    SC_METHOD(thread_zext_ln151_fu_1150_p1);
    sensitive << ( or_ln_fu_1142_p3 );

    SC_METHOD(thread_zext_ln152_fu_1213_p1);
    sensitive << ( sext_ln152_fu_1210_p1 );

    SC_METHOD(thread_zext_ln153_fu_1226_p1);
    sensitive << ( or_ln3_fu_1218_p3 );

    SC_METHOD(thread_zext_ln154_fu_1236_p1);
    sensitive << ( add_ln154_fu_1231_p2 );

    SC_METHOD(thread_zext_ln155_fu_1244_p1);
    sensitive << ( sext_ln155_fu_1241_p1 );

    SC_METHOD(thread_zext_ln156_fu_1252_p1);
    sensitive << ( sext_ln156_fu_1249_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_sha256_transform_fu_654_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln113_fu_756_p2 );
    sensitive << ( icmp_ln113_reg_1330 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln147_fu_1065_p2 );
    sensitive << ( icmp_ln122_fu_800_p2 );
    sensitive << ( icmp_ln127_fu_828_p2 );
    sensitive << ( icmp_ln115_fu_1033_p2 );

    ap_CS_fsm = "00000000001";
    grp_sha256_transform_fu_654_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_data_0_address0, "(port)ctx_data_0_address0");
    sc_trace(mVcdFile, ctx_data_0_ce0, "(port)ctx_data_0_ce0");
    sc_trace(mVcdFile, ctx_data_0_we0, "(port)ctx_data_0_we0");
    sc_trace(mVcdFile, ctx_data_0_d0, "(port)ctx_data_0_d0");
    sc_trace(mVcdFile, ctx_data_0_q0, "(port)ctx_data_0_q0");
    sc_trace(mVcdFile, ctx_data_0_address1, "(port)ctx_data_0_address1");
    sc_trace(mVcdFile, ctx_data_0_ce1, "(port)ctx_data_0_ce1");
    sc_trace(mVcdFile, ctx_data_0_we1, "(port)ctx_data_0_we1");
    sc_trace(mVcdFile, ctx_data_0_d1, "(port)ctx_data_0_d1");
    sc_trace(mVcdFile, ctx_data_1_address0, "(port)ctx_data_1_address0");
    sc_trace(mVcdFile, ctx_data_1_ce0, "(port)ctx_data_1_ce0");
    sc_trace(mVcdFile, ctx_data_1_we0, "(port)ctx_data_1_we0");
    sc_trace(mVcdFile, ctx_data_1_d0, "(port)ctx_data_1_d0");
    sc_trace(mVcdFile, ctx_data_1_q0, "(port)ctx_data_1_q0");
    sc_trace(mVcdFile, ctx_data_1_address1, "(port)ctx_data_1_address1");
    sc_trace(mVcdFile, ctx_data_1_ce1, "(port)ctx_data_1_ce1");
    sc_trace(mVcdFile, ctx_data_1_we1, "(port)ctx_data_1_we1");
    sc_trace(mVcdFile, ctx_data_1_d1, "(port)ctx_data_1_d1");
    sc_trace(mVcdFile, ctx_data_2_address0, "(port)ctx_data_2_address0");
    sc_trace(mVcdFile, ctx_data_2_ce0, "(port)ctx_data_2_ce0");
    sc_trace(mVcdFile, ctx_data_2_we0, "(port)ctx_data_2_we0");
    sc_trace(mVcdFile, ctx_data_2_d0, "(port)ctx_data_2_d0");
    sc_trace(mVcdFile, ctx_data_2_q0, "(port)ctx_data_2_q0");
    sc_trace(mVcdFile, ctx_data_2_address1, "(port)ctx_data_2_address1");
    sc_trace(mVcdFile, ctx_data_2_ce1, "(port)ctx_data_2_ce1");
    sc_trace(mVcdFile, ctx_data_2_we1, "(port)ctx_data_2_we1");
    sc_trace(mVcdFile, ctx_data_2_d1, "(port)ctx_data_2_d1");
    sc_trace(mVcdFile, ctx_data_3_address0, "(port)ctx_data_3_address0");
    sc_trace(mVcdFile, ctx_data_3_ce0, "(port)ctx_data_3_ce0");
    sc_trace(mVcdFile, ctx_data_3_we0, "(port)ctx_data_3_we0");
    sc_trace(mVcdFile, ctx_data_3_d0, "(port)ctx_data_3_d0");
    sc_trace(mVcdFile, ctx_data_3_q0, "(port)ctx_data_3_q0");
    sc_trace(mVcdFile, ctx_data_3_address1, "(port)ctx_data_3_address1");
    sc_trace(mVcdFile, ctx_data_3_ce1, "(port)ctx_data_3_ce1");
    sc_trace(mVcdFile, ctx_data_3_we1, "(port)ctx_data_3_we1");
    sc_trace(mVcdFile, ctx_data_3_d1, "(port)ctx_data_3_d1");
    sc_trace(mVcdFile, ctx_datalen_read, "(port)ctx_datalen_read");
    sc_trace(mVcdFile, ctx_bitlen_0_read, "(port)ctx_bitlen_0_read");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, hash_address0, "(port)hash_address0");
    sc_trace(mVcdFile, hash_ce0, "(port)hash_ce0");
    sc_trace(mVcdFile, hash_we0, "(port)hash_we0");
    sc_trace(mVcdFile, hash_d0, "(port)hash_d0");
    sc_trace(mVcdFile, hash_address1, "(port)hash_address1");
    sc_trace(mVcdFile, hash_ce1, "(port)hash_ce1");
    sc_trace(mVcdFile, hash_we1, "(port)hash_we1");
    sc_trace(mVcdFile, hash_d1, "(port)hash_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_716, "reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_ready, "grp_sha256_transform_fu_654_ap_ready");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_done, "grp_sha256_transform_fu_654_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, reg_721, "reg_721");
    sc_trace(mVcdFile, reg_726, "reg_726");
    sc_trace(mVcdFile, reg_731, "reg_731");
    sc_trace(mVcdFile, reg_736, "reg_736");
    sc_trace(mVcdFile, reg_741, "reg_741");
    sc_trace(mVcdFile, reg_746, "reg_746");
    sc_trace(mVcdFile, reg_751, "reg_751");
    sc_trace(mVcdFile, icmp_ln113_fu_756_p2, "icmp_ln113_fu_756_p2");
    sc_trace(mVcdFile, icmp_ln113_reg_1330, "icmp_ln113_reg_1330");
    sc_trace(mVcdFile, i_4_fu_784_p2, "i_4_fu_784_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_5_fu_834_p2, "i_5_fu_834_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_1027_p2, "i_fu_1027_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln147_fu_1061_p1, "zext_ln147_fu_1061_p1");
    sc_trace(mVcdFile, zext_ln147_reg_1370, "zext_ln147_reg_1370");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_6_fu_1071_p2, "i_6_fu_1071_p2");
    sc_trace(mVcdFile, i_6_reg_1378, "i_6_reg_1378");
    sc_trace(mVcdFile, trunc_ln149_1_fu_1105_p1, "trunc_ln149_1_fu_1105_p1");
    sc_trace(mVcdFile, trunc_ln149_1_reg_1383, "trunc_ln149_1_reg_1383");
    sc_trace(mVcdFile, icmp_ln147_fu_1065_p2, "icmp_ln147_fu_1065_p2");
    sc_trace(mVcdFile, xor_ln150_fu_1120_p2, "xor_ln150_fu_1120_p2");
    sc_trace(mVcdFile, xor_ln150_reg_1388, "xor_ln150_reg_1388");
    sc_trace(mVcdFile, or_ln_fu_1142_p3, "or_ln_fu_1142_p3");
    sc_trace(mVcdFile, or_ln_reg_1394, "or_ln_reg_1394");
    sc_trace(mVcdFile, trunc_ln152_fu_1161_p1, "trunc_ln152_fu_1161_p1");
    sc_trace(mVcdFile, trunc_ln152_reg_1399, "trunc_ln152_reg_1399");
    sc_trace(mVcdFile, trunc_ln153_fu_1171_p1, "trunc_ln153_fu_1171_p1");
    sc_trace(mVcdFile, trunc_ln153_reg_1404, "trunc_ln153_reg_1404");
    sc_trace(mVcdFile, trunc_ln154_fu_1181_p1, "trunc_ln154_fu_1181_p1");
    sc_trace(mVcdFile, trunc_ln154_reg_1409, "trunc_ln154_reg_1409");
    sc_trace(mVcdFile, trunc_ln155_fu_1191_p1, "trunc_ln155_fu_1191_p1");
    sc_trace(mVcdFile, trunc_ln155_reg_1414, "trunc_ln155_reg_1414");
    sc_trace(mVcdFile, trunc_ln156_fu_1201_p1, "trunc_ln156_fu_1201_p1");
    sc_trace(mVcdFile, trunc_ln156_reg_1419, "trunc_ln156_reg_1419");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_start, "grp_sha256_transform_fu_654_ap_start");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_idle, "grp_sha256_transform_fu_654_ap_idle");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_0_read, "grp_sha256_transform_fu_654_ctx_state_0_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_1_read, "grp_sha256_transform_fu_654_ctx_state_1_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_2_read, "grp_sha256_transform_fu_654_ctx_state_2_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_3_read, "grp_sha256_transform_fu_654_ctx_state_3_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_4_read, "grp_sha256_transform_fu_654_ctx_state_4_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_5_read, "grp_sha256_transform_fu_654_ctx_state_5_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_6_read, "grp_sha256_transform_fu_654_ctx_state_6_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ctx_state_7_read, "grp_sha256_transform_fu_654_ctx_state_7_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_0_address0, "grp_sha256_transform_fu_654_data_0_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_0_ce0, "grp_sha256_transform_fu_654_data_0_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_1_address0, "grp_sha256_transform_fu_654_data_1_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_1_ce0, "grp_sha256_transform_fu_654_data_1_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_2_address0, "grp_sha256_transform_fu_654_data_2_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_2_ce0, "grp_sha256_transform_fu_654_data_2_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_3_address0, "grp_sha256_transform_fu_654_data_3_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_data_3_ce0, "grp_sha256_transform_fu_654_data_3_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_0, "grp_sha256_transform_fu_654_ap_return_0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_1, "grp_sha256_transform_fu_654_ap_return_1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_2, "grp_sha256_transform_fu_654_ap_return_2");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_3, "grp_sha256_transform_fu_654_ap_return_3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_4, "grp_sha256_transform_fu_654_ap_return_4");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_5, "grp_sha256_transform_fu_654_ap_return_5");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_6, "grp_sha256_transform_fu_654_ap_return_6");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_return_7, "grp_sha256_transform_fu_654_ap_return_7");
    sc_trace(mVcdFile, i_1_in_reg_533, "i_1_in_reg_533");
    sc_trace(mVcdFile, icmp_ln122_fu_800_p2, "icmp_ln122_fu_800_p2");
    sc_trace(mVcdFile, i_2_reg_542, "i_2_reg_542");
    sc_trace(mVcdFile, icmp_ln127_fu_828_p2, "icmp_ln127_fu_828_p2");
    sc_trace(mVcdFile, i_0_in_reg_553, "i_0_in_reg_553");
    sc_trace(mVcdFile, icmp_ln115_fu_1033_p2, "icmp_ln115_fu_1033_p2");
    sc_trace(mVcdFile, ctx_state_0_0_reg_562, "ctx_state_0_0_reg_562");
    sc_trace(mVcdFile, ctx_state_1_0_reg_572, "ctx_state_1_0_reg_572");
    sc_trace(mVcdFile, ctx_state_2_0_reg_582, "ctx_state_2_0_reg_582");
    sc_trace(mVcdFile, ctx_state_3_0_reg_592, "ctx_state_3_0_reg_592");
    sc_trace(mVcdFile, ctx_state_4_0_reg_602, "ctx_state_4_0_reg_602");
    sc_trace(mVcdFile, ctx_state_5_0_reg_612, "ctx_state_5_0_reg_612");
    sc_trace(mVcdFile, ctx_state_6_0_reg_622, "ctx_state_6_0_reg_622");
    sc_trace(mVcdFile, ctx_state_7_0_reg_632, "ctx_state_7_0_reg_632");
    sc_trace(mVcdFile, i_3_reg_642, "i_3_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_sha256_transform_fu_654_ap_start_reg, "grp_sha256_transform_fu_654_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln114_fu_776_p1, "zext_ln114_fu_776_p1");
    sc_trace(mVcdFile, zext_ln124_fu_820_p1, "zext_ln124_fu_820_p1");
    sc_trace(mVcdFile, zext_ln128_fu_854_p1, "zext_ln128_fu_854_p1");
    sc_trace(mVcdFile, zext_ln117_fu_1053_p1, "zext_ln117_fu_1053_p1");
    sc_trace(mVcdFile, zext_ln150_fu_1126_p1, "zext_ln150_fu_1126_p1");
    sc_trace(mVcdFile, zext_ln151_fu_1150_p1, "zext_ln151_fu_1150_p1");
    sc_trace(mVcdFile, zext_ln149_fu_1205_p1, "zext_ln149_fu_1205_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln152_fu_1213_p1, "zext_ln152_fu_1213_p1");
    sc_trace(mVcdFile, zext_ln153_fu_1226_p1, "zext_ln153_fu_1226_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln154_fu_1236_p1, "zext_ln154_fu_1236_p1");
    sc_trace(mVcdFile, zext_ln155_fu_1244_p1, "zext_ln155_fu_1244_p1");
    sc_trace(mVcdFile, zext_ln156_fu_1252_p1, "zext_ln156_fu_1252_p1");
    sc_trace(mVcdFile, trunc_ln114_fu_762_p1, "trunc_ln114_fu_762_p1");
    sc_trace(mVcdFile, trunc_ln124_fu_806_p1, "trunc_ln124_fu_806_p1");
    sc_trace(mVcdFile, trunc_ln128_fu_840_p1, "trunc_ln128_fu_840_p1");
    sc_trace(mVcdFile, trunc_ln117_fu_1039_p1, "trunc_ln117_fu_1039_p1");
    sc_trace(mVcdFile, add_ln135_fu_949_p2, "add_ln135_fu_949_p2");
    sc_trace(mVcdFile, trunc_ln139_fu_989_p1, "trunc_ln139_fu_989_p1");
    sc_trace(mVcdFile, trunc_ln150_fu_1115_p1, "trunc_ln150_fu_1115_p1");
    sc_trace(mVcdFile, trunc_ln151_fu_1137_p1, "trunc_ln151_fu_1137_p1");
    sc_trace(mVcdFile, lshr_ln_fu_766_p4, "lshr_ln_fu_766_p4");
    sc_trace(mVcdFile, tmp_2_fu_790_p4, "tmp_2_fu_790_p4");
    sc_trace(mVcdFile, lshr_ln4_fu_810_p4, "lshr_ln4_fu_810_p4");
    sc_trace(mVcdFile, lshr_ln5_fu_844_p4, "lshr_ln5_fu_844_p4");
    sc_trace(mVcdFile, shl_ln134_fu_862_p2, "shl_ln134_fu_862_p2");
    sc_trace(mVcdFile, xor_ln134_fu_867_p2, "xor_ln134_fu_867_p2");
    sc_trace(mVcdFile, icmp_ln134_fu_873_p2, "icmp_ln134_fu_873_p2");
    sc_trace(mVcdFile, add_ln134_fu_878_p2, "add_ln134_fu_878_p2");
    sc_trace(mVcdFile, trunc_ln134_2_fu_893_p1, "trunc_ln134_2_fu_893_p1");
    sc_trace(mVcdFile, trunc_ln134_4_fu_907_p1, "trunc_ln134_4_fu_907_p1");
    sc_trace(mVcdFile, trunc_ln134_8_fu_921_p1, "trunc_ln134_8_fu_921_p1");
    sc_trace(mVcdFile, trunc_ln134_7_fu_924_p3, "trunc_ln134_7_fu_924_p3");
    sc_trace(mVcdFile, trunc_ln134_6_fu_918_p1, "trunc_ln134_6_fu_918_p1");
    sc_trace(mVcdFile, trunc_ln134_5_fu_910_p3, "trunc_ln134_5_fu_910_p3");
    sc_trace(mVcdFile, trunc_ln134_3_fu_904_p1, "trunc_ln134_3_fu_904_p1");
    sc_trace(mVcdFile, trunc_ln134_fu_890_p1, "trunc_ln134_fu_890_p1");
    sc_trace(mVcdFile, trunc_ln134_1_fu_896_p3, "trunc_ln134_1_fu_896_p3");
    sc_trace(mVcdFile, add_ln135_2_fu_943_p2, "add_ln135_2_fu_943_p2");
    sc_trace(mVcdFile, add_ln135_1_fu_937_p2, "add_ln135_1_fu_937_p2");
    sc_trace(mVcdFile, add_ln134_1_fu_932_p2, "add_ln134_1_fu_932_p2");
    sc_trace(mVcdFile, select_ln134_fu_883_p3, "select_ln134_fu_883_p3");
    sc_trace(mVcdFile, lshr_ln3_fu_1043_p4, "lshr_ln3_fu_1043_p4");
    sc_trace(mVcdFile, trunc_ln149_fu_1077_p1, "trunc_ln149_fu_1077_p1");
    sc_trace(mVcdFile, shl_ln1_fu_1081_p3, "shl_ln1_fu_1081_p3");
    sc_trace(mVcdFile, sub_ln149_fu_1089_p2, "sub_ln149_fu_1089_p2");
    sc_trace(mVcdFile, zext_ln149_1_fu_1095_p1, "zext_ln149_1_fu_1095_p1");
    sc_trace(mVcdFile, lshr_ln149_fu_1099_p2, "lshr_ln149_fu_1099_p2");
    sc_trace(mVcdFile, lshr_ln150_fu_1109_p2, "lshr_ln150_fu_1109_p2");
    sc_trace(mVcdFile, lshr_ln151_fu_1131_p2, "lshr_ln151_fu_1131_p2");
    sc_trace(mVcdFile, lshr_ln152_fu_1155_p2, "lshr_ln152_fu_1155_p2");
    sc_trace(mVcdFile, lshr_ln153_fu_1165_p2, "lshr_ln153_fu_1165_p2");
    sc_trace(mVcdFile, lshr_ln154_fu_1175_p2, "lshr_ln154_fu_1175_p2");
    sc_trace(mVcdFile, lshr_ln155_fu_1185_p2, "lshr_ln155_fu_1185_p2");
    sc_trace(mVcdFile, lshr_ln156_fu_1195_p2, "lshr_ln156_fu_1195_p2");
    sc_trace(mVcdFile, sext_ln152_fu_1210_p1, "sext_ln152_fu_1210_p1");
    sc_trace(mVcdFile, or_ln3_fu_1218_p3, "or_ln3_fu_1218_p3");
    sc_trace(mVcdFile, add_ln154_fu_1231_p2, "add_ln154_fu_1231_p2");
    sc_trace(mVcdFile, sext_ln155_fu_1241_p1, "sext_ln155_fu_1241_p1");
    sc_trace(mVcdFile, sext_ln156_fu_1249_p1, "sext_ln156_fu_1249_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_final::~sha256_final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sha256_transform_fu_654;
}

void sha256_final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_0_0_reg_562 = p_read2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_0_0_reg_562 = reg_716.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_1_0_reg_572 = p_read4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_1_0_reg_572 = reg_721.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_2_0_reg_582 = p_read5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_2_0_reg_582 = reg_726.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_3_0_reg_592 = p_read6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_3_0_reg_592 = reg_731.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_4_0_reg_602 = p_read7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_4_0_reg_602 = reg_736.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_5_0_reg_612 = p_read8.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_5_0_reg_612 = reg_741.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_6_0_reg_622 = p_read9.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_6_0_reg_622 = reg_746.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
        ctx_state_7_0_reg_632 = p_read10.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()))) {
        ctx_state_7_0_reg_632 = reg_751.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sha256_transform_fu_654_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_800_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
            grp_sha256_transform_fu_654_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_654_ap_ready.read())) {
            grp_sha256_transform_fu_654_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln113_fu_756_p2.read(), ap_const_lv1_1))) {
        i_0_in_reg_553 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_1033_p2.read()))) {
        i_0_in_reg_553 = i_fu_1027_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln113_fu_756_p2.read(), ap_const_lv1_0))) {
        i_1_in_reg_533 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1))) {
        i_1_in_reg_533 = i_4_fu_784_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()))) {
        i_2_reg_542 = i_5_fu_834_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1))) {
        i_2_reg_542 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_642 = i_6_reg_1378.read();
    } else if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i_3_reg_642 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_6_reg_1378 = i_6_fu_1071_p2.read();
        zext_ln147_reg_1370 = zext_ln147_fu_1061_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        icmp_ln113_reg_1330 = icmp_ln113_fu_756_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_1065_p2.read()))) {
        or_ln_reg_1394 = or_ln_fu_1142_p3.read();
        trunc_ln149_1_reg_1383 = trunc_ln149_1_fu_1105_p1.read();
        trunc_ln152_reg_1399 = trunc_ln152_fu_1161_p1.read();
        trunc_ln153_reg_1404 = trunc_ln153_fu_1171_p1.read();
        trunc_ln154_reg_1409 = trunc_ln154_fu_1181_p1.read();
        trunc_ln155_reg_1414 = trunc_ln155_fu_1191_p1.read();
        trunc_ln156_reg_1419 = trunc_ln156_fu_1201_p1.read();
        xor_ln150_reg_1388 = xor_ln150_fu_1120_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())))) {
        reg_716 = grp_sha256_transform_fu_654_ap_return_0.read();
        reg_721 = grp_sha256_transform_fu_654_ap_return_1.read();
        reg_726 = grp_sha256_transform_fu_654_ap_return_2.read();
        reg_731 = grp_sha256_transform_fu_654_ap_return_3.read();
        reg_736 = grp_sha256_transform_fu_654_ap_return_4.read();
        reg_741 = grp_sha256_transform_fu_654_ap_return_5.read();
        reg_746 = grp_sha256_transform_fu_654_ap_return_6.read();
        reg_751 = grp_sha256_transform_fu_654_ap_return_7.read();
    }
}

void sha256_final::thread_add_ln134_1_fu_932_p2() {
    add_ln134_1_fu_932_p2 = (!ctx_bitlen_0_read.read().is_01() || !shl_ln134_fu_862_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) + sc_biguint<32>(shl_ln134_fu_862_p2.read()));
}

void sha256_final::thread_add_ln134_fu_878_p2() {
    add_ln134_fu_878_p2 = (!ap_const_lv32_1.is_01() || !p_read3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_read3.read()));
}

void sha256_final::thread_add_ln135_1_fu_937_p2() {
    add_ln135_1_fu_937_p2 = (!trunc_ln134_7_fu_924_p3.read().is_01() || !trunc_ln134_6_fu_918_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(trunc_ln134_7_fu_924_p3.read()) + sc_biguint<24>(trunc_ln134_6_fu_918_p1.read()));
}

void sha256_final::thread_add_ln135_2_fu_943_p2() {
    add_ln135_2_fu_943_p2 = (!trunc_ln134_5_fu_910_p3.read().is_01() || !trunc_ln134_3_fu_904_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(trunc_ln134_5_fu_910_p3.read()) + sc_biguint<16>(trunc_ln134_3_fu_904_p1.read()));
}

void sha256_final::thread_add_ln135_fu_949_p2() {
    add_ln135_fu_949_p2 = (!trunc_ln134_fu_890_p1.read().is_01() || !trunc_ln134_1_fu_896_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln134_fu_890_p1.read()) + sc_biguint<8>(trunc_ln134_1_fu_896_p3.read()));
}

void sha256_final::thread_add_ln154_fu_1231_p2() {
    add_ln154_fu_1231_p2 = (!ap_const_lv5_14.is_01() || !zext_ln147_reg_1370.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(zext_ln147_reg_1370.read()));
}

void sha256_final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln147_fu_1065_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln147_fu_1065_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_0_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_0))) {
        ctx_data_0_address0 =  (sc_lv<4>) (zext_ln128_fu_854_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_3))) {
        ctx_data_0_address0 =  (sc_lv<4>) (zext_ln124_fu_820_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_0_address0 =  (sc_lv<4>) (zext_ln114_fu_776_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_0_address0 = grp_sha256_transform_fu_654_data_0_address0.read();
    } else {
        ctx_data_0_address0 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_0_address1 =  (sc_lv<4>) (zext_ln117_fu_1053_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_0_address1 =  (sc_lv<4>) (ap_const_lv64_E);
    } else {
        ctx_data_0_address1 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_0)))) {
        ctx_data_0_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_0_ce0 = grp_sha256_transform_fu_654_data_0_ce0.read();
    } else {
        ctx_data_0_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ctx_data_0_ce1 = ap_const_logic_1;
    } else {
        ctx_data_0_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_0_d0 = add_ln134_1_fu_932_p2.read().range(31, 24);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                 esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_0)))) {
        ctx_data_0_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_0_d0 = ap_const_lv8_80;
    } else {
        ctx_data_0_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_0_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_0_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_0_d1 = select_ln134_fu_883_p3.read().range(31, 24);
    } else {
        ctx_data_0_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,2,2>(trunc_ln114_fu_762_p1.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_0)))) {
        ctx_data_0_we0 = ap_const_logic_1;
    } else {
        ctx_data_0_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_0_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_1033_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln117_fu_1039_p1.read(), ap_const_lv2_3)))) {
        ctx_data_0_we1 = ap_const_logic_1;
    } else {
        ctx_data_0_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_1_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln128_fu_840_p1.read()))) {
        ctx_data_1_address0 =  (sc_lv<4>) (zext_ln128_fu_854_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_0))) {
        ctx_data_1_address0 =  (sc_lv<4>) (zext_ln124_fu_820_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_1_address0 =  (sc_lv<4>) (zext_ln114_fu_776_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_1_address0 = grp_sha256_transform_fu_654_data_1_address0.read();
    } else {
        ctx_data_1_address0 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_1_address1 =  (sc_lv<4>) (zext_ln117_fu_1053_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_1_address1 =  (sc_lv<4>) (ap_const_lv64_E);
    } else {
        ctx_data_1_address1 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_1_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_1_ce0 = grp_sha256_transform_fu_654_data_1_ce0.read();
    } else {
        ctx_data_1_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ctx_data_1_ce1 = ap_const_logic_1;
    } else {
        ctx_data_1_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_1_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_1_d0 = add_ln135_1_fu_937_p2.read().range(23, 16);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                 esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_1_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_1_d0 = ap_const_lv8_80;
    } else {
        ctx_data_1_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_1_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_1_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_1_d1 = select_ln134_fu_883_p3.read().range(23, 16);
    } else {
        ctx_data_1_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,2,2>(trunc_ln114_fu_762_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_1_we0 = ap_const_logic_1;
    } else {
        ctx_data_1_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_1_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_1033_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln117_fu_1039_p1.read(), ap_const_lv2_0)))) {
        ctx_data_1_we1 = ap_const_logic_1;
    } else {
        ctx_data_1_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_2_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln128_fu_840_p1.read()))) {
        ctx_data_2_address0 =  (sc_lv<4>) (zext_ln128_fu_854_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_1))) {
        ctx_data_2_address0 =  (sc_lv<4>) (zext_ln124_fu_820_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_2_address0 =  (sc_lv<4>) (zext_ln114_fu_776_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_2_address0 = grp_sha256_transform_fu_654_data_2_address0.read();
    } else {
        ctx_data_2_address0 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_2_address1 =  (sc_lv<4>) (zext_ln117_fu_1053_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_2_address1 =  (sc_lv<4>) (ap_const_lv64_E);
    } else {
        ctx_data_2_address1 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_2_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_2_ce0 = grp_sha256_transform_fu_654_data_2_ce0.read();
    } else {
        ctx_data_2_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ctx_data_2_ce1 = ap_const_logic_1;
    } else {
        ctx_data_2_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_2_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_2_d0 = add_ln135_2_fu_943_p2.read().range(15, 8);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                 esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_2_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_2_d0 = ap_const_lv8_80;
    } else {
        ctx_data_2_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_2_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_2_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_2_d1 = select_ln134_fu_883_p3.read().range(15, 8);
    } else {
        ctx_data_2_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,2,2>(trunc_ln114_fu_762_p1.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln124_fu_806_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln128_fu_840_p1.read())))) {
        ctx_data_2_we0 = ap_const_logic_1;
    } else {
        ctx_data_2_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_2_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_1033_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln117_fu_1039_p1.read())))) {
        ctx_data_2_we1 = ap_const_logic_1;
    } else {
        ctx_data_2_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_3_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_3))) {
        ctx_data_3_address0 =  (sc_lv<4>) (zext_ln128_fu_854_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln124_fu_806_p1.read()))) {
        ctx_data_3_address0 =  (sc_lv<4>) (zext_ln124_fu_820_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_3_address0 =  (sc_lv<4>) (zext_ln114_fu_776_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_3_address0 = grp_sha256_transform_fu_654_data_3_address0.read();
    } else {
        ctx_data_3_address0 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_3_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_3_address1 =  (sc_lv<4>) (zext_ln117_fu_1053_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_3_address1 =  (sc_lv<4>) (ap_const_lv64_E);
    } else {
        ctx_data_3_address1 = "XXXX";
    }
}

void sha256_final::thread_ctx_data_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln124_fu_806_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_3)))) {
        ctx_data_3_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ctx_data_3_ce0 = grp_sha256_transform_fu_654_data_3_ce0.read();
    } else {
        ctx_data_3_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ctx_data_3_ce1 = ap_const_logic_1;
    } else {
        ctx_data_3_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_3_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
        ctx_data_3_d0 = add_ln135_fu_949_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln124_fu_806_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
                 esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_3)))) {
        ctx_data_3_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_3_d0 = ap_const_lv8_80;
    } else {
        ctx_data_3_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_3_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_3_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_3_d1 = trunc_ln139_fu_989_p1.read();
    } else {
        ctx_data_3_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_3_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,2,2>(trunc_ln114_fu_762_p1.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln124_fu_806_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_828_p2.read()) && 
          esl_seteq<1,2,2>(trunc_ln128_fu_840_p1.read(), ap_const_lv2_3)))) {
        ctx_data_3_we0 = ap_const_logic_1;
    } else {
        ctx_data_3_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_3_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
           esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_1033_p2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln117_fu_1039_p1.read())))) {
        ctx_data_3_we1 = ap_const_logic_1;
    } else {
        ctx_data_3_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ap_start() {
    grp_sha256_transform_fu_654_ap_start = grp_sha256_transform_fu_654_ap_start_reg.read();
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_0_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_0_read = ctx_state_0_0_reg_562.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_0_read = p_read2.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_0_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_1_read = ctx_state_1_0_reg_572.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_1_read = p_read4.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_2_read = ctx_state_2_0_reg_582.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_2_read = p_read5.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_3_read = ctx_state_3_0_reg_592.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_3_read = p_read6.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_4_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_4_read = ctx_state_4_0_reg_602.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_4_read = p_read7.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_4_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_5_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_5_read = ctx_state_5_0_reg_612.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_5_read = p_read8.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_5_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_6_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_6_read = ctx_state_6_0_reg_622.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_6_read = p_read9.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_6_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_654_ctx_state_7_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_sha256_transform_fu_654_ctx_state_7_read = ctx_state_7_0_reg_632.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_654_ctx_state_7_read = p_read10.read();
    } else {
        grp_sha256_transform_fu_654_ctx_state_7_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_hash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln155_fu_1244_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln153_fu_1226_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln149_fu_1205_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        hash_address0 =  (sc_lv<6>) (zext_ln150_fu_1126_p1.read());
    } else {
        hash_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void sha256_final::thread_hash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln156_fu_1252_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln154_fu_1236_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln152_fu_1213_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        hash_address1 =  (sc_lv<6>) (zext_ln151_fu_1150_p1.read());
    } else {
        hash_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void sha256_final::thread_hash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        hash_ce0 = ap_const_logic_1;
    } else {
        hash_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        hash_ce1 = ap_const_logic_1;
    } else {
        hash_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d0 = trunc_ln155_reg_1414.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        hash_d0 = trunc_ln153_reg_1404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        hash_d0 = trunc_ln149_1_reg_1383.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        hash_d0 = trunc_ln150_fu_1115_p1.read();
    } else {
        hash_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d1 = trunc_ln156_reg_1419.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        hash_d1 = trunc_ln154_reg_1409.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        hash_d1 = trunc_ln152_reg_1399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        hash_d1 = trunc_ln151_fu_1137_p1.read();
    } else {
        hash_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_1065_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        hash_we0 = ap_const_logic_1;
    } else {
        hash_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln147_fu_1065_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        hash_we1 = ap_const_logic_1;
    } else {
        hash_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_i_4_fu_784_p2() {
    i_4_fu_784_p2 = (!i_1_in_reg_533.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_in_reg_533.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_5_fu_834_p2() {
    i_5_fu_834_p2 = (!i_2_reg_542.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_542.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sha256_final::thread_i_6_fu_1071_p2() {
    i_6_fu_1071_p2 = (!i_3_reg_642.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_reg_642.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void sha256_final::thread_i_fu_1027_p2() {
    i_fu_1027_p2 = (!i_0_in_reg_553.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_in_reg_553.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_icmp_ln113_fu_756_p2() {
    icmp_ln113_fu_756_p2 = (!ctx_datalen_read.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_datalen_read.read()) < sc_biguint<32>(ap_const_lv32_38));
}

void sha256_final::thread_icmp_ln115_fu_1033_p2() {
    icmp_ln115_fu_1033_p2 = (!i_0_in_reg_553.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): sc_lv<1>(i_0_in_reg_553.read() == ap_const_lv32_37);
}

void sha256_final::thread_icmp_ln122_fu_800_p2() {
    icmp_ln122_fu_800_p2 = (!tmp_2_fu_790_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_790_p4.read() == ap_const_lv26_0);
}

void sha256_final::thread_icmp_ln127_fu_828_p2() {
    icmp_ln127_fu_828_p2 = (!i_2_reg_542.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_542.read() == ap_const_lv6_38);
}

void sha256_final::thread_icmp_ln134_fu_873_p2() {
    icmp_ln134_fu_873_p2 = (!ctx_bitlen_0_read.read().is_01() || !xor_ln134_fu_867_p2.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) > sc_biguint<32>(xor_ln134_fu_867_p2.read()));
}

void sha256_final::thread_icmp_ln147_fu_1065_p2() {
    icmp_ln147_fu_1065_p2 = (!i_3_reg_642.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_642.read() == ap_const_lv3_4);
}

void sha256_final::thread_lshr_ln149_fu_1099_p2() {
    lshr_ln149_fu_1099_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_716.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln150_fu_1109_p2() {
    lshr_ln150_fu_1109_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_721.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln151_fu_1131_p2() {
    lshr_ln151_fu_1131_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_726.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln152_fu_1155_p2() {
    lshr_ln152_fu_1155_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_731.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln153_fu_1165_p2() {
    lshr_ln153_fu_1165_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_736.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln154_fu_1175_p2() {
    lshr_ln154_fu_1175_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_741.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln155_fu_1185_p2() {
    lshr_ln155_fu_1185_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_746.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln156_fu_1195_p2() {
    lshr_ln156_fu_1195_p2 = (!zext_ln149_1_fu_1095_p1.read().is_01())? sc_lv<32>(): reg_751.read() >> (unsigned short)zext_ln149_1_fu_1095_p1.read().to_uint();
}

void sha256_final::thread_lshr_ln3_fu_1043_p4() {
    lshr_ln3_fu_1043_p4 = i_fu_1027_p2.read().range(31, 2);
}

void sha256_final::thread_lshr_ln4_fu_810_p4() {
    lshr_ln4_fu_810_p4 = i_4_fu_784_p2.read().range(31, 2);
}

void sha256_final::thread_lshr_ln5_fu_844_p4() {
    lshr_ln5_fu_844_p4 = i_2_reg_542.read().range(5, 2);
}

void sha256_final::thread_lshr_ln_fu_766_p4() {
    lshr_ln_fu_766_p4 = ctx_datalen_read.read().range(31, 2);
}

void sha256_final::thread_or_ln3_fu_1218_p3() {
    or_ln3_fu_1218_p3 = esl_concat<2,3>(ap_const_lv2_2, i_3_reg_642.read());
}

void sha256_final::thread_or_ln_fu_1142_p3() {
    or_ln_fu_1142_p3 = esl_concat<1,3>(ap_const_lv1_1, i_3_reg_642.read());
}

void sha256_final::thread_select_ln134_fu_883_p3() {
    select_ln134_fu_883_p3 = (!icmp_ln134_fu_873_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln134_fu_873_p2.read()[0].to_bool())? add_ln134_fu_878_p2.read(): p_read3.read());
}

void sha256_final::thread_sext_ln152_fu_1210_p1() {
    sext_ln152_fu_1210_p1 = esl_sext<4,3>(xor_ln150_reg_1388.read());
}

void sha256_final::thread_sext_ln155_fu_1241_p1() {
    sext_ln155_fu_1241_p1 = esl_sext<5,4>(or_ln_reg_1394.read());
}

void sha256_final::thread_sext_ln156_fu_1249_p1() {
    sext_ln156_fu_1249_p1 = esl_sext<5,3>(xor_ln150_reg_1388.read());
}

void sha256_final::thread_shl_ln134_fu_862_p2() {
    shl_ln134_fu_862_p2 = (!ap_const_lv32_3.is_01())? sc_lv<32>(): ctx_datalen_read.read() << (unsigned short)ap_const_lv32_3.to_uint();
}

void sha256_final::thread_shl_ln1_fu_1081_p3() {
    shl_ln1_fu_1081_p3 = esl_concat<2,3>(trunc_ln149_fu_1077_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_sub_ln149_fu_1089_p2() {
    sub_ln149_fu_1089_p2 = (!ap_const_lv5_18.is_01() || !shl_ln1_fu_1081_p3.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(shl_ln1_fu_1081_p3.read()));
}

void sha256_final::thread_tmp_2_fu_790_p4() {
    tmp_2_fu_790_p4 = i_4_fu_784_p2.read().range(31, 6);
}

void sha256_final::thread_trunc_ln114_fu_762_p1() {
    trunc_ln114_fu_762_p1 = ctx_datalen_read.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln117_fu_1039_p1() {
    trunc_ln117_fu_1039_p1 = i_0_in_reg_553.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln124_fu_806_p1() {
    trunc_ln124_fu_806_p1 = i_1_in_reg_533.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln128_fu_840_p1() {
    trunc_ln128_fu_840_p1 = i_2_reg_542.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln134_1_fu_896_p3() {
    trunc_ln134_1_fu_896_p3 = esl_concat<5,3>(trunc_ln134_2_fu_893_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_2_fu_893_p1() {
    trunc_ln134_2_fu_893_p1 = ctx_datalen_read.read().range(5-1, 0);
}

void sha256_final::thread_trunc_ln134_3_fu_904_p1() {
    trunc_ln134_3_fu_904_p1 = ctx_bitlen_0_read.read().range(16-1, 0);
}

void sha256_final::thread_trunc_ln134_4_fu_907_p1() {
    trunc_ln134_4_fu_907_p1 = ctx_datalen_read.read().range(13-1, 0);
}

void sha256_final::thread_trunc_ln134_5_fu_910_p3() {
    trunc_ln134_5_fu_910_p3 = esl_concat<13,3>(trunc_ln134_4_fu_907_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_6_fu_918_p1() {
    trunc_ln134_6_fu_918_p1 = ctx_bitlen_0_read.read().range(24-1, 0);
}

void sha256_final::thread_trunc_ln134_7_fu_924_p3() {
    trunc_ln134_7_fu_924_p3 = esl_concat<21,3>(trunc_ln134_8_fu_921_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_trunc_ln134_8_fu_921_p1() {
    trunc_ln134_8_fu_921_p1 = ctx_datalen_read.read().range(21-1, 0);
}

void sha256_final::thread_trunc_ln134_fu_890_p1() {
    trunc_ln134_fu_890_p1 = ctx_bitlen_0_read.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln139_fu_989_p1() {
    trunc_ln139_fu_989_p1 = select_ln134_fu_883_p3.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln149_1_fu_1105_p1() {
    trunc_ln149_1_fu_1105_p1 = lshr_ln149_fu_1099_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln149_fu_1077_p1() {
    trunc_ln149_fu_1077_p1 = i_3_reg_642.read().range(2-1, 0);
}

void sha256_final::thread_trunc_ln150_fu_1115_p1() {
    trunc_ln150_fu_1115_p1 = lshr_ln150_fu_1109_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln151_fu_1137_p1() {
    trunc_ln151_fu_1137_p1 = lshr_ln151_fu_1131_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln152_fu_1161_p1() {
    trunc_ln152_fu_1161_p1 = lshr_ln152_fu_1155_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln153_fu_1171_p1() {
    trunc_ln153_fu_1171_p1 = lshr_ln153_fu_1165_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln154_fu_1181_p1() {
    trunc_ln154_fu_1181_p1 = lshr_ln154_fu_1175_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln155_fu_1191_p1() {
    trunc_ln155_fu_1191_p1 = lshr_ln155_fu_1185_p2.read().range(8-1, 0);
}

void sha256_final::thread_trunc_ln156_fu_1201_p1() {
    trunc_ln156_fu_1201_p1 = lshr_ln156_fu_1195_p2.read().range(8-1, 0);
}

void sha256_final::thread_xor_ln134_fu_867_p2() {
    xor_ln134_fu_867_p2 = (shl_ln134_fu_862_p2.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_final::thread_xor_ln150_fu_1120_p2() {
    xor_ln150_fu_1120_p2 = (i_3_reg_642.read() ^ ap_const_lv3_4);
}

void sha256_final::thread_zext_ln114_fu_776_p1() {
    zext_ln114_fu_776_p1 = esl_zext<64,30>(lshr_ln_fu_766_p4.read());
}

void sha256_final::thread_zext_ln117_fu_1053_p1() {
    zext_ln117_fu_1053_p1 = esl_zext<64,30>(lshr_ln3_fu_1043_p4.read());
}

void sha256_final::thread_zext_ln124_fu_820_p1() {
    zext_ln124_fu_820_p1 = esl_zext<64,30>(lshr_ln4_fu_810_p4.read());
}

void sha256_final::thread_zext_ln128_fu_854_p1() {
    zext_ln128_fu_854_p1 = esl_zext<64,4>(lshr_ln5_fu_844_p4.read());
}

void sha256_final::thread_zext_ln147_fu_1061_p1() {
    zext_ln147_fu_1061_p1 = esl_zext<5,3>(i_3_reg_642.read());
}

void sha256_final::thread_zext_ln149_1_fu_1095_p1() {
    zext_ln149_1_fu_1095_p1 = esl_zext<32,5>(sub_ln149_fu_1089_p2.read());
}

void sha256_final::thread_zext_ln149_fu_1205_p1() {
    zext_ln149_fu_1205_p1 = esl_zext<64,3>(i_3_reg_642.read());
}

void sha256_final::thread_zext_ln150_fu_1126_p1() {
    zext_ln150_fu_1126_p1 = esl_zext<64,3>(xor_ln150_fu_1120_p2.read());
}

void sha256_final::thread_zext_ln151_fu_1150_p1() {
    zext_ln151_fu_1150_p1 = esl_zext<64,4>(or_ln_fu_1142_p3.read());
}

void sha256_final::thread_zext_ln152_fu_1213_p1() {
    zext_ln152_fu_1213_p1 = esl_zext<64,4>(sext_ln152_fu_1210_p1.read());
}

void sha256_final::thread_zext_ln153_fu_1226_p1() {
    zext_ln153_fu_1226_p1 = esl_zext<64,5>(or_ln3_fu_1218_p3.read());
}

void sha256_final::thread_zext_ln154_fu_1236_p1() {
    zext_ln154_fu_1236_p1 = esl_zext<64,5>(add_ln154_fu_1231_p2.read());
}

void sha256_final::thread_zext_ln155_fu_1244_p1() {
    zext_ln155_fu_1244_p1 = esl_zext<64,5>(sext_ln155_fu_1241_p1.read());
}

void sha256_final::thread_zext_ln156_fu_1252_p1() {
    zext_ln156_fu_1252_p1 = esl_zext<64,5>(sext_ln156_fu_1249_p1.read());
}

void sha256_final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln113_fu_756_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln113_fu_756_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln122_fu_800_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_828_p2.read()) || 
  esl_seteq<1,1,1>(icmp_ln113_reg_1330.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln115_fu_1033_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_654_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln147_fu_1065_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

