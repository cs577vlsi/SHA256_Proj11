

================================================================
== Vivado HLS Report for 'sha256_final'
================================================================
* Date:           Wed Apr  7 17:47:18 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        SHA
* Solution:       solution2_array_partition
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.522|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  440|  924|  440|  924|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |    0|   56|         1|          -|          -| 0 ~ 56 |    no    |
        |- Loop 2  |    0|    8|         1|          -|          -|  0 ~ 8 |    no    |
        |- Loop 3  |   56|   56|         1|          -|          -|      56|    no    |
        |- Loop 4  |   16|   16|         4|          -|          -|       4|    no    |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 5 
2 --> 3 2 
3 --> 4 
4 --> 4 6 
5 --> 5 4 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 8 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.47>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read10)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 12 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read_6 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read9)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 13 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read_7 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read8)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 14 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read7)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 15 'read' 'p_read_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read6)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 16 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read58 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read5)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 17 'read' 'p_read58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read47 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read4)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 18 'read' 'p_read47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_read26 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read2)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 19 'read' 'p_read26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_read35 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read3)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 20 'read' 'p_read35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%ctx_bitlen_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_bitlen_0_read)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 21 'read' 'ctx_bitlen_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%ctx_datalen_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_datalen_read)" [SHA_new/SHA_new/sha256_impl.c:106]   --->   Operation 22 'read' 'ctx_datalen_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (2.47ns)   --->   "%icmp_ln113 = icmp ult i32 %ctx_datalen_read_2, 56" [SHA_new/SHA_new/sha256_impl.c:113]   --->   Operation 23 'icmp' 'icmp_ln113' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i32 %ctx_datalen_read_2 to i2" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 24 'trunc' 'trunc_ln114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%lshr_ln = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %ctx_datalen_read_2, i32 2, i32 31)" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 25 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i30 %lshr_ln to i64" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 26 'zext' 'zext_ln114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%ctx_data_0_addr = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 %zext_ln114" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 27 'getelementptr' 'ctx_data_0_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%ctx_data_1_addr = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 %zext_ln114" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 28 'getelementptr' 'ctx_data_1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%ctx_data_2_addr = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 %zext_ln114" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 29 'getelementptr' 'ctx_data_2_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%ctx_data_3_addr = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 %zext_ln114" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 30 'getelementptr' 'ctx_data_3_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln114, label %branch15 [
    i2 0, label %branch12
    i2 1, label %branch13
    i2 -2, label %branch14
  ]" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 31 'switch' <Predicate = true> <Delay = 1.30>
ST_1 : Operation 32 [1/1] (2.32ns)   --->   "store i8 -128, i8* %ctx_data_2_addr, align 1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 32 'store' <Predicate = (trunc_ln114 == 2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "br label %1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 33 'br' <Predicate = (trunc_ln114 == 2)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (2.32ns)   --->   "store i8 -128, i8* %ctx_data_1_addr, align 1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 34 'store' <Predicate = (trunc_ln114 == 1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "br label %1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 35 'br' <Predicate = (trunc_ln114 == 1)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (2.32ns)   --->   "store i8 -128, i8* %ctx_data_0_addr, align 1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 36 'store' <Predicate = (trunc_ln114 == 0)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "br label %1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 37 'br' <Predicate = (trunc_ln114 == 0)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (2.32ns)   --->   "store i8 -128, i8* %ctx_data_3_addr, align 1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 38 'store' <Predicate = (trunc_ln114 == 3)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "br label %1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 39 'br' <Predicate = (trunc_ln114 == 3)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln113, label %.preheader2.preheader, label %.preheader.preheader" [SHA_new/SHA_new/sha256_impl.c:113]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.76ns)   --->   "br label %.preheader" [SHA_new/SHA_new/sha256_impl.c:121]   --->   Operation 41 'br' <Predicate = (!icmp_ln113)> <Delay = 1.76>
ST_1 : Operation 42 [1/1] (1.76ns)   --->   "br label %.preheader2" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 42 'br' <Predicate = (icmp_ln113)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%i_1_in = phi i32 [ %i_4, %hls_label_3_end ], [ %ctx_datalen_read_2, %.preheader.preheader ]"   --->   Operation 43 'phi' 'i_1_in' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.55ns)   --->   "%i_4 = add i32 %i_1_in, 1" [SHA_new/SHA_new/sha256_impl.c:121]   --->   Operation 44 'add' 'i_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_2 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %i_4, i32 6, i32 31)" [SHA_new/SHA_new/sha256_impl.c:122]   --->   Operation 45 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (2.45ns)   --->   "%icmp_ln122 = icmp eq i26 %tmp_2, 0" [SHA_new/SHA_new/sha256_impl.c:122]   --->   Operation 46 'icmp' 'icmp_ln122' <Predicate = true> <Delay = 2.45> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %icmp_ln122, label %hls_label_3_begin, label %2" [SHA_new/SHA_new/sha256_impl.c:122]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [SHA_new/SHA_new/sha256_impl.c:122]   --->   Operation 48 'specregionbegin' 'tmp_1' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 8, i32 4, [1 x i8]* @p_str2) nounwind" [SHA_new/SHA_new/sha256_impl.c:123]   --->   Operation 49 'speclooptripcount' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln124 = trunc i32 %i_1_in to i2" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 50 'trunc' 'trunc_ln124' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%lshr_ln4 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %i_4, i32 2, i32 31)" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 51 'partselect' 'lshr_ln4' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln124 = zext i30 %lshr_ln4 to i64" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 52 'zext' 'zext_ln124' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%ctx_data_1_addr_2 = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 %zext_ln124" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 53 'getelementptr' 'ctx_data_1_addr_2' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%ctx_data_2_addr_2 = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 %zext_ln124" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 54 'getelementptr' 'ctx_data_2_addr_2' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%ctx_data_3_addr_2 = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 %zext_ln124" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 55 'getelementptr' 'ctx_data_3_addr_2' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%ctx_data_0_addr_2 = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 %zext_ln124" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 56 'getelementptr' 'ctx_data_0_addr_2' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln124, label %branch7 [
    i2 0, label %branch4
    i2 1, label %branch5
    i2 -2, label %branch6
  ]" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 57 'switch' <Predicate = (icmp_ln122)> <Delay = 1.30>
ST_2 : Operation 58 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_3_addr_2, align 1" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 58 'store' <Predicate = (icmp_ln122 & trunc_ln124 == 2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "br label %hls_label_3_end" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 59 'br' <Predicate = (icmp_ln122 & trunc_ln124 == 2)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_2_addr_2, align 1" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 60 'store' <Predicate = (icmp_ln122 & trunc_ln124 == 1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "br label %hls_label_3_end" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 61 'br' <Predicate = (icmp_ln122 & trunc_ln124 == 1)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_1_addr_2, align 1" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 62 'store' <Predicate = (icmp_ln122 & trunc_ln124 == 0)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "br label %hls_label_3_end" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 63 'br' <Predicate = (icmp_ln122 & trunc_ln124 == 0)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_0_addr_2, align 1" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 64 'store' <Predicate = (icmp_ln122 & trunc_ln124 == 3)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "br label %hls_label_3_end" [SHA_new/SHA_new/sha256_impl.c:124]   --->   Operation 65 'br' <Predicate = (icmp_ln122 & trunc_ln124 == 3)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_1)" [SHA_new/SHA_new/sha256_impl.c:125]   --->   Operation 66 'specregionend' 'empty_12' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "br label %.preheader" [SHA_new/SHA_new/sha256_impl.c:125]   --->   Operation 67 'br' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_2 : Operation 68 [2/2] (1.76ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read26, i32 %p_read47, i32 %p_read58, i32 %p_read_9, i32 %p_read_8, i32 %p_read_7, i32 %p_read_6, i32 %p_read, [16 x i8]* %ctx_data_0, [16 x i8]* %ctx_data_1, [16 x i8]* %ctx_data_2, [16 x i8]* %ctx_data_3)" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 68 'call' 'call_ret' <Predicate = (!icmp_ln122)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 2.55>
ST_3 : Operation 69 [1/2] (2.55ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read26, i32 %p_read47, i32 %p_read58, i32 %p_read_9, i32 %p_read_8, i32 %p_read_7, i32 %p_read_6, i32 %p_read, [16 x i8]* %ctx_data_0, [16 x i8]* %ctx_data_1, [16 x i8]* %ctx_data_2, [16 x i8]* %ctx_data_3)" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 69 'call' 'call_ret' <Predicate = true> <Delay = 2.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%ctx_state_0_ret4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 70 'extractvalue' 'ctx_state_0_ret4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%ctx_state_1_ret5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 71 'extractvalue' 'ctx_state_1_ret5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%ctx_state_2_ret6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 72 'extractvalue' 'ctx_state_2_ret6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%ctx_state_3_ret7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 73 'extractvalue' 'ctx_state_3_ret7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%ctx_state_4_ret8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 74 'extractvalue' 'ctx_state_4_ret8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%ctx_state_5_ret9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 75 'extractvalue' 'ctx_state_5_ret9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%ctx_state_6_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 76 'extractvalue' 'ctx_state_6_ret1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%ctx_state_7_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 77 'extractvalue' 'ctx_state_7_ret1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (1.76ns)   --->   "br label %3" [SHA_new/SHA_new/sha256_impl.c:127]   --->   Operation 78 'br' <Predicate = true> <Delay = 1.76>

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%i_2 = phi i6 [ 0, %2 ], [ %i_5, %5 ]"   --->   Operation 79 'phi' 'i_2' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (1.42ns)   --->   "%icmp_ln127 = icmp eq i6 %i_2, -8" [SHA_new/SHA_new/sha256_impl.c:127]   --->   Operation 80 'icmp' 'icmp_ln127' <Predicate = (!icmp_ln113)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 56, i64 56, i64 56)"   --->   Operation 81 'speclooptripcount' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (1.82ns)   --->   "%i_5 = add i6 %i_2, 1" [SHA_new/SHA_new/sha256_impl.c:127]   --->   Operation 82 'add' 'i_5' <Predicate = (!icmp_ln113)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "br i1 %icmp_ln127, label %.loopexit.loopexit, label %4" [SHA_new/SHA_new/sha256_impl.c:127]   --->   Operation 83 'br' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln128 = trunc i6 %i_2 to i2" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 84 'trunc' 'trunc_ln128' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%lshr_ln5 = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %i_2, i32 2, i32 5)" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 85 'partselect' 'lshr_ln5' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i4 %lshr_ln5 to i64" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 86 'zext' 'zext_ln128' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%ctx_data_0_addr_5 = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 %zext_ln128" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 87 'getelementptr' 'ctx_data_0_addr_5' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%ctx_data_1_addr_5 = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 %zext_ln128" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 88 'getelementptr' 'ctx_data_1_addr_5' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%ctx_data_2_addr_5 = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 %zext_ln128" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 89 'getelementptr' 'ctx_data_2_addr_5' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%ctx_data_3_addr_5 = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 %zext_ln128" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 90 'getelementptr' 'ctx_data_3_addr_5' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln128, label %branch3 [
    i2 0, label %branch0
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 91 'switch' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 1.30>
ST_4 : Operation 92 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_2_addr_5, align 1" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 92 'store' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "br label %5" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 93 'br' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 2)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_1_addr_5, align 1" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 94 'store' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "br label %5" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 95 'br' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 1)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_0_addr_5, align 1" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 96 'store' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 0)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "br label %5" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 97 'br' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 0)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_3_addr_5, align 1" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 98 'store' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 3)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "br label %5" [SHA_new/SHA_new/sha256_impl.c:128]   --->   Operation 99 'br' <Predicate = (!icmp_ln113 & !icmp_ln127 & trunc_ln128 == 3)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "br label %3" [SHA_new/SHA_new/sha256_impl.c:127]   --->   Operation 100 'br' <Predicate = (!icmp_ln113 & !icmp_ln127)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 101 'br' <Predicate = (!icmp_ln113 & icmp_ln127)> <Delay = 1.76>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%shl_ln134 = shl i32 %ctx_datalen_read_2, 3" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 102 'shl' 'shl_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln134)   --->   "%xor_ln134 = xor i32 %shl_ln134, -1" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 103 'xor' 'xor_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [1/1] (2.47ns) (out node of the LUT)   --->   "%icmp_ln134 = icmp ugt i32 %ctx_bitlen_0_read_1, %xor_ln134" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 104 'icmp' 'icmp_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (2.55ns)   --->   "%add_ln134 = add i32 1, %p_read35" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 105 'add' 'add_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (0.69ns)   --->   "%select_ln134 = select i1 %icmp_ln134, i32 %add_ln134, i32 %p_read35" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 106 'select' 'select_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%trunc_ln134 = trunc i32 %ctx_bitlen_0_read_1 to i8" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 107 'trunc' 'trunc_ln134' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%trunc_ln134_2 = trunc i32 %ctx_datalen_read_2 to i5" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 108 'trunc' 'trunc_ln134_2' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%trunc_ln134_1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %trunc_ln134_2, i3 0)" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 109 'bitconcatenate' 'trunc_ln134_1' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%trunc_ln134_3 = trunc i32 %ctx_bitlen_0_read_1 to i16" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 110 'trunc' 'trunc_ln134_3' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln134_4 = trunc i32 %ctx_datalen_read_2 to i13" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 111 'trunc' 'trunc_ln134_4' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln134_5 = call i16 @_ssdm_op_BitConcatenate.i16.i13.i3(i13 %trunc_ln134_4, i3 0)" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 112 'bitconcatenate' 'trunc_ln134_5' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln134_6 = trunc i32 %ctx_bitlen_0_read_1 to i24" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 113 'trunc' 'trunc_ln134_6' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln134_8 = trunc i32 %ctx_datalen_read_2 to i21" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 114 'trunc' 'trunc_ln134_8' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln134_7 = call i24 @_ssdm_op_BitConcatenate.i24.i21.i3(i21 %trunc_ln134_8, i3 0)" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 115 'bitconcatenate' 'trunc_ln134_7' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (2.55ns)   --->   "%add_ln134_1 = add i32 %ctx_bitlen_0_read_1, %shl_ln134" [SHA_new/SHA_new/sha256_impl.c:134]   --->   Operation 116 'add' 'add_ln134_1' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (2.31ns)   --->   "%add_ln135_1 = add i24 %trunc_ln134_7, %trunc_ln134_6" [SHA_new/SHA_new/sha256_impl.c:135]   --->   Operation 117 'add' 'add_ln135_1' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (2.07ns)   --->   "%add_ln135_2 = add i16 %trunc_ln134_5, %trunc_ln134_3" [SHA_new/SHA_new/sha256_impl.c:135]   --->   Operation 118 'add' 'add_ln135_2' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (1.91ns)   --->   "%add_ln135 = add i8 %trunc_ln134, %trunc_ln134_1" [SHA_new/SHA_new/sha256_impl.c:135]   --->   Operation 119 'add' 'add_ln135' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%ctx_data_3_addr_3 = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 15" [SHA_new/SHA_new/sha256_impl.c:135]   --->   Operation 120 'getelementptr' 'ctx_data_3_addr_3' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (2.32ns)   --->   "store i8 %add_ln135, i8* %ctx_data_3_addr_3, align 1" [SHA_new/SHA_new/sha256_impl.c:135]   --->   Operation 121 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln5 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %add_ln135_2, i32 8, i32 15)" [SHA_new/SHA_new/sha256_impl.c:136]   --->   Operation 122 'partselect' 'trunc_ln5' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%ctx_data_2_addr_3 = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 15" [SHA_new/SHA_new/sha256_impl.c:136]   --->   Operation 123 'getelementptr' 'ctx_data_2_addr_3' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (2.32ns)   --->   "store i8 %trunc_ln5, i8* %ctx_data_2_addr_3, align 1" [SHA_new/SHA_new/sha256_impl.c:136]   --->   Operation 124 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln6 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %add_ln135_1, i32 16, i32 23)" [SHA_new/SHA_new/sha256_impl.c:137]   --->   Operation 125 'partselect' 'trunc_ln6' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%ctx_data_1_addr_3 = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 15" [SHA_new/SHA_new/sha256_impl.c:137]   --->   Operation 126 'getelementptr' 'ctx_data_1_addr_3' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (2.32ns)   --->   "store i8 %trunc_ln6, i8* %ctx_data_1_addr_3, align 1" [SHA_new/SHA_new/sha256_impl.c:137]   --->   Operation 127 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %add_ln134_1, i32 24, i32 31)" [SHA_new/SHA_new/sha256_impl.c:138]   --->   Operation 128 'partselect' 'trunc_ln7' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%ctx_data_0_addr_3 = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 15" [SHA_new/SHA_new/sha256_impl.c:138]   --->   Operation 129 'getelementptr' 'ctx_data_0_addr_3' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (2.32ns)   --->   "store i8 %trunc_ln7, i8* %ctx_data_0_addr_3, align 1" [SHA_new/SHA_new/sha256_impl.c:138]   --->   Operation 130 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln139 = trunc i32 %select_ln134 to i8" [SHA_new/SHA_new/sha256_impl.c:139]   --->   Operation 131 'trunc' 'trunc_ln139' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%ctx_data_3_addr_4 = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 14" [SHA_new/SHA_new/sha256_impl.c:139]   --->   Operation 132 'getelementptr' 'ctx_data_3_addr_4' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (2.32ns)   --->   "store i8 %trunc_ln139, i8* %ctx_data_3_addr_4, align 1" [SHA_new/SHA_new/sha256_impl.c:139]   --->   Operation 133 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %select_ln134, i32 8, i32 15)" [SHA_new/SHA_new/sha256_impl.c:140]   --->   Operation 134 'partselect' 'trunc_ln9' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%ctx_data_2_addr_4 = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 14" [SHA_new/SHA_new/sha256_impl.c:140]   --->   Operation 135 'getelementptr' 'ctx_data_2_addr_4' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (2.32ns)   --->   "store i8 %trunc_ln9, i8* %ctx_data_2_addr_4, align 1" [SHA_new/SHA_new/sha256_impl.c:140]   --->   Operation 136 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %select_ln134, i32 16, i32 23)" [SHA_new/SHA_new/sha256_impl.c:141]   --->   Operation 137 'partselect' 'trunc_ln' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%ctx_data_1_addr_4 = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 14" [SHA_new/SHA_new/sha256_impl.c:141]   --->   Operation 138 'getelementptr' 'ctx_data_1_addr_4' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (2.32ns)   --->   "store i8 %trunc_ln, i8* %ctx_data_1_addr_4, align 1" [SHA_new/SHA_new/sha256_impl.c:141]   --->   Operation 139 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %select_ln134, i32 24, i32 31)" [SHA_new/SHA_new/sha256_impl.c:142]   --->   Operation 140 'partselect' 'trunc_ln1' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%ctx_data_0_addr_4 = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 14" [SHA_new/SHA_new/sha256_impl.c:142]   --->   Operation 141 'getelementptr' 'ctx_data_0_addr_4' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (2.32ns)   --->   "store i8 %trunc_ln1, i8* %ctx_data_0_addr_4, align 1" [SHA_new/SHA_new/sha256_impl.c:142]   --->   Operation 142 'store' <Predicate = (icmp_ln127) | (icmp_ln113)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 5 <SV = 1> <Delay = 4.87>
ST_5 : Operation 143 [1/1] (0.00ns)   --->   "%i_0_in = phi i32 [ %i, %hls_label_2_end ], [ %ctx_datalen_read_2, %.preheader2.preheader ]"   --->   Operation 143 'phi' 'i_0_in' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 144 [1/1] (2.55ns)   --->   "%i = add i32 %i_0_in, 1" [SHA_new/SHA_new/sha256_impl.c:114]   --->   Operation 144 'add' 'i' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 145 [1/1] (2.47ns)   --->   "%icmp_ln115 = icmp eq i32 %i_0_in, 55" [SHA_new/SHA_new/sha256_impl.c:115]   --->   Operation 145 'icmp' 'icmp_ln115' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 146 [1/1] (0.00ns)   --->   "br i1 %icmp_ln115, label %.loopexit.loopexit15, label %hls_label_2_begin" [SHA_new/SHA_new/sha256_impl.c:115]   --->   Operation 146 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 147 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [SHA_new/SHA_new/sha256_impl.c:115]   --->   Operation 147 'specregionbegin' 'tmp' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 56, i32 28, [1 x i8]* @p_str2) nounwind" [SHA_new/SHA_new/sha256_impl.c:116]   --->   Operation 148 'speclooptripcount' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i32 %i_0_in to i2" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 149 'trunc' 'trunc_ln117' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 150 [1/1] (0.00ns)   --->   "%lshr_ln3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %i, i32 2, i32 31)" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 150 'partselect' 'lshr_ln3' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i30 %lshr_ln3 to i64" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 151 'zext' 'zext_ln117' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 152 [1/1] (0.00ns)   --->   "%ctx_data_1_addr_1 = getelementptr [16 x i8]* %ctx_data_1, i64 0, i64 %zext_ln117" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 152 'getelementptr' 'ctx_data_1_addr_1' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 153 [1/1] (0.00ns)   --->   "%ctx_data_2_addr_1 = getelementptr [16 x i8]* %ctx_data_2, i64 0, i64 %zext_ln117" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 153 'getelementptr' 'ctx_data_2_addr_1' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "%ctx_data_3_addr_1 = getelementptr [16 x i8]* %ctx_data_3, i64 0, i64 %zext_ln117" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 154 'getelementptr' 'ctx_data_3_addr_1' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 155 [1/1] (0.00ns)   --->   "%ctx_data_0_addr_1 = getelementptr [16 x i8]* %ctx_data_0, i64 0, i64 %zext_ln117" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 155 'getelementptr' 'ctx_data_0_addr_1' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 156 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln117, label %branch11 [
    i2 0, label %branch8
    i2 1, label %branch9
    i2 -2, label %branch10
  ]" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 156 'switch' <Predicate = (!icmp_ln115)> <Delay = 1.30>
ST_5 : Operation 157 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_3_addr_1, align 1" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 157 'store' <Predicate = (!icmp_ln115 & trunc_ln117 == 2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "br label %hls_label_2_end" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 158 'br' <Predicate = (!icmp_ln115 & trunc_ln117 == 2)> <Delay = 0.00>
ST_5 : Operation 159 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_2_addr_1, align 1" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 159 'store' <Predicate = (!icmp_ln115 & trunc_ln117 == 1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "br label %hls_label_2_end" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 160 'br' <Predicate = (!icmp_ln115 & trunc_ln117 == 1)> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_1_addr_1, align 1" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 161 'store' <Predicate = (!icmp_ln115 & trunc_ln117 == 0)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 162 [1/1] (0.00ns)   --->   "br label %hls_label_2_end" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 162 'br' <Predicate = (!icmp_ln115 & trunc_ln117 == 0)> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_0_addr_1, align 1" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 163 'store' <Predicate = (!icmp_ln115 & trunc_ln117 == 3)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 164 [1/1] (0.00ns)   --->   "br label %hls_label_2_end" [SHA_new/SHA_new/sha256_impl.c:117]   --->   Operation 164 'br' <Predicate = (!icmp_ln115 & trunc_ln117 == 3)> <Delay = 0.00>
ST_5 : Operation 165 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [SHA_new/SHA_new/sha256_impl.c:118]   --->   Operation 165 'specregionend' 'empty' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 166 [1/1] (0.00ns)   --->   "br label %.preheader2" [SHA_new/SHA_new/sha256_impl.c:118]   --->   Operation 166 'br' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_5 : Operation 167 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 167 'br' <Predicate = (icmp_ln115)> <Delay = 1.76>

State 6 <SV = 4> <Delay = 1.76>
ST_6 : Operation 168 [1/1] (0.00ns)   --->   "%ctx_state_0_0 = phi i32 [ %ctx_state_0_ret4, %.loopexit.loopexit ], [ %p_read26, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 168 'phi' 'ctx_state_0_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 169 [1/1] (0.00ns)   --->   "%ctx_state_1_0 = phi i32 [ %ctx_state_1_ret5, %.loopexit.loopexit ], [ %p_read47, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 169 'phi' 'ctx_state_1_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 170 [1/1] (0.00ns)   --->   "%ctx_state_2_0 = phi i32 [ %ctx_state_2_ret6, %.loopexit.loopexit ], [ %p_read58, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 170 'phi' 'ctx_state_2_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 171 [1/1] (0.00ns)   --->   "%ctx_state_3_0 = phi i32 [ %ctx_state_3_ret7, %.loopexit.loopexit ], [ %p_read_9, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 171 'phi' 'ctx_state_3_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 172 [1/1] (0.00ns)   --->   "%ctx_state_4_0 = phi i32 [ %ctx_state_4_ret8, %.loopexit.loopexit ], [ %p_read_8, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 172 'phi' 'ctx_state_4_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 173 [1/1] (0.00ns)   --->   "%ctx_state_5_0 = phi i32 [ %ctx_state_5_ret9, %.loopexit.loopexit ], [ %p_read_7, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 173 'phi' 'ctx_state_5_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 174 [1/1] (0.00ns)   --->   "%ctx_state_6_0 = phi i32 [ %ctx_state_6_ret1, %.loopexit.loopexit ], [ %p_read_6, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 174 'phi' 'ctx_state_6_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 175 [1/1] (0.00ns)   --->   "%ctx_state_7_0 = phi i32 [ %ctx_state_7_ret1, %.loopexit.loopexit ], [ %p_read, %.loopexit.loopexit15 ]" [SHA_new/SHA_new/sha256_impl.c:126]   --->   Operation 175 'phi' 'ctx_state_7_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 176 [2/2] (1.76ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state_0_0, i32 %ctx_state_1_0, i32 %ctx_state_2_0, i32 %ctx_state_3_0, i32 %ctx_state_4_0, i32 %ctx_state_5_0, i32 %ctx_state_6_0, i32 %ctx_state_7_0, [16 x i8]* %ctx_data_0, [16 x i8]* %ctx_data_1, [16 x i8]* %ctx_data_2, [16 x i8]* %ctx_data_3)" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 176 'call' 'call_ret1' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 5> <Delay = 2.55>
ST_7 : Operation 177 [1/2] (2.55ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state_0_0, i32 %ctx_state_1_0, i32 %ctx_state_2_0, i32 %ctx_state_3_0, i32 %ctx_state_4_0, i32 %ctx_state_5_0, i32 %ctx_state_6_0, i32 %ctx_state_7_0, [16 x i8]* %ctx_data_0, [16 x i8]* %ctx_data_1, [16 x i8]* %ctx_data_2, [16 x i8]* %ctx_data_3)" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 177 'call' 'call_ret1' <Predicate = true> <Delay = 2.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 178 [1/1] (0.00ns)   --->   "%ctx_state_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 178 'extractvalue' 'ctx_state_0_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 179 [1/1] (0.00ns)   --->   "%ctx_state_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 179 'extractvalue' 'ctx_state_1_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 180 [1/1] (0.00ns)   --->   "%ctx_state_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 180 'extractvalue' 'ctx_state_2_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 181 [1/1] (0.00ns)   --->   "%ctx_state_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 181 'extractvalue' 'ctx_state_3_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 182 [1/1] (0.00ns)   --->   "%ctx_state_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 182 'extractvalue' 'ctx_state_4_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 183 [1/1] (0.00ns)   --->   "%ctx_state_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 183 'extractvalue' 'ctx_state_5_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "%ctx_state_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 184 'extractvalue' 'ctx_state_6_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 185 [1/1] (0.00ns)   --->   "%ctx_state_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7" [SHA_new/SHA_new/sha256_impl.c:143]   --->   Operation 185 'extractvalue' 'ctx_state_7_ret' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 186 [1/1] (1.76ns)   --->   "br label %6" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 186 'br' <Predicate = true> <Delay = 1.76>

State 8 <SV = 6> <Delay = 8.52>
ST_8 : Operation 187 [1/1] (0.00ns)   --->   "%i_3 = phi i3 [ 0, %.loopexit ], [ %i_6, %7 ]"   --->   Operation 187 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln147 = zext i3 %i_3 to i5" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 188 'zext' 'zext_ln147' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 189 [1/1] (1.13ns)   --->   "%icmp_ln147 = icmp eq i3 %i_3, -4" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 189 'icmp' 'icmp_ln147' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 190 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 191 [1/1] (1.65ns)   --->   "%i_6 = add i3 %i_3, 1" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 191 'add' 'i_6' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 192 [1/1] (0.00ns)   --->   "br i1 %icmp_ln147, label %8, label %7" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 192 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln149 = trunc i3 %i_3 to i2" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 193 'trunc' 'trunc_ln149' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 194 [1/1] (0.00ns)   --->   "%shl_ln1 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %trunc_ln149, i3 0)" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 194 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 195 [1/1] (1.78ns)   --->   "%sub_ln149 = sub i5 -8, %shl_ln1" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 195 'sub' 'sub_ln149' <Predicate = (!icmp_ln147)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln149_1 = zext i5 %sub_ln149 to i32" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 196 'zext' 'zext_ln149_1' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 197 [1/1] (4.42ns)   --->   "%lshr_ln149 = lshr i32 %ctx_state_0_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 197 'lshr' 'lshr_ln149' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 198 [1/1] (0.00ns)   --->   "%trunc_ln149_1 = trunc i32 %lshr_ln149 to i8" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 198 'trunc' 'trunc_ln149_1' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 199 [1/1] (4.42ns)   --->   "%lshr_ln150 = lshr i32 %ctx_state_1_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 199 'lshr' 'lshr_ln150' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln150 = trunc i32 %lshr_ln150 to i8" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 200 'trunc' 'trunc_ln150' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 201 [1/1] (0.96ns)   --->   "%xor_ln150 = xor i3 %i_3, -4" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 201 'xor' 'xor_ln150' <Predicate = (!icmp_ln147)> <Delay = 0.96> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln150 = zext i3 %xor_ln150 to i64" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 202 'zext' 'zext_ln150' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 203 [1/1] (0.00ns)   --->   "%hash_addr_1 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln150" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 203 'getelementptr' 'hash_addr_1' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 204 [1/1] (2.32ns)   --->   "store i8 %trunc_ln150, i8* %hash_addr_1, align 1" [SHA_new/SHA_new/sha256_impl.c:150]   --->   Operation 204 'store' <Predicate = (!icmp_ln147)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 205 [1/1] (4.42ns)   --->   "%lshr_ln151 = lshr i32 %ctx_state_2_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 205 'lshr' 'lshr_ln151' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 206 [1/1] (0.00ns)   --->   "%trunc_ln151 = trunc i32 %lshr_ln151 to i8" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 206 'trunc' 'trunc_ln151' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 207 [1/1] (0.00ns)   --->   "%or_ln = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %i_3)" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 207 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln151 = zext i4 %or_ln to i64" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 208 'zext' 'zext_ln151' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 209 [1/1] (0.00ns)   --->   "%hash_addr_2 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln151" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 209 'getelementptr' 'hash_addr_2' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 210 [1/1] (2.32ns)   --->   "store i8 %trunc_ln151, i8* %hash_addr_2, align 1" [SHA_new/SHA_new/sha256_impl.c:151]   --->   Operation 210 'store' <Predicate = (!icmp_ln147)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 211 [1/1] (4.42ns)   --->   "%lshr_ln152 = lshr i32 %ctx_state_3_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 211 'lshr' 'lshr_ln152' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln152 = trunc i32 %lshr_ln152 to i8" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 212 'trunc' 'trunc_ln152' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 213 [1/1] (4.42ns)   --->   "%lshr_ln153 = lshr i32 %ctx_state_4_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 213 'lshr' 'lshr_ln153' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 214 [1/1] (0.00ns)   --->   "%trunc_ln153 = trunc i32 %lshr_ln153 to i8" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 214 'trunc' 'trunc_ln153' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 215 [1/1] (4.42ns)   --->   "%lshr_ln154 = lshr i32 %ctx_state_5_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 215 'lshr' 'lshr_ln154' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 216 [1/1] (0.00ns)   --->   "%trunc_ln154 = trunc i32 %lshr_ln154 to i8" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 216 'trunc' 'trunc_ln154' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 217 [1/1] (4.42ns)   --->   "%lshr_ln155 = lshr i32 %ctx_state_6_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 217 'lshr' 'lshr_ln155' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 218 [1/1] (0.00ns)   --->   "%trunc_ln155 = trunc i32 %lshr_ln155 to i8" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 218 'trunc' 'trunc_ln155' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 219 [1/1] (4.42ns)   --->   "%lshr_ln156 = lshr i32 %ctx_state_7_ret, %zext_ln149_1" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 219 'lshr' 'lshr_ln156' <Predicate = (!icmp_ln147)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 220 [1/1] (0.00ns)   --->   "%trunc_ln156 = trunc i32 %lshr_ln156 to i8" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 220 'trunc' 'trunc_ln156' <Predicate = (!icmp_ln147)> <Delay = 0.00>
ST_8 : Operation 221 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 221 'ret' <Predicate = (icmp_ln147)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 2.32>
ST_9 : Operation 222 [1/1] (0.00ns)   --->   "%zext_ln149 = zext i3 %i_3 to i64" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 222 'zext' 'zext_ln149' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 223 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln149" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 223 'getelementptr' 'hash_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 224 [1/1] (2.32ns)   --->   "store i8 %trunc_ln149_1, i8* %hash_addr, align 1" [SHA_new/SHA_new/sha256_impl.c:149]   --->   Operation 224 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 225 [1/1] (0.00ns)   --->   "%sext_ln152 = sext i3 %xor_ln150 to i4" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 225 'sext' 'sext_ln152' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 226 [1/1] (0.00ns)   --->   "%zext_ln152 = zext i4 %sext_ln152 to i64" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 226 'zext' 'zext_ln152' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 227 [1/1] (0.00ns)   --->   "%hash_addr_3 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln152" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 227 'getelementptr' 'hash_addr_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 228 [1/1] (2.32ns)   --->   "store i8 %trunc_ln152, i8* %hash_addr_3, align 1" [SHA_new/SHA_new/sha256_impl.c:152]   --->   Operation 228 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 10 <SV = 8> <Delay = 4.10>
ST_10 : Operation 229 [1/1] (0.00ns)   --->   "%or_ln3 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 -2, i3 %i_3)" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 229 'bitconcatenate' 'or_ln3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln153 = zext i5 %or_ln3 to i64" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 230 'zext' 'zext_ln153' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 231 [1/1] (0.00ns)   --->   "%hash_addr_4 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln153" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 231 'getelementptr' 'hash_addr_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 232 [1/1] (2.32ns)   --->   "store i8 %trunc_ln153, i8* %hash_addr_4, align 1" [SHA_new/SHA_new/sha256_impl.c:153]   --->   Operation 232 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 233 [1/1] (1.78ns)   --->   "%add_ln154 = add i5 -12, %zext_ln147" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 233 'add' 'add_ln154' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln154 = zext i5 %add_ln154 to i64" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 234 'zext' 'zext_ln154' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 235 [1/1] (0.00ns)   --->   "%hash_addr_5 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln154" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 235 'getelementptr' 'hash_addr_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 236 [1/1] (2.32ns)   --->   "store i8 %trunc_ln154, i8* %hash_addr_5, align 1" [SHA_new/SHA_new/sha256_impl.c:154]   --->   Operation 236 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 11 <SV = 9> <Delay = 2.32>
ST_11 : Operation 237 [1/1] (0.00ns)   --->   "%sext_ln155 = sext i4 %or_ln to i5" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 237 'sext' 'sext_ln155' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln155 = zext i5 %sext_ln155 to i64" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 238 'zext' 'zext_ln155' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 239 [1/1] (0.00ns)   --->   "%hash_addr_6 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln155" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 239 'getelementptr' 'hash_addr_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 240 [1/1] (2.32ns)   --->   "store i8 %trunc_ln155, i8* %hash_addr_6, align 1" [SHA_new/SHA_new/sha256_impl.c:155]   --->   Operation 240 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 241 [1/1] (0.00ns)   --->   "%sext_ln156 = sext i3 %xor_ln150 to i5" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 241 'sext' 'sext_ln156' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln156 = zext i5 %sext_ln156 to i64" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 242 'zext' 'zext_ln156' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 243 [1/1] (0.00ns)   --->   "%hash_addr_7 = getelementptr [64 x i8]* %hash, i64 0, i64 %zext_ln156" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 243 'getelementptr' 'hash_addr_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 244 [1/1] (2.32ns)   --->   "store i8 %trunc_ln156, i8* %hash_addr_7, align 1" [SHA_new/SHA_new/sha256_impl.c:156]   --->   Operation 244 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 245 [1/1] (0.00ns)   --->   "br label %6" [SHA_new/SHA_new/sha256_impl.c:147]   --->   Operation 245 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.47ns
The critical path consists of the following:
	wire read on port 'ctx_datalen_read' (SHA_new/SHA_new/sha256_impl.c:106) [28]  (0 ns)
	'icmp' operation ('icmp_ln113', SHA_new/SHA_new/sha256_impl.c:113) [29]  (2.47 ns)

 <State 2>: 5.01ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen', SHA_new/SHA_new/sha256_impl.c:106) ('i', SHA_new/SHA_new/sha256_impl.c:121) [55]  (0 ns)
	'add' operation ('i', SHA_new/SHA_new/sha256_impl.c:121) [56]  (2.55 ns)
	'icmp' operation ('icmp_ln122', SHA_new/SHA_new/sha256_impl.c:122) [58]  (2.46 ns)

 <State 3>: 2.55ns
The critical path consists of the following:
	'call' operation ('call_ret', SHA_new/SHA_new/sha256_impl.c:126) to 'sha256_transform' [87]  (2.55 ns)

 <State 4>: 5.57ns
The critical path consists of the following:
	'add' operation ('add_ln134', SHA_new/SHA_new/sha256_impl.c:134) [175]  (2.55 ns)
	'select' operation ('select_ln134', SHA_new/SHA_new/sha256_impl.c:134) [176]  (0.698 ns)
	'store' operation ('store_ln139', SHA_new/SHA_new/sha256_impl.c:139) of variable 'trunc_ln139', SHA_new/SHA_new/sha256_impl.c:139 on array 'ctx_data_3' [203]  (2.32 ns)

 <State 5>: 4.87ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen', SHA_new/SHA_new/sha256_impl.c:106) ('i', SHA_new/SHA_new/sha256_impl.c:114) [131]  (0 ns)
	'add' operation ('i', SHA_new/SHA_new/sha256_impl.c:114) [132]  (2.55 ns)
	'getelementptr' operation ('ctx_data_3_addr_1', SHA_new/SHA_new/sha256_impl.c:117) [143]  (0 ns)
	'store' operation ('store_ln117', SHA_new/SHA_new/sha256_impl.c:117) of constant 0 on array 'ctx_data_3' [147]  (2.32 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	'phi' operation ('ctx_state_0_0', SHA_new/SHA_new/sha256_impl.c:126) with incoming values : ('p_read26', SHA_new/SHA_new/sha256_impl.c:106) ('ctx_state_0_ret4', SHA_new/SHA_new/sha256_impl.c:126) [164]  (0 ns)
	'call' operation ('call_ret1', SHA_new/SHA_new/sha256_impl.c:143) to 'sha256_transform' [213]  (1.77 ns)

 <State 7>: 2.55ns
The critical path consists of the following:
	'call' operation ('call_ret1', SHA_new/SHA_new/sha256_impl.c:143) to 'sha256_transform' [213]  (2.55 ns)

 <State 8>: 8.52ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', SHA_new/SHA_new/sha256_impl.c:147) [224]  (0 ns)
	'sub' operation ('sub_ln149', SHA_new/SHA_new/sha256_impl.c:149) [233]  (1.78 ns)
	'lshr' operation ('lshr_ln150', SHA_new/SHA_new/sha256_impl.c:150) [240]  (4.42 ns)
	'store' operation ('store_ln150', SHA_new/SHA_new/sha256_impl.c:150) of variable 'trunc_ln150', SHA_new/SHA_new/sha256_impl.c:150 on array 'hash' [245]  (2.32 ns)

 <State 9>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr', SHA_new/SHA_new/sha256_impl.c:149) [238]  (0 ns)
	'store' operation ('store_ln149', SHA_new/SHA_new/sha256_impl.c:149) of variable 'trunc_ln149_1', SHA_new/SHA_new/sha256_impl.c:149 on array 'hash' [239]  (2.32 ns)

 <State 10>: 4.1ns
The critical path consists of the following:
	'add' operation ('add_ln154', SHA_new/SHA_new/sha256_impl.c:154) [266]  (1.78 ns)
	'getelementptr' operation ('hash_addr_5', SHA_new/SHA_new/sha256_impl.c:154) [268]  (0 ns)
	'store' operation ('store_ln154', SHA_new/SHA_new/sha256_impl.c:154) of variable 'trunc_ln154', SHA_new/SHA_new/sha256_impl.c:154 on array 'hash' [269]  (2.32 ns)

 <State 11>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr_6', SHA_new/SHA_new/sha256_impl.c:155) [274]  (0 ns)
	'store' operation ('store_ln155', SHA_new/SHA_new/sha256_impl.c:155) of variable 'trunc_ln155', SHA_new/SHA_new/sha256_impl.c:155 on array 'hash' [275]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
